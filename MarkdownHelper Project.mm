<map version="freeplane 1.11.1">
<!--To view this file, download free mind mapping software Freeplane from https://www.freeplane.org -->
<attribute_registry SHOW_ATTRIBUTES="hide"/>
<node TEXT="MarkdownHelper project.mm" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" FOLDED="false" ID="ID_776012414" CREATED="1678218837471" MODIFIED="1678219051872" LINK="../../../../../Respaldo%20EF/ef/Documentos%20con%20macros/08%20Freemind%20Groovy/scripts/ScriptsEnComputadorYDesarrollosEdo%20v1.9.mm" MAX_WIDTH="7.1 cm"><hook NAME="MapStyle" background="#f9f9f8">
    <conditional_styles>
        <conditional_style ACTIVE="true" STYLE_REF="customMenuPackage" LAST="false">
            <attribute_exists_condition ATTRIBUTE="tbActions"/>
        </conditional_style>
        <conditional_style ACTIVE="true" STYLE_REF="Warning" LAST="false">
            <node_contains_condition VALUE=".EXIT_ON_CLOSE" ITEM="filter_any_text"/>
        </conditional_style>
        <conditional_style ACTIVE="true" STYLE_REF="menuButton" LAST="false">
            <hyper_link_contains TEXT="menuitem:"/>
        </conditional_style>
        <conditional_style ACTIVE="true" STYLE_REF="GroovyNode" LAST="false">
            <script_condition>
                <script>try { edofro.freeplane.groovynode.GN.isGroovyNode(node) } catch(e) { false }</script>
            </script_condition>
        </conditional_style>
        <conditional_style ACTIVE="true" STYLE_REF="hasGroovyNode" LAST="false">
            <script_condition>
                <script>(node.findAll() - node).any{
    edofro.freeplane.groovynode.GN.isGroovyNode(it)
}</script>
            </script_condition>
        </conditional_style>
        <conditional_style ACTIVE="true" STYLE_REF="file" LAST="false">
            <script_condition>
                <script>{node.link.file &amp;&amp; !node.link.uri?.fragment}</script>
            </script_condition>
        </conditional_style>
        <conditional_style ACTIVE="true" STYLE_REF="modifiedFile" LAST="false">
            <attribute_contains_condition ATTRIBUTE="modifiedFile" VALUE="true"/>
        </conditional_style>
        <conditional_style ACTIVE="true" STYLE_REF="containsNextTasks" LAST="true">
            <script_condition>
                <script>(node.findAll() - node)?.any{it.style.name == &apos;nextTask&apos;}</script>
            </script_condition>
        </conditional_style>
        <conditional_style ACTIVE="true" STYLE_REF="containsPendingTasks" LAST="true">
            <script_condition>
                <script>(node.findAll() - node)?.any{it.style.name == &apos;pendingTask&apos;}</script>
            </script_condition>
        </conditional_style>
        <conditional_style ACTIVE="false" STYLE_REF="hasGroovyNode" LAST="false">
            <any_descendant_condition>
                <script_condition>
                    <script>try { edofro.freeplane.groovynode.GN.isGroovyNode(node) } catch(e) { false }</script>
                </script_condition>
            </any_descendant_condition>
        </conditional_style>
    </conditional_styles>
    <properties edgeColorConfiguration="#808080ff,#ff0000ff,#0000ffff,#00ff00ff,#ff00ffff,#00ffffff,#7c0000ff,#00007cff,#007c00ff,#7c007cff,#007c7cff,#7c7c00ff" mapUsesOwnSaveOptions="true" BookmarksKeys="{}" followedTemplateLocation="template:/DFGHI%20Proyecto-Groovy-Tareas-MDI-menuButton%20(vis01).mm" pruebaDiccionario="ID_311366985|:|idDictionary|-|ID_323296041|:|ToM Actions|-|" show_icon_for_attributes="true" show_notes_in_map="false" save_modification_times="true" save_last_visited_node="default" show_note_icons="true" MDI_template="v0.0.13" mdhFreeMindmapPath="hhgf" save_folding="save_folding_if_map_is_changed" followedMapLastTime="1661362125221" fit_to_viewport="false"/>

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node" ID="ID_118736178" STYLE="oval" UNIFORM_SHAPE="true" VGAP_QUANTITY="24 pt">
<font SIZE="24"/>
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="bottom_or_right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="default" ID="ID_506805493" ICON_SIZE="12 pt" FORMAT_AS_HYPERLINK="false" COLOR="#484747" BACKGROUND_COLOR="#efefef" STYLE="bubble" SHAPE_HORIZONTAL_MARGIN="5 px" SHAPE_VERTICAL_MARGIN="2 px" NUMBERED="false" FORMAT="STANDARD_FORMAT" TEXT_ALIGN="DEFAULT" BORDER_WIDTH_LIKE_EDGE="false" BORDER_WIDTH="1.9 px" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#8fbcbb" BORDER_DASH_LIKE_EDGE="true" BORDER_DASH="SOLID" VGAP_QUANTITY="2 px" CHILD_NODES_LAYOUT="AUTO_CENTERED" MAX_WIDTH="10 cm" MIN_WIDTH="0 cm">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#bf5d3f" WIDTH="2" TRANSPARENCY="200" DASH="" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_506805493" STARTINCLINATION="45 pt;0 pt;" ENDINCLINATION="57 pt;30 pt;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
<font NAME="Dialog" SIZE="10" BOLD="false" STRIKETHROUGH="false" ITALIC="false"/>
<edge STYLE="horizontal" COLOR="#2e3440" WIDTH="1" DASH="SOLID"/>
<richcontent CONTENT-TYPE="plain/auto" TYPE="DETAILS"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/auto"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details" ID="ID_861824498" COLOR="#006666" BACKGROUND_COLOR="#a5cece" BACKGROUND_ALPHA="204" BORDER_WIDTH_LIKE_EDGE="false" BORDER_WIDTH="1.9 px" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#f0f0f0" BORDER_DASH_LIKE_EDGE="true">
<font NAME="MS UI Gothic" SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.attributes" ID="ID_199621123">
<font NAME="Lucida Sans" SIZE="8"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.note" ID="ID_810825098" COLOR="#004600" BACKGROUND_COLOR="#e8e8c8" TEXT_ALIGN="LEFT">
<icon BUILTIN="clock2"/>
<font NAME="Consolas" SIZE="11"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.floating" ID="ID_608497754">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.selection" ID="ID_358779365" COLOR="#eceff4" BACKGROUND_COLOR="#bf616a" STYLE="bubble" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#bf616a"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="bottom_or_right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="styles.important" ID="ID_915433779" BORDER_COLOR="#bf616a">
<icon BUILTIN="yes"/>
<arrowlink COLOR="#bf616a" TRANSPARENCY="255" DESTINATION="ID_915433779"/>
<font NAME="Ubuntu" SIZE="14"/>
<edge COLOR="#bf616a"/>
</stylenode>
<stylenode TEXT="baseFolder" ID="ID_1246743661" ICON_SIZE="20 pt" BACKGROUND_COLOR="#ffeca9">
<icon BUILTIN="emoji-1F4BD"/>
<font BOLD="true"/>
</stylenode>
<stylenode TEXT="newFolderImport" ID="ID_175940221" ICON_SIZE="16 pt" BACKGROUND_COLOR="#ffeca9">
<icon BUILTIN="emoji-1F4BE"/>
<font BOLD="true"/>
</stylenode>
<stylenode TEXT="freshNew" ID="ID_1804698977" ICON_SIZE="16 pt" BACKGROUND_COLOR="#ace500">
<icon BUILTIN="emoji-1F195"/>
</stylenode>
<stylenode TEXT="movedRenamed" ID="ID_851444256" ICON_SIZE="16 pt" BACKGROUND_COLOR="#ace500">
<icon BUILTIN="emoji-1F500"/>
</stylenode>
<stylenode TEXT="file" ID="ID_1717966522" BACKGROUND_COLOR="#bcc6e0" FORMAT="NO_FORMAT" BORDER_WIDTH="2.5 px">
<font NAME="Consolas"/>
</stylenode>
<stylenode TEXT="file_folder" ID="ID_1554270070" BORDER_WIDTH="3 px">
<icon BUILTIN="emoji-1F4C1"/>
</stylenode>
<stylenode TEXT="missing" ID="ID_1068634079" BACKGROUND_COLOR="#f28bb3" BORDER_WIDTH="3 px">
<icon BUILTIN="broken-line"/>
</stylenode>
<stylenode TEXT="modifiedFile" ID="ID_1027988377" BACKGROUND_COLOR="#ffcc00" BORDER_WIDTH="4 px" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#00659b">
<icon BUILTIN="emoji-002A-20E3"/>
<font ITALIC="true"/>
</stylenode>
<stylenode TEXT="locked" ID="ID_936671747" COLOR="#e1e1e1" BACKGROUND_COLOR="#6f4e4e" BORDER_WIDTH="2.5 px">
<icon BUILTIN="emoji-1F512"/>
</stylenode>
<stylenode TEXT="file_folder_with_icon" ID="ID_927144007">
<icon BUILTIN="emoji-1F4CD"/>
</stylenode>
<stylenode TEXT="GroovyNode" ID="ID_647184451" ICON_SIZE="16 pt" COLOR="#286b86" BACKGROUND_COLOR="#92c5d7" STYLE="bubble" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#286b86">
<icon BUILTIN="groovyNode/groovy-G"/>
<font NAME="Harlow Solid Italic" SIZE="12"/>
</stylenode>
<stylenode TEXT="Warning" ID="ID_191105537" BACKGROUND_COLOR="#f28bb3" BORDER_WIDTH="6 px" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#990000">
<icon BUILTIN="closed"/>
</stylenode>
<stylenode TEXT="hasGroovyNode" ID="ID_547619512">
<icon BUILTIN="groovyNode/groovy-G"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.topic" ID="ID_1141135899" COLOR="#18898b" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subtopic" ID="ID_738828078" COLOR="#cc3300" STYLE="fork">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subsubtopic" ID="ID_1196215838" COLOR="#669900">
<font NAME="Liberation Sans" SIZE="10" BOLD="true"/>
</stylenode>
<stylenode TEXT="nextTask" ID="ID_507772011" BACKGROUND_COLOR="#ffff33">
<icon BUILTIN="yes"/>
<icon BUILTIN="unchecked"/>
</stylenode>
<stylenode TEXT="pendingTask" ID="ID_1278203117" BACKGROUND_COLOR="#99ffff">
<icon BUILTIN="unchecked"/>
</stylenode>
<stylenode TEXT="completedTask" ID="ID_263222449" COLOR="#333333" BACKGROUND_COLOR="#cccccc">
<icon BUILTIN="checked"/>
<font ITALIC="true"/>
</stylenode>
<stylenode TEXT="discardedTask" ID="ID_1726907748" COLOR="#666666" BACKGROUND_COLOR="#cccccc">
<icon BUILTIN="Descartado"/>
<font ITALIC="true"/>
</stylenode>
<stylenode TEXT="containsNextTasks" ID="ID_661211039" BACKGROUND_COLOR="#eaea86">
<icon BUILTIN="emoji-1F7E5"/>
</stylenode>
<stylenode TEXT="containsPendingTasks" ID="ID_1486748518" BACKGROUND_COLOR="#b5d7d7">
<icon BUILTIN="emoji-23F9"/>
</stylenode>
<stylenode TEXT="Proyecto" ID="ID_643179356" COLOR="#003399">
<font NAME="SansSerif" SIZE="12" BOLD="true" ITALIC="false"/>
<edge COLOR="#003399" WIDTH="6"/>
</stylenode>
<stylenode TEXT="Grupito" ID="ID_1085570108">
<cloud COLOR="#e4e6ff" SHAPE="ROUND_RECT"/>
</stylenode>
<stylenode TEXT="Iniciativa" ID="ID_604763806">
<icon BUILTIN="attach"/>
<font BOLD="true"/>
</stylenode>
<stylenode TEXT="Organizador" ID="ID_235021673">
<icon BUILTIN="folder"/>
<font BOLD="true"/>
</stylenode>
<stylenode TEXT="Minuta" ID="ID_461928519">
<icon BUILTIN="list"/>
<cloud COLOR="#69a1f8" SHAPE="ROUND_RECT"/>
</stylenode>
<stylenode TEXT="Acuerdo" ID="ID_1601320744" BACKGROUND_COLOR="#66ff33">
<icon BUILTIN="flag-black"/>
</stylenode>
<stylenode TEXT="numerado" ID="ID_1268287532" BACKGROUND_COLOR="#add1ea" STYLE="bubble" NUMBERED="true" MAX_WIDTH="200 px" MIN_WIDTH="200 px"/>
<stylenode TEXT="con duda" ID="ID_801703559" BACKGROUND_COLOR="#ffff66">
<icon BUILTIN="help"/>
<font BOLD="false" ITALIC="true"/>
</stylenode>
<stylenode TEXT="menuButton" ID="ID_398428156" COLOR="#b2dfff" BACKGROUND_COLOR="#3f657f" STYLE="bubble" BORDER_WIDTH="3 px" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#0097ff"/>
<stylenode TEXT="project" ID="ID_1147771750" COLOR="#e1e19c" BACKGROUND_COLOR="#1c1c63">
<icon BUILTIN="emoji-1F5C2"/>
<attribute NAME="projectCode" VALUE=""/>
</stylenode>
<stylenode TEXT="MarkdownHelperNode" ID="ID_965152203" COLOR="#dbffdb" BACKGROUND_COLOR="#333333" STYLE="rectangle" BORDER_WIDTH="4 px" BORDER_COLOR_LIKE_EDGE="false" BORDER_COLOR="#009000">
<icon BUILTIN="emoji-1F343"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown"/>
</stylenode>
<stylenode TEXT="customMenuPackage" ID="ID_1721666989" ICON_SIZE="20 pt" STYLE="rectangle" SHAPE_HORIZONTAL_MARGIN="5 px" SHAPE_VERTICAL_MARGIN="2 px" BORDER_WIDTH="3 px" BORDER_COLOR="#ae5528">
<icon BUILTIN="emoji-1F4E6"/>
<font BOLD="true" ITALIC="true"/>
</stylenode>
<stylenode TEXT="tasksBucket" ID="ID_1197921882">
<icon BUILTIN="emoji-1F5C3"/>
<font BOLD="true"/>
</stylenode>
<stylenode TEXT="maybeTask" ID="ID_1519585836" BACKGROUND_COLOR="#cefcfc">
<icon BUILTIN="emoji-23FA"/>
</stylenode>
<stylenode TEXT="milestone" ID="ID_1534665710">
<icon BUILTIN="emoji-1F6A9"/>
<font BOLD="true"/>
</stylenode>
<stylenode TEXT="fullMarkDown" ID="ID_897231475" FORMAT="markdownPatternFormat" BORDER_DASH="SOLID"><richcontent CONTENT-TYPE="plain/markdown" TYPE="DETAILS"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown"/>
</stylenode>
<stylenode TEXT="notMovedRenamed" ID="ID_1821863738" BACKGROUND_COLOR="#f28bb3" BORDER_WIDTH="3 px">
<icon BUILTIN="emoji-26D4"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="bottom_or_right" STYLE="bubble">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" ID="ID_1209359852" COLOR="#ffffff" BACKGROUND_COLOR="#484747" STYLE="bubble" SHAPE_HORIZONTAL_MARGIN="10 pt" SHAPE_VERTICAL_MARGIN="15 pt" TEXT_ALIGN="CENTER" MAX_WIDTH="5 cm" MIN_WIDTH="3 cm">
<font SIZE="18"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" ID="ID_144205114" COLOR="#eceff4" BACKGROUND_COLOR="#d08770" STYLE="bubble" SHAPE_HORIZONTAL_MARGIN="8 pt" SHAPE_VERTICAL_MARGIN="5 pt">
<font SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" ID="ID_159773648" COLOR="#3b4252" BACKGROUND_COLOR="#ebcb8b">
<font SIZE="14"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" COLOR="#2e3440" BACKGROUND_COLOR="#a3be8c">
<font SIZE="12"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" COLOR="#2e3440" BACKGROUND_COLOR="#b48ead">
<font SIZE="11"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,5" COLOR="#e5e9f0" BACKGROUND_COLOR="#5e81ac">
<font SIZE="11"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,6" BACKGROUND_COLOR="#81a1c1">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,7" BACKGROUND_COLOR="#88c0d0">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,8" BACKGROUND_COLOR="#8fbcbb">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,9" BACKGROUND_COLOR="#d8dee9">
<font SIZE="10"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,10" BACKGROUND_COLOR="#e5e9f0">
<font SIZE="9"/>
</stylenode>
</stylenode>
</stylenode>
</map_styles>
</hook>
<node TEXT="Freeplane_MarkdownHelper" STYLE_REF="baseFolder" POSITION="bottom_or_right" ID="ID_1195290008" CREATED="1616167740176" MODIFIED="1678218782849" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/" VGAP_QUANTITY="2 px">
<icon BUILTIN="emoji-1F4B2"/>
<attribute NAME="nameFilter" VALUE=""/>
<attribute NAME="maxDepth" VALUE="-1" OBJECT="org.freeplane.features.format.FormattedNumber|-1|#0.####"/>
<attribute NAME="markWhenMoved" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="checkIfReallyBroken" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="MarkdownRootFolder" VALUE="file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/" OBJECT="java.net.URI|file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/"/>
<attribute NAME="lastModifiedTime" VALUE="24-12-21 11:43" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-24T11:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="24-12-21 12:17" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-24T12:17-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="12-03-21 14:53" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-12T14:53-0300|datetime"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<attribute NAME="projectCode" VALUE="Freepla.Markdow.Helper"/>
<attribute NAME="linkType" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      null
    </p>
    <p>
      
    </p>
    <p>
      ================ MDI =====================
    </p>
    <p>
      
    </p>
    <p>
      The import of files and folders can be adapted by providing various options in the attributes of the BaseFolder node:
    </p>
    <p>
      
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;-- nameFilter:
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;A filter to perform on the name of traversed files. If set, only files which match are brought.
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;This option allowes four types of inputs:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;1. nothing (empty) means no filtering (default)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;2. regex&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;- example:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;~/.*\.mp3/
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;3. 'simplified' regex&#xa0;&#xa0;&#xa0;&#xa0;- example:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;~.*\.mp3
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;4. string with *&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;- example:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;*.mp3&#xa0;&#xa0;&#xa0;&#xa0;(equivalent to regex&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;~/(?i).*\.mp3/&#xa0;&#xa0;)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;5. list of strings with * and ;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;- example:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;*.mp3;*.png&#xa0;&#xa0;&#xa0;(equivalent to regex&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;~/(?i)(.*\.mp3|.*\.png)/&#xa0;&#xa0;)
    </p>
    <p>
      
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;-- maxDepth:
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;The maximum number of directory levels when recursing
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(default is -1 which means no limit, set to 0 for no recursion)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;-- markWhenMoved:
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;change styles to moved/renamed file Nodes
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;set to:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;0 : to change style only if node hasn't a previous one (default),
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;1 : to allways change the style,
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;-1 : to never change the style
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;-- checkIfReallyBroken:
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Check if existing nodes pointing to filtered files still exist.
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;This option is only useful if you defined a nameFilter before
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;but in the map there are also some files that doesn't match
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this filter definition
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(for example if you brought them manually or import them
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;before the actual namefilter setting)
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;- default is 0 which means don't check --&gt; Mark node as missing also if it doesn't match the current filter,
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;- set to 1 to extra check if a not matching file still exists in drive
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      ==========================================
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;
    </p>
    <p>
      # MDI:&#xa0;&#xa0;linkType:
    </p>
    <p>
      
    </p>
    <p>
      Define if you want to use Absolute or Relative&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      links for files and folders.
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;set to:&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      
    </p>
    <p>
      0 : to use Absolute links
    </p>
    <p>
      
    </p>
    <p>
      1 : to use Relative links
    </p>
    <p>
      
    </p>
    <p>
      -----------------------------------------------------
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;
    </p>
  </body>
</html></richcontent>
<node TEXT="otras ubicaciones posibles" STYLE_REF="locked" ID="ID_1584603410" CREATED="1630513133490" MODIFIED="1630514002444"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      en orden de prioridad
    </p>
  </body>
</html></richcontent>
<node TEXT="Freeplane_MarkdownHelper" ID="ID_127779638" CREATED="1616167740176" MODIFIED="1678218756231" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/" VGAP_QUANTITY="2 px"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      notebook edo
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="24-12-21 11:43" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-24T11:43-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="24-12-21 12:17" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-24T12:17-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="12-03-21 14:53" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-12T14:53-0300|datetime"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
</node>
<node TEXT="Freeplane_MarkdownHelper" STYLE_REF="missing" ID="ID_1967015273" CREATED="1631894297308" MODIFIED="1640359081387" LINK="file:/D:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      disco externo en D:
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="Freeplane_MarkdownHelper" POSITION="bottom_or_right" ID="ID_420654848" CREATED="1631894297308" MODIFIED="1678219350900" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/">
<icon BUILTIN="emoji-27A1"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      disco externo en E:
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="files" ID="ID_533942812" CREATED="1640356415245" MODIFIED="1640356420541">
<node TEXT=".gitattributes" ID="ID_1786907588" CREATED="1616167740177" MODIFIED="1678219437872" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/.gitattributes">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="68" OBJECT="org.freeplane.features.format.FormattedNumber|68|#,##0"/>
</node>
<node TEXT="delete" FOLDED="true" ID="ID_156567760" CREATED="1616687440434" MODIFIED="1678219437881" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/delete/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="dialogo MD con save.groovy" ID="ID_769244203" CREATED="1616687440536" MODIFIED="1678219437882" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/delete/dialogo%20MD%20con%20save.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="12.729" OBJECT="org.freeplane.features.format.FormattedNumber|12729|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      import java.awt.BorderLayout as BL
    </p>
    <p>
      import javax.swing.filechooser.FileNameExtensionFilter
    </p>
    <p>
      
    </p>
    <p>
      estilo&nbsp;&nbsp;&nbsp;= 'MarkdownHelperNode' //TODO: usar dato de librería
    </p>
    <p>
      Map icon = [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leaf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F343' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignoreNode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-26D4'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignoreContent&nbsp;&nbsp;&nbsp;: 'emoji-1F648' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newLine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-21A9'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F522' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bullet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F537' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;centered&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2194'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alignRight&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-27A1'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comment&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4AC' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2714'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isTask&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F532' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeFirst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveIcon_0_Action',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeLast&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveIconAction',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeAll&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveAllIconsAction',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2753',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4BE',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoMD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F519',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toPlain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4DD',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;]
    </p>
    <p>
      
    </p>
    <p>
      // definiciones botones iconos
    </p>
    <p>
      //TODO: usar datos de libreria para iconos ( y acciones)
    </p>
    <p>
      def tbActions = ['RemoveIcon_0_Action', 'RemoveIconAction', 'RemoveAllIconsAction', 'IconAction.emoji-1F343', 'IconAction.emoji-1F648', 'IconAction.emoji-26D4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-1F522', 'IconAction.emoji-1F537', 'IconAction.emoji-27A1', 'IconAction.emoji-2194', 'IconAction.emoji-21A9', 'IconAction.emoji-1F4AC'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-2714', 'IconAction.emoji-1F532']
    </p>
    <p>
      def tbIcons&nbsp;&nbsp;&nbsp;= ['RemoveIcon_0_Action', 'RemoveIconAction', 'RemoveAllIconsAction', 'IconAction.emoji-1F343', 'IconAction.emoji-1F648', 'IconAction.emoji-26D4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-1F522', 'IconAction.emoji-1F537', 'IconAction.emoji-27A1', 'IconAction.emoji-2194', 'IconAction.emoji-21A9', 'IconAction.emoji-1F4AC'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-2714', 'IconAction.emoji-1F532']
    </p>
    <p>
      def tbLabels&nbsp;&nbsp;= ['Remove first icon', 'Remove Last Icon', 'Remove all icons'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, &quot;behave as leaf node (don't look at its descendant)&quot;, 'ignore content', 'ignore node and its descendant'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'numbered list', 'bulleted list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'align right', 'align centered'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'add new line'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'comment (creo que no debe ir)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'completed', 'is Task']
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // definiciones botones nodos MD
    </p>
    <p>
      def formulas&nbsp;&nbsp;= ['= MarkDownHelper.document(node)','= MarkDownHelper.TOC(node)','= MarkDownHelper.webLink(node)','= MarkDownHelper.webImageLink(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.fileLink(node)','= MarkDownHelper.imageLink(node)','= MarkDownHelper.list(node)','= MarkDownHelper.plainTaskList(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.nestedTaskList(node)','= MarkDownHelper.table(node)','= MarkDownHelper.codeBlock(node)','= MarkDownHelper.textBlock(node)','----']
    </p>
    <p>
      def labels&nbsp;&nbsp;&nbsp;&nbsp;= ['Markdown document.md','ToC','web link','web Image'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'link to local file','local image','list','plain task list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'nested task list','table','code block','text block','horizontal line']
    </p>
    <p>
      def atributos = [['headersToUnderline':2,'hideFolded':false,'headerNumbering':true,'topHeadersNumbered':false,'topHeaderStartingNumber':1,'fileLinksRelative':false],['TOClevels':2],[:]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,[:],[:],[:],[:],[:],[:],[:],[:],[:],[:]]
    </p>
    <p>
      
    </p>
    <p>
      //return &quot; F: ${formulas.size()} - L: ${labels.size()} - L: ${atributos.size()}&quot;
    </p>
    <p>
      
    </p>
    <p>
      dialogName = 'MarkDownHelperDialog'
    </p>
    <p>
      swingBuilder = new SwingBuilder()
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- botones MD ---------------------------------------------------------------------------------
    </p>
    <p>
      def creaBotonMD(label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : label,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//icon: includeIcon?menuUtils.getMenuItemIcon(iconos[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;Adds a '${label}' node to the map&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//minimumSize: minDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalAlignment:SwingConstants.LEFT,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,5,0,5),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(label, formula, atributos)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def creaContenidoMD(formulas, labels, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBotonMD(labels[i], f, atributos[i])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(node,labels[i], f, atributos[i])
    </p>
    <p>
      //}
    </p>
    <p>
      
    </p>
    <p>
      def crearNodoMD(label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def nodo = c.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;nodo.createChild(label)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.style.name = estilo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.attributes = atributos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.noteText = formula
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//TODO: cambiar noteContentType a 'Markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- botones Iconos ---------------------------------------------------------------------------------
    </p>
    <p>
      def creaBotonIcon(acc, ic, lab){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon(ic),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: lab,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;menuUtils.executeMenuItems([acc])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def creaContenidoIcon(actions, icons, labels){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,5)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolBar(
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new FlowLayout(FlowLayout.LEFT, 0, 0)
    </p>
    <p>
      //
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,layout: new GridLayout(0,1)
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions.eachWithIndex{ a, j -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBotonIcon(a, icons[j], labels[j])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //region:
    </p>
    <p>
      def getNodoMarkdown(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def nMD = n.pathToRoot.find{it.attributes.containsKey('headerNumbering')}
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;ui.informationMessage(nMD.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return nMD
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def lastNodeID
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def panelInferior = swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,4)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//HELP
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.help),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'Help information about selected Markdown Node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//TODO: Help action
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//copy to node
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.toPlain),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'copy Markdown to new node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def srcN = c.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def i = srcN.parent.getChildPosition(srcN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;srcN.parent.createChild(i+1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.text = srcN.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.note = srcN.note
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.icons.add(icon.leaf)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//ir a nodo Markdown
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.gotoMD),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'jump to Markdown document node and back',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def srcN = c.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nMD = getNodoMarkdown(srcN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//ui.informationMessage(nMD.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nMD) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = ' No Markdown document node found!!'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastNodeID){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN = srcN.map.node(lastNodeID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(srcN.equals(nMD)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastNodeID){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN = srcN.map.node(lastNodeID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(nMD)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastNodeID = srcN.id
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//ir a nodo Markdown
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.save),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'save note to file',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveFile(c.selected)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- Dialogo ---------------------------------------------------------------------------------
    </p>
    <p>
      def dialogo = ui.frame.ownedWindows.find{it.name == dialogName &amp;&amp; it.type.toString()=='NORMAL'}
    </p>
    <p>
      
    </p>
    <p>
      if(!dialogo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo=' se crea dialogo'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo = swingBuilder.dialog(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title : 'Markdown helper',
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:'myDialog',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: dialogName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modal:false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locationRelativeTo:ui.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimumSize: new Dimension(30,70),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;owner:ui.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack : true,
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show: true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;) {}
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = ' se reutiliza dialogo'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo.getContentPane().removeAll()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      dialogo.getContentPane().setLayout(new BorderLayout())
    </p>
    <p>
      dialogo.add(creaContenidoIcon(tbActions, tbIcons, tbLabels), BorderLayout.PAGE_START)
    </p>
    <p>
      dialogo.add(creaContenidoMD(formulas, labels, atributos), BorderLayout.CENTER)
    </p>
    <p>
      dialogo.add(panelInferior, BorderLayout.PAGE_END)
    </p>
    <p>
      dialogo.pack()
    </p>
    <p>
      dialogo.show()
    </p>
    <p>
      
    </p>
    <p>
      //Region: ---------------------------- MDI ----------------------------------------
    </p>
    <p>
      def correctFileName(s){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def t = s.replace('\n','_').replace('\t','_').replace('/','_').replace('\\','_').replace('__','_')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return t.toString()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //Region: ---------------------------- FileChooser ----------------------------------------
    </p>
    <p>
      def getFileFromDialog(fileName){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def chooser = new SwingBuilder().fileChooser(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogTitle: &quot;Save Markdown document to file&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileSelectionMode: JFileChooser.FILES_ONLY,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileFilter: new FileNameExtensionFilter('Markdown', 'md', 'mkd', 'mkdn', 'mdwn', 'mdown', 'markdown', 'mdtxt', 'mdtext', 'text', 'Rmd', 'txt'),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mdExtensions = chooser.fileFilter.extensions
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def i&nbsp;&nbsp;&nbsp;&nbsp;= fileName.lastIndexOf('.')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def ext&nbsp;&nbsp;= i&gt;0?fileName.substring(i+1):null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;fileName = fileName + (mdExtensions.contains(ext)?'':'.md')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;chooser.selectedFile =&nbsp;&nbsp;new File(fileName)
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;File file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;switch ( chooser.showSaveDialog() )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.APPROVE_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = chooser.selectedFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.CANCEL_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.ERROR_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return file
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def saveFile(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// getting file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def texto = nodo.note?.plain
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if (texto &amp;&amp; texto != ''){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nodo.link?.uri?.scheme == 'file'){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = nodo.link.file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fPath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fPath = MDI.obtainPathFromMap(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e){}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fPath &amp;&amp; fPath != ''){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fileName = correctFileName(nodo.text)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = new File(fPath + fileName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!file) {file = getFileFromDialog(correctFileName(nodo.text))}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = getFileFromDialog(correctFileName(nodo.text))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = 'no Note in selected node'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'No tiene nota'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//saving file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if (file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( ui.showConfirmDialog(null, &quot;export text to: \n\n&nbsp;&nbsp;${file} ?&quot;, &quot;Overwrite/save file with node's note?&quot;, 2, 2)==0) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.setText(texto.toString(), 'UTF-8')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.link.file = file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.text = file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = &quot; Note's export aborted&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = 'no file defined. Not saved!!'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="testmap formula y markdown.mm" ID="ID_89960439" CREATED="1616687440932" MODIFIED="1678219437889" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/delete/testmap%20formula%20y%20markdown.mm">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="31.840" OBJECT="org.freeplane.features.format.FormattedNumber|31840|#,##0"/>
</node>
<node TEXT="markdown-cheat-sheet.md" ID="ID_187232057" CREATED="1619305739764" MODIFIED="1678219437895" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/delete/markdown-cheat-sheet.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.714" OBJECT="org.freeplane.features.format.FormattedNumber|1714|#,##0"/>
</node>
<node TEXT="markdown-cheatsheet-online.pdf" ID="ID_477874247" CREATED="1619305739772" MODIFIED="1678219437902" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/delete/markdown-cheatsheet-online.pdf">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.939.002" OBJECT="org.freeplane.features.format.FormattedNumber|1939002|#,##0"/>
</node>
<node TEXT="borrar.txt" STYLE_REF="missing" ID="ID_876510337" CREATED="1658512951311" MODIFIED="1678218785321" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/delete/borrar.txt"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      esta es una prueba. se debe borrar
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="22-07-22 14:03" OBJECT="org.freeplane.features.format.FormattedDate|2022-07-22T14:03-0400|datetime"/>
<attribute NAME="lastAccessTime" VALUE="26-07-22 09:16" OBJECT="org.freeplane.features.format.FormattedDate|2022-07-26T09:16-0400|datetime"/>
<attribute NAME="creationTime" VALUE="22-07-22 14:03" OBJECT="org.freeplane.features.format.FormattedDate|2022-07-22T14:03-0400|datetime"/>
<attribute NAME="fileSize" VALUE="34" OBJECT="org.freeplane.features.format.FormattedNumber|34|#,##0"/>
</node>
</node>
<node TEXT="MarkdownHelper" STYLE_REF="file_folder" ID="ID_1328091559" CREATED="1616167740193" MODIFIED="1678219437917" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:02" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:02-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="8.192" OBJECT="org.freeplane.features.format.FormattedNumber|8192|#,##0"/>
<node TEXT="lib" STYLE_REF="Organizador" ID="ID_149266096" CREATED="1616167740193" MODIFIED="1651623144537">
<attribute NAME="projectCode" VALUE="lib"/>
<node TEXT="src" ID="ID_1374156985" CREATED="1616167740193" MODIFIED="1678219437926" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/" VGAP_QUANTITY="2 px">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="main" ID="ID_1598232149" CREATED="1616167740193" MODIFIED="1678219437934" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/" VSHIFT_QUANTITY="-0.75 pt">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="groovy" ID="ID_1065735620" CREATED="1616167740193" MODIFIED="1678219437942" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/">
<icon BUILTIN="bookmarks/Bookmark 1"/>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="edofro" ID="ID_1959450884" CREATED="1651938857589" MODIFIED="1651939221004"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package
    </p>
  </body>
</html></richcontent>
<node TEXT="MarkDownHelper" ID="ID_1950025974" CREATED="1651938857643" MODIFIED="1651939232859"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package
    </p>
  </body>
</html></richcontent>
<node TEXT="" ID="ID_244510910" CREATED="1616168858564" MODIFIED="1616168858631">
<hook NAME="FirstGroupNode"/>
</node>
<node TEXT="MarkdownDialog.groovy" FOLDED="true" ID="ID_568234970" CREATED="1616167740193" MODIFIED="1678219437987" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/MarkdownDialog.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="31.578" OBJECT="org.freeplane.features.format.FormattedNumber|31578|#,##0"/>
<attribute NAME="projectCode" VALUE="Markdown.Dialog.groovy"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package edofro.MarkDownHelper
    </p>
    <p>
      
    </p>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      import java.awt.BorderLayout as BL
    </p>
    <p>
      import javax.swing.filechooser.FileNameExtensionFilter
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import org.freeplane.plugin.script.proxy.ScriptUtils
    </p>
    <p>
      import org.freeplane.core.util.MenuUtils
    </p>
    <p>
      import org.freeplane.features.mode.Controller
    </p>
    <p>
      import org.freeplane.plugin.script.FreeplaneScriptBaseClass.ConfigProperties
    </p>
    <p>
      import org.freeplane.core.util.HtmlUtils
    </p>
    <p>
      
    </p>
    <p>
      import java.awt.event.ActionEvent
    </p>
    <p>
      import java.awt.event.KeyEvent
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      class MarkdownDialog{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: definitions
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String dialogName&nbsp;&nbsp;&nbsp;= 'MarkDownHelperDialog'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;iconsSet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static String lastNodeID
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static JDialog dialogo
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// definiciones botones iconos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList tbIconKeys = [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//'removeFirst', 'removeLast', 'removeAll',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'leaf', 'ignoreContent', 'ignoreNode'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'number', 'bullet'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'alignRight', 'centered'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'newLine'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'isTask', 'completed']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList tbLabels&nbsp;&nbsp;= [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//'Remove first icon', 'Remove Last Icon', 'Remove all icons',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;behave as leaf node (don't look at its descendant)&quot;, 'ignore content', 'ignore node and its descendant'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'numbered list', 'bulleted list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'align right', 'align centered'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'add new line'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'is Task', 'completed']
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// definiciones botones nodos MD
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList formulasMD&nbsp;&nbsp;= ['= edofro.MarkDownHelper.MDH.document(node)','= edofro.MarkDownHelper.MDH.TOC(node)','= edofro.MarkDownHelper.MDH.webLink(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= edofro.MarkDownHelper.MDH.webImageLink(node)','= edofro.MarkDownHelper.MDH.fileLink(node,true)','= edofro.MarkDownHelper.MDH.imageLink(node,true)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= edofro.MarkDownHelper.MDH.list(node)','= edofro.MarkDownHelper.MDH.plainTaskList(node)','= edofro.MarkDownHelper.MDH.nestedTaskList(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= edofro.MarkDownHelper.MDH.table(node)','= edofro.MarkDownHelper.MDH.codeBlock(node)','= edofro.MarkDownHelper.MDH.textBlock(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'-----','= edofro.MarkDownHelper.MDH.comment(node)']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList labelsMD&nbsp;&nbsp;&nbsp;&nbsp;= ['Markdown document.md','ToC','web link'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'web Image','link to local file','local image'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'list','plain task list','nested task list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'table','code block','text block'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'horizontal line','Comment']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList atributosMD = [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;&nbsp;&nbsp;&nbsp;'headersToUnderline':'markdownHelper_headersToUnderline,int'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'hideFolded':'markdownHelper_hideFolded,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'headerNumbering':'markdownHelper_headerNumbering,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'topHeadersNumbered':'markdownHelper_topHeadersNumbered,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'topHeaderStartingNumber':'markdownHelper_topHeaderStartingNumber,int'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'fileLinksRelative':'markdownHelper_fileLinksRelative,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'lineOverHeader'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:'markdownHelper_lineOverHeader,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'ignoreHeaderDetails'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:'markdownHelper_ignoreHeaderDetails,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'ignoreHeaderNotes'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:'markdownHelper_ignoreHeaderNotes,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'ignoreLeafDetails'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:'markdownHelper_ignoreLeafDetails,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'ignoreHeaderImageObjects':'markdownHelper_ignoreHeaderImageObjects,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,[
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'TOClevels':'markdownHelper_TOClevels,int'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'TOCindent':'markdownHelper_TOCindent,bool'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,[:],[:],[:],[:],[:],[:],[:],[:],[:],[:],[:],[:]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// definiciones botones nodos MD
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList formulasWk&nbsp;&nbsp;= [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'= edofro.MarkDownHelper.WikiTools.currentLocation(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, '= edofro.MarkDownHelper.WikiTools.docsInside(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, '= edofro.MarkDownHelper.WikiTools.topDocsList(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, '= edofro.MarkDownHelper.WikiTools.structuredDocsList(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, '= edofro.MarkDownHelper.WikiTools.linkToWikipage(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, '= edofro.MarkDownHelper.WikiTools.previousAndNext(node)']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList labelsWk&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;[
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'currentLocation(1)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'docsInside(1)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'topDocsList(2)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'structuredDocsList(2)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'linkToWikipage'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'previousAndNext(1)']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList atributosWk = [[:],[:],[:],[:],[:],[:]]&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//return &quot; F: ${formulas.size()} - L: ${labels.size()} - L: ${atributos.size()}&quot;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final SwingBuilder swingBuilder = new SwingBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ConfigProperties config = new ConfigProperties()
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: --- botones MD ---------------------------------------------------------------------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static creaBotonMD(label, formula, atributs){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def atribs2 = atributs.collectEntries{k,v -&gt; [k,getConfigValue(v)]}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def xtraTip = getXtraTip(label)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : label,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//icon: includeIcon?MenuUtils.getMenuItemIcon(iconos[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;Adds a '${label}' node to the map$xtraTip&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//minimumSize: minDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalAlignment:SwingConstants.LEFT,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,5,0,5),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(label, formula, atribs2)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getXtraTip(lbl){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def result
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (lbl[-3..-1]){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case '(1)':
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = &quot;. You can add two childnodes to it to specify texts to go before and after the node's result. These are showed only if this node builds some content&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case '(2)':
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = &quot;. If you add an icon (first icon), it shows only the MDH doc nodes that have that icon too&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result =''
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getConfigValue(prop){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def p = prop.split(',')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def result
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (p[1].toLowerCase()){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 'bool':
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = config.getBooleanProperty(p[0])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 'int':
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = config.getIntProperty(p[0])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 'string':
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = config.getProperty(p[0])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static creaContenidoMD(formulas, labels, atribu){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.scrollPane(){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBotonMD(labels[i], f, atribu[i])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static crearNodoMD(label, formula, atribs){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nodos = [] + ScriptUtils.c().selecteds
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( nodos.size() &gt; 1 &amp;&amp; areNeighbours(nodos) ) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def papa = nodos[0].parent
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def index = papa.children.findIndexOf{it in nodos}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN =&nbsp;&nbsp;papa.createChild(index)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.text = label
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodos*.moveTo(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN =&nbsp;&nbsp;ScriptUtils.c().selected.createChild(label)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.style.name = MDH.MDNodeStyle
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.attributes = atribs
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.noteText = formula
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static areBrothers(nodos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return nodos*.parent.unique().size() == 1
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static areNeighbours(nodos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return areBrothers(nodos) &amp;&amp;&nbsp;&nbsp;areContinous(nodos)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static areContinous(nodos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ((nodos*.next + nodos*.previous).unique() - nodos).size() == 2
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static addMissingAttributesToNode(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def namesAttrNode = nodo.attributes.names
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(atributosMD + atributosWk).each{ a -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def namesAttr = a.keySet()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!namesAttrNode.disjoint(namesAttr)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def missingAttrNames = namesAttr - namesAttrNode
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def missingAttr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= a.findAll{it.key in missingAttrNames}.collectEntries{k,v -&gt; [k,getConfigValue(v)]}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (missingAttr) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.attributes&nbsp;&nbsp;= nodo.attributes.map &lt;&lt; missingAttr
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: --- botones Iconos ---------------------------------------------------------------------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static creaBotonIcon(icono, lab){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon(iconAction(icono)),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: lab,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nodos = [] + ScriptUtils.c().selecteds
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodos.each{n-&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n.icons?.icons.contains(icono)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.icons.remove(icono)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.icons.add(icono)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//MenuUtils.executeMenuItems([acc])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static creaContenidoIcon(iconKeys, labels){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def actions&nbsp;&nbsp;= iconKeys.collect{key -&gt; MDH.icon[key][iconsSet]}&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,5)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolBar(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new FlowLayout(FlowLayout.LEFT, 0, 0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,layout: new GridLayout(0,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions.eachWithIndex{ a, j -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBotonIcon(a, labels[j])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static iconAction(icono){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return icono.toLowerCase().endsWith('action')?icono:'IconAction.' + icono
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: getNodoMarkdown
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getNodoMarkdown(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nMD = n.pathToRoot.reverse().find{it.attributes.containsKey('headerNumbering')}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;UITools.informationMessage(nMD.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return nMD
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: --- panel inferior ----------------------------------------
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static creaContenidoPanelInferior(esNuevo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def panelInferior = swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,5)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//HELP
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.help[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'Help information about selected Markdown Node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//TODO: Help action
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//copy to node
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.toPlain[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'copy Markdown to new node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def srcN = ScriptUtils.c().selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def i = srcN.parent.getChildPosition(srcN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;srcN.parent.createChild(i+1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.text = srcN.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.noteContentType = 'markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.note = srcN.note
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.icons.add(MDH.icon.leaf[iconsSet])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//ir a nodo Markdown
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.gotoMD[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'jump to Markdown document node and back',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def srcN = ScriptUtils.c().selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nMD = getNodoMarkdown(srcN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//UITools.informationMessage(nMD.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nMD) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().statusInfo = ' No Markdown document node found!!'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastNodeID){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN = srcN.map.node(lastNodeID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(srcN.equals(nMD)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastNodeID){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN = srcN.map.node(lastNodeID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().select(nMD)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastNodeID = srcN.id
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//save Markdown to file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.save[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'save note to file',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveFile(ScriptUtils.c().selected)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//path to MD root folder
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.rootFolder[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;Adds attributes to the selected node containing a proposed uri as Root Directory&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nodo = ScriptUtils.c().selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( UITools.showConfirmDialog(null, &quot;Add attribute to selected node: \n\n&nbsp;&nbsp;$nodo ?&quot;, &quot;Markdown root folder&quot;, 2, 2)==0) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nFolder
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nFolder = nodo.link.file?nodo:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def base
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(nFolder){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base = nodo.link.file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nFolder = nFolder?:nodo.pathToRoot.reverse().find{it.link?.file?.directory}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// nFolder = nFolder?:nodo.find{(it.link.file?true:false) &amp;&amp; it.attributes.containsKey(MDH.MDNodeAttr)}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nFolder = nFolder?:nodo.find{(it.link.file?true:false)}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def rutas = nFolder.link.file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base = rutas[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rutas.each{r -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base =&nbsp;&nbsp;commonDir(base, r)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def uri = base?base.isDirectory()?base.canonicalFile.toURI():base.parentFile.canonicalFile.toURI():''&nbsp;&nbsp;//path como URI string
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo[MDH.MDRootAttr]&nbsp;&nbsp;&nbsp;= uri
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo[MDH.MDBranchAttr] = nodo[MDH.MDBranchAttr]?:''
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo[MDH.MDPreAttr]&nbsp;&nbsp;&nbsp;&nbsp;= nodo[MDH.MDPreAttr]&nbsp;&nbsp;&nbsp;?:''
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().statusInfo = &quot; action canceled&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//Extract params for textBlock
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.param[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'transform selected text in note to parameter (to be used with TextBlock node)',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nodo = ScriptUtils.c().selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def myFrame = UITools.frame.mostRecentFocusOwner
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (myFrame.UIClassID.toString() == 'EditorPaneUI') {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def texto = HtmlUtils.htmlToPlain(myFrame.text)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def i = nodo.children.size() + 1
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto = &quot;${texto[0..(myFrame.selectionStart-2)]}\$${i}${texto[(myFrame.selectionEnd-1) .. -1]}&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.createChild(myFrame.selectedText)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.note = texto
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//ScriptUtils.c().select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//node to be linked
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.linked[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'Inserts node to be linked to node with actual link.\nIt helps in the map organization',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nodo = ScriptUtils.c().selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;nodo.createChild()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.text = &quot;= edofro.MarkDownHelper.MDH.linkedNodeText(node)&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.style.name = MDH.MDNodeLinkStyle
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (MDH.getNodeWithLinkToFile(nodo)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.link.node = nodo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//show-hide wiki panel
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.wiki[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'Show/hide buttons for Wiki nodes',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def wikiPane = dialogo.contentPane.components.find{it.name=='panelWiki'}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wikiPane.visible = !wikiPane.visible
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.pack()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ScriptUtils.c().select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!esNuevo){ //These buttons only show up when rebuilding the dialog
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//add missing attributes to selected node
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: MenuUtils.getMenuItemIcon('IconAction.' + MDH.icon.addMissingAttr[iconsSet]),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'add missing attributes to selected node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addMissingAttributesToNode(ScriptUtils.c().selected)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return panelInferior
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: --- Dialogo ---------------------------------------------------------------------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static showDialog(){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showDialog(false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static showDialog(rebuild){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nuevo = false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo = UITools.frame.ownedWindows.find{it.name == dialogName &amp;&amp; it.type.toString()=='NORMAL'}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!dialogo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swingBuilder.edt{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo = dialog(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title : 'Markdown helper',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//id:'myDialog',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: dialogName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modal: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locationRelativeTo:UITools.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimumSize: new Dimension(30,70),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;owner: UITools.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack : true,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rebuild = true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nuevo = true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(rebuild){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iconsSet = (config.getBooleanProperty('markdownHelper_useMDHicons'))?1:0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swingBuilder.edt{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nuevo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.getContentPane().removeAll()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def contentPane = dialogo.getContentPane()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.Y_AXIS))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentPane.add(creaContenidoIcon(tbIconKeys, tbLabels))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentPane.add(creaContenidoMD(formulasMD, labelsMD, atributosMD))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentPane.add(creaContenidoPanelInferior(nuevo))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def panelWiki = creaContenidoMD(formulasWk, labelsWk, atributosWk)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;panelWiki.name = 'panelWiki'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentPane.add(panelWiki)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.show()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMoves(dialogo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addEscapeAction(dialogo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;panelWiki.visible = false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.pack()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.show()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: --- MDI ----------------------------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static correctFileName(s){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def t = s.toString().replace('\n','_').replace('\t','_').replace('/','_').replace('\\','_').replace(' ','-').replace(&quot;'&quot;,'')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (t.contains('__')){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t = t.replace('__','_')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return t.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: --- FileChooser ----------------------------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getFileFromDialog(String fileName){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getFileFromDialog(null, fileName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getFileFromDialog(File currentFile, String fileName = 'myMarkdownFile'){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def chooser = new SwingBuilder().fileChooser(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogTitle: &quot;Save Markdown document to file&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileSelectionMode: JFileChooser.FILES_ONLY,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileFilter: new FileNameExtensionFilter('Markdown', 'md', 'mkd', 'mkdn', 'mdwn', 'mdown', 'markdown', 'mdtxt', 'mdtext', 'text', 'Rmd', 'txt'),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(currentFile){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.currentDirectory = currentFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.selectedFile&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= currentFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mdExtensions = chooser.fileFilter.extensions
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def i&nbsp;&nbsp;&nbsp;&nbsp;= fileName.lastIndexOf('.')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def ext&nbsp;&nbsp;= i&gt;0?fileName.substring(i+1):null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileName = fileName + (mdExtensions.contains(ext)?'':'.md')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.selectedFile =&nbsp;&nbsp;new File(fileName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch ( chooser.showSaveDialog() )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.APPROVE_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = chooser.selectedFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.CANCEL_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.ERROR_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static saveFile(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveFile(nodo, false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static saveFile(nodo, overwriteConfirmed){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// getting file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def texto = nodo.note?.plain
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (texto &amp;&amp; texto != '' &amp;&amp; !texto.startsWith('=')){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nodo.link?.uri?.scheme == 'file'){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = getFileFromDialog(nodo.link.file)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fPath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fPath = MDI_redux.obtainPathFromMap(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MDI_redux.createPath(fPath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e){}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fPath &amp;&amp; fPath != ''){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fileName = correctFileName(nodo.text)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = new File(fPath + fileName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!file) {file = getFileFromDialog(correctFileName(nodo.text))}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = getFileFromDialog(correctFileName(nodo.text))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().statusInfo = 'no valid Note in selected node'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// UITools.informationMessage(&quot;no valid note in node $nodo &quot;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//saving file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if ( overwriteConfirmed || UITools.showConfirmDialog(null, &quot;export text to: \n\n&nbsp;&nbsp;${file} ?&quot;, &quot;Overwrite/save file with node's note?&quot;, 2, 2)==0) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.setText(texto.toString(), 'UTF-8')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.link.file = file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.text = file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 1
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ScriptUtils.c().statusInfo = &quot; Note's export aborted&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ScriptUtils.c().statusInfo = 'no file defined. Not saved!!'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;/*
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// devuelve directorio en comÃºn. (as File)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a: File
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b: File
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;*/
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static commonDir(a,b){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!a || !b) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def raiz
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a.toPath().getRoot().equals(b.toPath().getRoot())){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raiz = a.toPath().getRoot().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def sep = File.separator
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def lA = a.toPath().collect()*.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def lB = b.toPath().collect()*.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def n = lA.size()&gt;lB.size()?lB.size():lA.size()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def i = 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while (i &lt; n &amp;&amp; lA[i]==lB[i]){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (new File( raiz + (i&gt;0?(lA[0..i-1].join(sep)):'')))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: --- focus map ---------------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static focusMap(){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*org.freeplane.features.mode.*/
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def ctrl = Controller.getCurrentController().getMapViewManager().getSelectedComponent()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ctrl){ctrl.requestFocus()}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: --- keyStrokes --------------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static addArrowMoves(dialogo, int defaultSelected = 13){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// get all the dialog's buttons
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def buttons = getButtons(dialogo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// and their coordinates
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def Y =&nbsp;&nbsp;buttons.locationOnScreen.y
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def X =&nbsp;&nbsp;buttons.locationOnScreen.x
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//assign key stroke actions for each button in dialog
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buttons.each{myButton -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//getting the coordinates of the button
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def yS = myButton.locationOnScreen.y
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def xS = myButton.locationOnScreen.x
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//getting the buttons next to it
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nextPos&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//--Up
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextPos = Y.findAll{ it &lt; yS }.max()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnUP&nbsp;&nbsp;&nbsp;&nbsp;= buttons.findAll{ it.locationOnScreen.y == nextPos}.sort{Math.abs(it.locationOnScreen.x - xS)}[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//--Right
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextPos = X.findAll{ it &gt; xS }.min()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnRIGHT = buttons.findAll{ it.locationOnScreen.x == nextPos}.sort{Math.abs(it.locationOnScreen.y - yS)}[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//--Down
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextPos = Y.findAll{ it &gt; yS }.min()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnDOWN&nbsp;&nbsp;= buttons.findAll{ it.locationOnScreen.y == nextPos}.sort{Math.abs(it.locationOnScreen.x - xS)}[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//--Left
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextPos = X.findAll{ it &lt; xS }.max()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnLEFT&nbsp;&nbsp;= buttons.findAll{ it.locationOnScreen.x == nextPos}.sort{Math.abs(it.locationOnScreen.y - yS)}[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//adding the arrow movements for the button
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMove( myButton, bttnUP&nbsp;&nbsp;&nbsp;&nbsp;, KeyEvent.VK_UP&nbsp;&nbsp;&nbsp;&nbsp;,'moveUp'&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMove( myButton, bttnRIGHT , KeyEvent.VK_RIGHT ,'moveRight')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMove( myButton, bttnDOWN&nbsp;&nbsp;, KeyEvent.VK_DOWN&nbsp;&nbsp;,'moveDown' )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMove( myButton, bttnLEFT&nbsp;&nbsp;, KeyEvent.VK_LEFT&nbsp;&nbsp;,'moveLeft' )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def i =((buttons.size() - 1) / 2).toInteger()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnToSelect = buttons[ ( buttons.size() &gt; defaultSelected ? defaultSelected : i ) ]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bttnToSelect){bttnToSelect.requestFocus()}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static addArrowMove(compFrom, compTo, keyStroke, actionName){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!compTo) return
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compFrom.getInputMap().put(KeyStroke.getKeyStroke(keyStroke, 0), actionName);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compFrom.getActionMap().put(actionName, new AbstractAction() {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override public void actionPerformed(ActionEvent e) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compTo.requestFocus();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//getting all the buttons of the dialog recursivelly&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getButtons(c){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bots = []
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.components.each{comp -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(comp.class.equals(JButton)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bots &lt;&lt; comp
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (comp.componentCount &gt;0){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bots.addAll(getButtons(comp))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return bots
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static addEscapeAction(dialogo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.contentPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), &quot;escape&quot;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.contentPane.getActionMap().put(&quot;escape&quot;, new AbstractAction() {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override public void actionPerformed(ActionEvent e) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.dispose();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<node TEXT="agregar &quot;extraer texto de nota&quot;" STYLE_REF="completedTask" FOLDED="true" ID="ID_1494263781" CREATED="1616191544191" MODIFIED="1623451212242">
<node TEXT="extraer texto de nota" ID="ID_957460396" CREATED="1616187585713" MODIFIED="1624206210131"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // this an example script:
    </p>
    <p>
      
    </p>
    <p>
      /*
    </p>
    <p>
      def name = ui.showInputDialog(node.delegate, &quot;hi! What's your name?&quot;, &quot;Juliberto&quot;)
    </p>
    <p>
      ui.informationMessage(&quot;Hello $name !!! Nice to meet you!!&quot;)
    </p>
    <p>
      */
    </p>
    <p>
      
    </p>
    <p>
      def nodo = c.selected
    </p>
    <p>
      def myFrame = ui.frame.mostRecentFocusOwner
    </p>
    <p>
      
    </p>
    <p>
      if (myFrame.UIClassID.toString() == 'EditorPaneUI') {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def texto = htmlUtils.htmlToPlain(myFrame.text)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def i = nodo.children.size() + 1
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;texto = &quot;${texto[0..(myFrame.selectionStart-2)]}\$${i}${texto[(myFrame.selectionEnd-1) .. -1]}&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.createChild(myFrame.selectedText)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.note = texto
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="crear hijo desde texto seleccionado ($1)" ID="ID_1698925764" CREATED="1618234265331" MODIFIED="1624206203863"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // this an example script:
    </p>
    <p>
      
    </p>
    <p>
      /*
    </p>
    <p>
      def name = ui.showInputDialog(node.delegate, &quot;hi! What's your name?&quot;, &quot;Juliberto&quot;)
    </p>
    <p>
      ui.informationMessage(&quot;Hello $name !!! Nice to meet you!!&quot;)
    </p>
    <p>
      */
    </p>
    <p>
      
    </p>
    <p>
      def nodo = c.selected
    </p>
    <p>
      def myFrame = ui.frame.mostRecentFocusOwner
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      if (myFrame.UIClassID.toString() == 'EditorPaneUI') {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def texto = htmlUtils.htmlToPlain(myFrame.text)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def i = nodo.children.size() + 1
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;texto = &quot;${texto[0..(myFrame.selectionStart-2)]}\$${i}${texto[(myFrame.selectionEnd-1) .. -1]}&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.createChild(myFrame.selectedText)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.note = texto
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="hacer que botón guardar permita siempre elegir target file" STYLE_REF="completedTask" ID="ID_1844250225" CREATED="1651622751283" MODIFIED="1651857738055"/>
<node TEXT="MarkdownHelper menu buttons for these icons, like &quot;Leaf&quot; and &quot;Monkey&quot;, would act as toggles" STYLE_REF="completedTask" FOLDED="true" ID="ID_1958756895" CREATED="1633189702714" MODIFIED="1650903935148">
<node TEXT="- I found using the icons to indicate how the nodes would be parsed very clever and intuitive, and I know you drew on FP&apos;s built-in capabilities to do this, so you are relying on FP&apos;s implementation. Nonetheless, I found that I expected the MarkdownHelper menu buttons for these icons, like &quot;Leaf&quot; and &quot;Monkey&quot;, would act as toggles, so if I had a node with a Leaf icon selected, I would always try to click the leaf icon again to remove it, which would of course simply add another leaf." STYLE_REF="completedTask" ID="ID_1859384437" CREATED="1633189597760" MODIFIED="1648436726185"/>
</node>
<node TEXT="MDH v0.1.4" STYLE_REF="milestone" ID="ID_911293636" CREATED="1658704975010" MODIFIED="1658705505177">
<node TEXT="BUG: recorrer dialogo con flechas se enredó con 4t0 panel. revisar" STYLE_REF="nextTask" ID="ID_1695862600" CREATED="1622391951637" MODIFIED="1658707061716"/>
<node TEXT="agregar botón para abrir previewPanel desde dialogo MDH" STYLE_REF="pendingTask" ID="ID_1907080907" CREATED="1651247258138" MODIFIED="1658013780709"/>
</node>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_1782349287" CREATED="1658705010307" MODIFIED="1658705505193">
<node TEXT="agregar modificadores a left click del mouse" STYLE_REF="pendingTask" FOLDED="true" ID="ID_1422934297" CREATED="1648147562120" MODIFIED="1648147638444">
<node TEXT="opciones" ID="ID_198487236" CREATED="1648151115709" MODIFIED="1648151119566">
<node TEXT="solo" FOLDED="true" ID="ID_993919154" CREATED="1648147600676" MODIFIED="1648147610502">
<node TEXT="inserta como hijo(s) de nodo(s) seleccionado(s)" ID="ID_1186715548" CREATED="1648147843963" MODIFIED="1648147886753"/>
</node>
<node TEXT="+ ctrl" FOLDED="true" ID="ID_1874021796" CREATED="1648147612392" MODIFIED="1648147616127">
<node TEXT="inserta como hermano(s) de nodo(s) seleccionado(s)" ID="ID_534883923" CREATED="1648147998734" MODIFIED="1648148039354"/>
<node TEXT="y lo(s) selecciona" ID="ID_296313353" CREATED="1648148040916" MODIFIED="1648148053424"/>
</node>
<node TEXT="+ shift" FOLDED="true" ID="ID_321266939" CREATED="1648147617705" MODIFIED="1648147624675">
<node TEXT="Definir lógica." FOLDED="true" ID="ID_1144380648" CREATED="1648148498399" MODIFIED="1648148512295">
<node TEXT="puede ser" FOLDED="true" ID="ID_1788038543" CREATED="1648148514795" MODIFIED="1648148522523">
<node TEXT="input:" FOLDED="true" ID="ID_152372475" CREATED="1648148522539" MODIFIED="1648148546528">
<node TEXT="tipo de nodo MDH que se quiera insertar" ID="ID_1393738655" CREATED="1648148546544" MODIFIED="1648148559305"/>
<node TEXT="si nodos comparten padre" ID="ID_657712628" CREATED="1648148562274" MODIFIED="1648148571917"/>
<node TEXT="si nodos son seguidos" ID="ID_1929789105" CREATED="1648148573323" MODIFIED="1648148584726"/>
</node>
<node TEXT="lógica" FOLDED="true" ID="ID_258212731" CREATED="1648148609180" MODIFIED="1648148613805">
<node TEXT="tipo MDH lee de varios nodos hijos?" FOLDED="true" ID="ID_639788397" CREATED="1648148613821" MODIFIED="1648148654857">
<node TEXT="no" FOLDED="true" ID="ID_80886544" CREATED="1648148660682" MODIFIED="1648148661648">
<node TEXT="insertar uno para cada nodo seleccionado" ID="ID_1909529009" CREATED="1648148665820" MODIFIED="1648148675741"/>
</node>
<node TEXT="sí" FOLDED="true" ID="ID_513435013" CREATED="1648148654872" MODIFIED="1648148659150">
<node TEXT="listar nodos padres unique()" ID="ID_56907474" CREATED="1648148705606" MODIFIED="1648148735321"/>
<node TEXT="para cada nodo padre" ID="ID_1637933688" CREATED="1648148739724" MODIFIED="1648148746924"/>
<node TEXT="grupos de nodos seleccionados que comparten padre pero no están seguidos" FOLDED="true" ID="ID_830725313" CREATED="1648148868671" MODIFIED="1648148936657">
<node TEXT="¿son un mismo grupo?" ID="ID_1535107358" CREATED="1648148936657" MODIFIED="1648148945360"/>
<node TEXT="¿son diferentes grupos?" ID="ID_497382473" CREATED="1648148948147" MODIFIED="1648148956459"/>
</node>
<node TEXT="insertar un nodo MDH que agrupe a sus hijos seleccionados" ID="ID_333447050" CREATED="1648148746940" MODIFIED="1648148787385"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="opción a)" FOLDED="true" ID="ID_1463847486" CREATED="1648148456194" MODIFIED="1648148485141">
<node TEXT="inserta nodo MDH como padre común de nodo(s) seleccionado(s)" FOLDED="true" ID="ID_885240010" CREATED="1648147803845" MODIFIED="1648148287339">
<node TEXT="equivalente a shift + F12" ID="ID_860698999" CREATED="1648148304979" MODIFIED="1648148322440"/>
</node>
</node>
<node TEXT="opción b)" FOLDED="true" ID="ID_1578138788" CREATED="1648148463310" MODIFIED="1648148470840">
<node TEXT="A cada nodo seleccionado le inserta un nodo MDH como padre" ID="ID_1785954900" CREATED="1648148336554" MODIFIED="1648148358479"/>
</node>
</node>
<node TEXT="+ alt" FOLDED="true" ID="ID_517071848" CREATED="1648147626550" MODIFIED="1648147630241">
<node TEXT="hace que nodo(s) seleccionado(s) se tramsforme en nodo MDH" FOLDED="true" ID="ID_504066730" CREATED="1648147646498" MODIFIED="1648147673732">
<node TEXT="le agrega estilo" ID="ID_1482498833" CREATED="1648147675697" MODIFIED="1648147682265"/>
<node TEXT="le sobreescribe fórmula" ID="ID_1631021744" CREATED="1648147683560" MODIFIED="1648147699152"/>
</node>
</node>
<node TEXT="+ ctrl&#xa;+ shift" FOLDED="true" ID="ID_877246535" CREATED="1648147612392" MODIFIED="1648149220160">
<node TEXT="inserta nodo MDH entre nodo seleccionado y sus hijos" ID="ID_1651412603" CREATED="1648151262496" MODIFIED="1648151283213"/>
</node>
<node TEXT="otras combinaciones?" FOLDED="true" ID="ID_1555631251" CREATED="1648149106894" MODIFIED="1648149118700">
<node TEXT="" ID="ID_1748860182" CREATED="1648151138012" MODIFIED="1648151138012">
<hook NAME="FirstGroupNode"/>
</node>
<node TEXT="+ ctrl&#xa;+ alt" ID="ID_724187427" CREATED="1648147612392" MODIFIED="1648149216293"/>
<node TEXT="+ shift&#xa;+ alt" ID="ID_836731928" CREATED="1648147617705" MODIFIED="1648149212074"/>
<node TEXT="+ ctrl&#xa;+ shift&#xa;+ alt" ID="ID_890790654" CREATED="1648147612392" MODIFIED="1648149207208"/>
<node TEXT="" ID="ID_1082906396" CREATED="1648151137996" MODIFIED="1648151138012">
<hook NAME="SummaryNode"/>
<hook NAME="AlwaysUnfoldedNode"/>
<node TEXT="No hacer nada" ID="ID_80343892" CREATED="1648151138027" MODIFIED="1648151144328"/>
</node>
</node>
</node>
<node TEXT="ejemplo de como ver modifiers" ID="ID_1290860639" CREATED="1648151002460" MODIFIED="1648151115881"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import java.awt.BorderLayout as BL
    </p>
    <p>
      
    </p>
    <p>
      count = 0
    </p>
    <p>
      new SwingBuilder().edt {
    </p>
    <p>
      &nbsp;&nbsp;frame(title: 'Frame', size: [250, 75], show: true) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;borderLayout()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;textlabel = textPane(text: 'Click the button!', constraints: BL.NORTH)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:'Click Me',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed: {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count++;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;textlabel.text = &quot;Clicked ${count} time(s).\n\n keyboard modifiers: ${e.modifiers}&quot;;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;println &quot;clicked&quot;},&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constraints:BL.SOUTH
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="agregar right click del mouse" STYLE_REF="pendingTask" FOLDED="true" ID="ID_1257313451" CREATED="1648149002757" MODIFIED="1648149018753">
<node TEXT="ofrece menú con mismas alternativas de left click con modificadores" ID="ID_1509951907" CREATED="1648149022627" MODIFIED="1648149074434"/>
<node TEXT="ejemplo de como ver modifiers usando mouseClicked en vez de actionPerformed" ID="ID_1043134852" CREATED="1648151002460" MODIFIED="1648152990074"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import java.awt.BorderLayout as BL
    </p>
    <p>
      
    </p>
    <p>
      count = 0
    </p>
    <p>
      new SwingBuilder().edt {
    </p>
    <p>
      &nbsp;&nbsp;frame(title: 'Frame', size: [250, 75], show: true) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;borderLayout()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;textlabel = textPane(text: 'Click the button!', constraints: BL.NORTH)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text:'Click Me',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mouseClicked: {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count++;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;textlabel.text = &quot;Clicked ${count} time(s).\n\n ${e.properties*.toString().join('\n')}&quot;;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;println &quot;clicked&quot;},
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constraints:BL.SOUTH
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="ejemplos" FOLDED="true" ID="ID_1435790766" CREATED="1648152359597" MODIFIED="1648152363143">
<node TEXT="https://stackhowto.com/detect-left-middle-and-right-mouse-click-java/" ID="ID_1025167236" CREATED="1648152384438" MODIFIED="1648152384438" LINK="https://stackhowto.com/detect-left-middle-and-right-mouse-click-java/"/>
<node TEXT="http://www.java2s.com/Tutorials/Java/Swing_How_to/JButton/Check_which_mouse_button_is_click_on_the_JButton.htm" ID="ID_1650868300" CREATED="1648152376339" MODIFIED="1648152376339" LINK="http://www.java2s.com/Tutorials/Java/Swing_How_to/JButton/Check_which_mouse_button_is_click_on_the_JButton.htm"/>
</node>
</node>
<node TEXT="cambio al insertar un nodo &quot;Markdown document&quot;" STYLE_REF="pendingTask" FOLDED="true" ID="ID_636045924" CREATED="1624976985612" MODIFIED="1641396636787">
<node TEXT="teniendo seleccionado un nodo" ID="ID_634969970" CREATED="1624977066850" MODIFIED="1624977080306">
<node TEXT="con un link a un archivo .md" STYLE_REF="pendingTask" ID="ID_865171942" CREATED="1624977080316" MODIFIED="1624977199182"/>
<node TEXT="que no es un nodo MDH" STYLE_REF="pendingTask" ID="ID_1199963468" CREATED="1624977105850" MODIFIED="1624977199167"/>
</node>
<node TEXT="entonces nodo insertado" ID="ID_1151886486" CREATED="1624977125087" MODIFIED="1624977212806">
<node TEXT="toma link a file .md" STYLE_REF="pendingTask" ID="ID_988420107" CREATED="1624977162799" MODIFIED="1624977199167"/>
<node TEXT="texto de nodo toma nombre de file .md" STYLE_REF="pendingTask" ID="ID_1956212651" CREATED="1624977168189" MODIFIED="1624977199151"/>
</node>
</node>
<node TEXT="no cambiar de nodo seleccionado al insertar un nodo MDH" STYLE_REF="pendingTask" ID="ID_1313735566" CREATED="1621629837385" MODIFIED="1623451003043"/>
<node TEXT="insertar un nodo MDH a cada nodo seleccionado" STYLE_REF="pendingTask" ID="ID_1177160017" CREATED="1621629863416" MODIFIED="1623451003421"/>
<node TEXT="idem Patch" STYLE_REF="pendingTask" ID="ID_675042730" CREATED="1621629918811" MODIFIED="1623451003928"/>
<node TEXT="idem nodo &apos;to be linked&apos;" STYLE_REF="pendingTask" ID="ID_696114603" CREATED="1621629940655" MODIFIED="1623451004235"/>
</node>
<node TEXT="MDH F2" STYLE_REF="milestone" ID="ID_466821867" CREATED="1658705021227" MODIFIED="1658705505193">
<node TEXT="Hacer que dialogo MDH se pueda ver como tab en toolPanel" STYLE_REF="pendingTask" ID="ID_575434940" CREATED="1651247227340" MODIFIED="1651247253536"/>
<node TEXT="alterna content type de nota de Markdown a Standard" STYLE_REF="pendingTask" ID="ID_172486264" CREATED="1618237607735" MODIFIED="1623451004622"/>
<node TEXT="toggle botón para mostrar y ocultar atributos" STYLE_REF="pendingTask" ID="ID_1121098929" CREATED="1616167740205" MODIFIED="1623451004962"/>
<node TEXT="Bold" STYLE_REF="pendingTask" ID="ID_816293423" CREATED="1618234265331" MODIFIED="1658705375562"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // this an example script:
    </p>
    <p>
      
    </p>
    <p>
      /*
    </p>
    <p>
      def name = ui.showInputDialog(node.delegate, &quot;hi! What's your name?&quot;, &quot;Juliberto&quot;)
    </p>
    <p>
      ui.informationMessage(&quot;Hello $name !!! Nice to meet you!!&quot;)
    </p>
    <p>
      */
    </p>
    <p>
      
    </p>
    <p>
      def nodo = c.selected
    </p>
    <p>
      def myFrame = ui.frame.mostRecentFocusOwner
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      if (myFrame.UIClassID.toString() == 'EditorPaneUI') {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def texto = htmlUtils.htmlToPlain(myFrame.text)
    </p>
    <p>
      &nbsp;//&nbsp;&nbsp;&nbsp;texto = &quot;${texto[0..(myFrame.selectionStart-2)]}\$${i}${texto[(myFrame.selectionEnd-1) .. -1]}&quot;
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;nodo.createChild(myFrame.selectedText)
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;nodo.note = texto
    </p>
    <p>
      &nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;result =&nbsp;&nbsp;myFrame.class.methods*.toString().collect{limpiaMethod(it)}.join('\n')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.createChild('result').note = result
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def limpiaMethod(a){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def i = a.indexOf('(')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def j = a[0..i].lastIndexOf('.')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return a[j..-1]
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="ejemplo" FOLDED="true" ID="ID_1926988121" CREATED="1618234265332" MODIFIED="1618234265332"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      aaaaaaaaa bbbb ccccccccc ddddddddd eeeeeeeee fff ggggg hhhh.
    </p>
    <p>
      
    </p>
    <p>
      iiiiiiii jjj kkkkkkkkkk llll mmm.
    </p>
  </body>
</html></richcontent>
<node TEXT="result" ID="ID_917718886" CREATED="1618234265332" MODIFIED="1618234265332"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.drop(java.awt.dnd.DropTargetDropEvent)
    </p>
    <p>
      public com.lightdev.app.shtm.SHTMLDocument com.lightdev.app.shtm.SHTMLEditorPane.getDocument()
    </p>
    <p>
      public javax.swing.text.Document com.lightdev.app.shtm.SHTMLEditorPane.getDocument()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.setDocument(javax.swing.text.Document)
    </p>
    <p>
      public java.lang.String com.lightdev.app.shtm.SHTMLEditorPane.getSelectedText()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.replaceSelection(java.lang.String)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.replaceSelection(com.lightdev.app.shtm.HTMLText)
    </p>
    <p>
      public javax.swing.TransferHandler com.lightdev.app.shtm.SHTMLEditorPane.getTransferHandler()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.setUI(javax.swing.plaf.TextUI)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.updateUI()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.setText(java.lang.String)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.removeCharacterAttributes()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dragEnter(java.awt.dnd.DragSourceDragEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dragEnter(java.awt.dnd.DropTargetDragEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dragExit(java.awt.dnd.DropTargetEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dragExit(java.awt.dnd.DragSourceEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.setPopup(javax.swing.JPopupMenu)
    </p>
    <p>
      public javax.swing.JPopupMenu com.lightdev.app.shtm.SHTMLEditorPane.getPopup()
    </p>
    <p>
      public javax.swing.text.Element com.lightdev.app.shtm.SHTMLEditorPane.getCurrentLinkElement()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.appendTableColumn()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.applyTableAttributes(javax.swing.text.AttributeSet)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.applyListAttributes(javax.swing.text.AttributeSet)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.applyCellAttributes(javax.swing.text.AttributeSet,int)
    </p>
    <p>
      public javax.swing.text.Element com.lightdev.app.shtm.SHTMLEditorPane.getCurrentTableCell()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.setPasteModeFromPrefs()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.insertTableColumn()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.applyParagraphTag(java.lang.String,java.util.Vector)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.applyCharacterTag(java.lang.String)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dragOver(java.awt.dnd.DragSourceDragEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dragOver(java.awt.dnd.DropTargetDragEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dropActionChanged(java.awt.dnd.DragSourceDragEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dropActionChanged(java.awt.dnd.DropTargetDragEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.toggleTableHeaderCell()
    </p>
    <p>
      public com.lightdev.app.shtm.SHTMLDocument com.lightdev.app.shtm.SHTMLEditorPane.getSHTMLDocument()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.deleteTableCol()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.appendTableRow()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.insertTableRow(java.lang.String)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.deleteTableRow()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dragGestureRecognized(java.awt.dnd.DragGestureEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.setLink(java.lang.String,java.lang.String,java.lang.String)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.setLink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Dimension)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.removeParagraphAttributes()
    </p>
    <p>
      public javax.swing.text.Element com.lightdev.app.shtm.SHTMLEditorPane.getCurrentParagraphElement()
    </p>
    <p>
      public boolean com.lightdev.app.shtm.SHTMLEditorPane.tryDefaultKeyStrokeActionWithinCell(int,int,java.awt.event.ActionEvent)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.initDnd()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.removeAnchor(java.lang.String)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.toggleList(java.lang.String,javax.swing.text.AttributeSet,boolean)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.insertNewTable(int)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.setPasteMode(com.lightdev.app.shtm.SHTMLEditorPane$PasteMode)
    </p>
    <p>
      public com.lightdev.app.shtm.SHTMLEditorPane$PasteMode com.lightdev.app.shtm.SHTMLEditorPane.getPasteMode()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.insertAnchor(java.lang.String)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.insertBreak()
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.dragDropEnd(java.awt.dnd.DragSourceDropEvent)
    </p>
    <p>
      public javax.swing.text.Element com.lightdev.app.shtm.SHTMLEditorPane.getTableCell(int)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.goPrevCell(javax.swing.text.Element)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.goNextCell(javax.swing.text.Element)
    </p>
    <p>
      public java.lang.String com.lightdev.app.shtm.SHTMLEditorPane.elementToHTML(javax.swing.text.Element)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.applyAttributes(javax.swing.text.AttributeSet,boolean)
    </p>
    <p>
      public void com.lightdev.app.shtm.SHTMLEditorPane.applyAttributes(javax.swing.text.AttributeSet,boolean,boolean)
    </p>
    <p>
      public void javax.swing.JEditorPane.read(java.io.InputStream,java.lang.Object) throws java.io.IOException
    </p>
    <p>
      public boolean javax.swing.JEditorPane.getScrollableTracksViewportWidth()
    </p>
    <p>
      public javax.swing.text.EditorKit javax.swing.JEditorPane.getEditorKit()
    </p>
    <p>
      public boolean javax.swing.JEditorPane.getScrollableTracksViewportHeight()
    </p>
    <p>
      public final java.lang.String javax.swing.JEditorPane.getContentType()
    </p>
    <p>
      public final void javax.swing.JEditorPane.setContentType(java.lang.String)
    </p>
    <p>
      public java.lang.String javax.swing.JEditorPane.getText()
    </p>
    <p>
      public java.lang.String javax.swing.JEditorPane.getUIClassID()
    </p>
    <p>
      public javax.accessibility.AccessibleContext javax.swing.JEditorPane.getAccessibleContext()
    </p>
    <p>
      public java.awt.Dimension javax.swing.JEditorPane.getPreferredSize()
    </p>
    <p>
      public void javax.swing.JEditorPane.setEditorKit(javax.swing.text.EditorKit)
    </p>
    <p>
      public synchronized void javax.swing.JEditorPane.addHyperlinkListener(javax.swing.event.HyperlinkListener)
    </p>
    <p>
      public static javax.swing.text.EditorKit javax.swing.JEditorPane.createEditorKitForContentType(java.lang.String)
    </p>
    <p>
      public void javax.swing.JEditorPane.fireHyperlinkUpdate(javax.swing.event.HyperlinkEvent)
    </p>
    <p>
      public static java.lang.String javax.swing.JEditorPane.getEditorKitClassNameForContentType(java.lang.String)
    </p>
    <p>
      public javax.swing.text.EditorKit javax.swing.JEditorPane.getEditorKitForContentType(java.lang.String)
    </p>
    <p>
      public synchronized javax.swing.event.HyperlinkListener[] javax.swing.JEditorPane.getHyperlinkListeners()
    </p>
    <p>
      public java.net.URL javax.swing.JEditorPane.getPage()
    </p>
    <p>
      public static void javax.swing.JEditorPane.registerEditorKitForContentType(java.lang.String,java.lang.String)
    </p>
    <p>
      public static void javax.swing.JEditorPane.registerEditorKitForContentType(java.lang.String,java.lang.String,java.lang.ClassLoader)
    </p>
    <p>
      public synchronized void javax.swing.JEditorPane.removeHyperlinkListener(javax.swing.event.HyperlinkListener)
    </p>
    <p>
      public void javax.swing.JEditorPane.scrollToReference(java.lang.String)
    </p>
    <p>
      public void javax.swing.JEditorPane.setEditorKitForContentType(java.lang.String,javax.swing.text.EditorKit)
    </p>
    <p>
      public void javax.swing.JEditorPane.setPage(java.lang.String) throws java.io.IOException
    </p>
    <p>
      public void javax.swing.JEditorPane.setPage(java.net.URL) throws java.io.IOException
    </p>
    <p>
      public void javax.swing.text.JTextComponent.write(java.io.Writer) throws java.io.IOException
    </p>
    <p>
      public void javax.swing.text.JTextComponent.read(java.io.Reader,java.lang.Object) throws java.io.IOException
    </p>
    <p>
      public javax.swing.Action[] javax.swing.text.JTextComponent.getActions()
    </p>
    <p>
      public boolean javax.swing.text.JTextComponent.print() throws java.awt.print.PrinterException
    </p>
    <p>
      public boolean javax.swing.text.JTextComponent.print(java.text.MessageFormat,java.text.MessageFormat) throws java.awt.print.PrinterException
    </p>
    <p>
      public boolean javax.swing.text.JTextComponent.print(java.text.MessageFormat,java.text.MessageFormat,boolean,javax.print.PrintService,javax.print.attribute.PrintRequestAttributeSet,boolean) throws java.awt.print.PrinterException
    </p>
    <p>
      public void javax.swing.text.JTextComponent.copy()
    </p>
    <p>
      public java.awt.Dimension javax.swing.text.JTextComponent.getPreferredScrollableViewportSize()
    </p>
    <p>
      public int javax.swing.text.JTextComponent.getScrollableUnitIncrement(java.awt.Rectangle,int,int)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.addCaretListener(javax.swing.event.CaretListener)
    </p>
    <p>
      public static javax.swing.text.Keymap javax.swing.text.JTextComponent.addKeymap(java.lang.String,javax.swing.text.Keymap)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.cut()
    </p>
    <p>
      public javax.swing.text.Caret javax.swing.text.JTextComponent.getCaret()
    </p>
    <p>
      public java.awt.Color javax.swing.text.JTextComponent.getCaretColor()
    </p>
    <p>
      public javax.swing.event.CaretListener[] javax.swing.text.JTextComponent.getCaretListeners()
    </p>
    <p>
      public int javax.swing.text.JTextComponent.getCaretPosition()
    </p>
    <p>
      public java.awt.Color javax.swing.text.JTextComponent.getDisabledTextColor()
    </p>
    <p>
      public boolean javax.swing.text.JTextComponent.getDragEnabled()
    </p>
    <p>
      public final javax.swing.text.JTextComponent$DropLocation javax.swing.text.JTextComponent.getDropLocation()
    </p>
    <p>
      public final javax.swing.DropMode javax.swing.text.JTextComponent.getDropMode()
    </p>
    <p>
      public char javax.swing.text.JTextComponent.getFocusAccelerator()
    </p>
    <p>
      public javax.swing.text.Highlighter javax.swing.text.JTextComponent.getHighlighter()
    </p>
    <p>
      public static javax.swing.text.Keymap javax.swing.text.JTextComponent.getKeymap(java.lang.String)
    </p>
    <p>
      public javax.swing.text.Keymap javax.swing.text.JTextComponent.getKeymap()
    </p>
    <p>
      public java.awt.Insets javax.swing.text.JTextComponent.getMargin()
    </p>
    <p>
      public javax.swing.text.NavigationFilter javax.swing.text.JTextComponent.getNavigationFilter()
    </p>
    <p>
      public java.awt.print.Printable javax.swing.text.JTextComponent.getPrintable(java.text.MessageFormat,java.text.MessageFormat)
    </p>
    <p>
      public int javax.swing.text.JTextComponent.getScrollableBlockIncrement(java.awt.Rectangle,int,int)
    </p>
    <p>
      public java.awt.Color javax.swing.text.JTextComponent.getSelectedTextColor()
    </p>
    <p>
      public java.awt.Color javax.swing.text.JTextComponent.getSelectionColor()
    </p>
    <p>
      public int javax.swing.text.JTextComponent.getSelectionEnd()
    </p>
    <p>
      public int javax.swing.text.JTextComponent.getSelectionStart()
    </p>
    <p>
      public javax.swing.plaf.TextUI javax.swing.text.JTextComponent.getUI()
    </p>
    <p>
      public static void javax.swing.text.JTextComponent.loadKeymap(javax.swing.text.Keymap,javax.swing.text.JTextComponent$KeyBinding[],javax.swing.Action[])
    </p>
    <p>
      public java.awt.Rectangle javax.swing.text.JTextComponent.modelToView(int) throws javax.swing.text.BadLocationException
    </p>
    <p>
      public void javax.swing.text.JTextComponent.moveCaretPosition(int)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.paste()
    </p>
    <p>
      public void javax.swing.text.JTextComponent.removeCaretListener(javax.swing.event.CaretListener)
    </p>
    <p>
      public static javax.swing.text.Keymap javax.swing.text.JTextComponent.removeKeymap(java.lang.String)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.selectAll()
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setCaret(javax.swing.text.Caret)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setCaretColor(java.awt.Color)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setCaretPosition(int)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setDisabledTextColor(java.awt.Color)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setDragEnabled(boolean)
    </p>
    <p>
      public final void javax.swing.text.JTextComponent.setDropMode(javax.swing.DropMode)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setFocusAccelerator(char)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setHighlighter(javax.swing.text.Highlighter)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setKeymap(javax.swing.text.Keymap)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setNavigationFilter(javax.swing.text.NavigationFilter)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setSelectedTextColor(java.awt.Color)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setSelectionColor(java.awt.Color)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setSelectionEnd(int)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setSelectionStart(int)
    </p>
    <p>
      public int javax.swing.text.JTextComponent.viewToModel(java.awt.Point)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.select(int,int)
    </p>
    <p>
      public java.lang.String javax.swing.text.JTextComponent.getText(int,int) throws javax.swing.text.BadLocationException
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setEditable(boolean)
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setMargin(java.awt.Insets)
    </p>
    <p>
      public java.lang.String javax.swing.text.JTextComponent.getToolTipText(java.awt.event.MouseEvent)
    </p>
    <p>
      public boolean javax.swing.text.JTextComponent.isEditable()
    </p>
    <p>
      public void javax.swing.text.JTextComponent.addInputMethodListener(java.awt.event.InputMethodListener)
    </p>
    <p>
      public java.awt.im.InputMethodRequests javax.swing.text.JTextComponent.getInputMethodRequests()
    </p>
    <p>
      public void javax.swing.text.JTextComponent.removeNotify()
    </p>
    <p>
      public void javax.swing.text.JTextComponent.setComponentOrientation(java.awt.ComponentOrientation)
    </p>
    <p>
      public void javax.swing.JComponent.update(java.awt.Graphics)
    </p>
    <p>
      public boolean javax.swing.JComponent.contains(int,int)
    </p>
    <p>
      public java.awt.Point javax.swing.JComponent.getLocation(java.awt.Point)
    </p>
    <p>
      public void javax.swing.JComponent.print(java.awt.Graphics)
    </p>
    <p>
      public java.awt.Dimension javax.swing.JComponent.getSize(java.awt.Dimension)
    </p>
    <p>
      public boolean javax.swing.JComponent.isOpaque()
    </p>
    <p>
      public void javax.swing.JComponent.disable()
    </p>
    <p>
      public void javax.swing.JComponent.enable()
    </p>
    <p>
      public void javax.swing.JComponent.setVisible(boolean)
    </p>
    <p>
      public int javax.swing.JComponent.getHeight()
    </p>
    <p>
      public int javax.swing.JComponent.getWidth()
    </p>
    <p>
      public java.awt.Rectangle javax.swing.JComponent.getBounds(java.awt.Rectangle)
    </p>
    <p>
      public void javax.swing.JComponent.paint(java.awt.Graphics)
    </p>
    <p>
      public javax.swing.JRootPane javax.swing.JComponent.getRootPane()
    </p>
    <p>
      public java.awt.FontMetrics javax.swing.JComponent.getFontMetrics(java.awt.Font)
    </p>
    <p>
      public java.util.EventListener[] javax.swing.JComponent.getListeners(java.lang.Class)
    </p>
    <p>
      public java.awt.Point javax.swing.JComponent.getPopupLocation(java.awt.event.MouseEvent)
    </p>
    <p>
      public javax.swing.KeyStroke[] javax.swing.JComponent.getRegisteredKeyStrokes()
    </p>
    <p>
      public java.awt.Point javax.swing.JComponent.getToolTipLocation(java.awt.event.MouseEvent)
    </p>
    <p>
      public java.lang.String javax.swing.JComponent.getToolTipText()
    </p>
    <p>
      public java.awt.Container javax.swing.JComponent.getTopLevelAncestor()
    </p>
    <p>
      public boolean javax.swing.JComponent.getVerifyInputWhenFocusTarget()
    </p>
    <p>
      public synchronized java.beans.VetoableChangeListener[] javax.swing.JComponent.getVetoableChangeListeners()
    </p>
    <p>
      public java.awt.Rectangle javax.swing.JComponent.getVisibleRect()
    </p>
    <p>
      public void javax.swing.JComponent.grabFocus()
    </p>
    <p>
      public static boolean javax.swing.JComponent.isLightweightComponent(java.awt.Component)
    </p>
    <p>
      public boolean javax.swing.JComponent.isManagingFocus()
    </p>
    <p>
      public boolean javax.swing.JComponent.isOptimizedDrawingEnabled()
    </p>
    <p>
      public final boolean javax.swing.JComponent.isPaintingForPrint()
    </p>
    <p>
      public boolean javax.swing.JComponent.isPaintingTile()
    </p>
    <p>
      public boolean javax.swing.JComponent.isRequestFocusEnabled()
    </p>
    <p>
      public void javax.swing.JComponent.paintImmediately(int,int,int,int)
    </p>
    <p>
      public void javax.swing.JComponent.paintImmediately(java.awt.Rectangle)
    </p>
    <p>
      public final void javax.swing.JComponent.putClientProperty(java.lang.Object,java.lang.Object)
    </p>
    <p>
      public void javax.swing.JComponent.registerKeyboardAction(java.awt.event.ActionListener,javax.swing.KeyStroke,int)
    </p>
    <p>
      public void javax.swing.JComponent.registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)
    </p>
    <p>
      public void javax.swing.JComponent.removeAncestorListener(javax.swing.event.AncestorListener)
    </p>
    <p>
      public synchronized void javax.swing.JComponent.removeVetoableChangeListener(java.beans.VetoableChangeListener)
    </p>
    <p>
      public boolean javax.swing.JComponent.requestDefaultFocus()
    </p>
    <p>
      public void javax.swing.JComponent.resetKeyboardActions()
    </p>
    <p>
      public void javax.swing.JComponent.scrollRectToVisible(java.awt.Rectangle)
    </p>
    <p>
      public final void javax.swing.JComponent.setActionMap(javax.swing.ActionMap)
    </p>
    <p>
      public void javax.swing.JComponent.setAlignmentX(float)
    </p>
    <p>
      public void javax.swing.JComponent.setAlignmentY(float)
    </p>
    <p>
      public void javax.swing.JComponent.setAutoscrolls(boolean)
    </p>
    <p>
      public void javax.swing.JComponent.setBorder(javax.swing.border.Border)
    </p>
    <p>
      public void javax.swing.JComponent.setComponentPopupMenu(javax.swing.JPopupMenu)
    </p>
    <p>
      public void javax.swing.JComponent.setDebugGraphicsOptions(int)
    </p>
    <p>
      public void javax.swing.JComponent.setDoubleBuffered(boolean)
    </p>
    <p>
      public void javax.swing.JComponent.setInheritsPopupMenu(boolean)
    </p>
    <p>
      public final void javax.swing.JComponent.setInputMap(int,javax.swing.InputMap)
    </p>
    <p>
      public void javax.swing.JComponent.setInputVerifier(javax.swing.InputVerifier)
    </p>
    <p>
      public void javax.swing.JComponent.setNextFocusableComponent(java.awt.Component)
    </p>
    <p>
      public void javax.swing.JComponent.setOpaque(boolean)
    </p>
    <p>
      public void javax.swing.JComponent.setRequestFocusEnabled(boolean)
    </p>
    <p>
      public void javax.swing.JComponent.setTransferHandler(javax.swing.TransferHandler)
    </p>
    <p>
      public void javax.swing.JComponent.setVerifyInputWhenFocusTarget(boolean)
    </p>
    <p>
      public void javax.swing.JComponent.unregisterKeyboardAction(javax.swing.KeyStroke)
    </p>
    <p>
      public int javax.swing.JComponent.getX()
    </p>
    <p>
      public int javax.swing.JComponent.getY()
    </p>
    <p>
      public java.awt.Graphics javax.swing.JComponent.getGraphics()
    </p>
    <p>
      public void javax.swing.JComponent.addNotify()
    </p>
    <p>
      public float javax.swing.JComponent.getAlignmentX()
    </p>
    <p>
      public float javax.swing.JComponent.getAlignmentY()
    </p>
    <p>
      public int javax.swing.JComponent.getBaseline(int,int)
    </p>
    <p>
      public java.awt.Component$BaselineResizeBehavior javax.swing.JComponent.getBaselineResizeBehavior()
    </p>
    <p>
      public java.awt.Insets javax.swing.JComponent.getInsets(java.awt.Insets)
    </p>
    <p>
      public java.awt.Insets javax.swing.JComponent.getInsets()
    </p>
    <p>
      public java.awt.Dimension javax.swing.JComponent.getMaximumSize()
    </p>
    <p>
      public java.awt.Dimension javax.swing.JComponent.getMinimumSize()
    </p>
    <p>
      public void javax.swing.JComponent.hide()
    </p>
    <p>
      public boolean javax.swing.JComponent.isDoubleBuffered()
    </p>
    <p>
      public boolean javax.swing.JComponent.isValidateRoot()
    </p>
    <p>
      public void javax.swing.JComponent.printAll(java.awt.Graphics)
    </p>
    <p>
      public void javax.swing.JComponent.repaint(java.awt.Rectangle)
    </p>
    <p>
      public void javax.swing.JComponent.repaint(long,int,int,int,int)
    </p>
    <p>
      public boolean javax.swing.JComponent.requestFocusInWindow()
    </p>
    <p>
      public void javax.swing.JComponent.reshape(int,int,int,int)
    </p>
    <p>
      public void javax.swing.JComponent.setBackground(java.awt.Color)
    </p>
    <p>
      public void javax.swing.JComponent.setFocusTraversalKeys(int,java.util.Set)
    </p>
    <p>
      public void javax.swing.JComponent.setFont(java.awt.Font)
    </p>
    <p>
      public void javax.swing.JComponent.setForeground(java.awt.Color)
    </p>
    <p>
      public void javax.swing.JComponent.setMaximumSize(java.awt.Dimension)
    </p>
    <p>
      public void javax.swing.JComponent.setMinimumSize(java.awt.Dimension)
    </p>
    <p>
      public void javax.swing.JComponent.setPreferredSize(java.awt.Dimension)
    </p>
    <p>
      public void javax.swing.JComponent.setToolTipText(java.lang.String)
    </p>
    <p>
      public static void javax.swing.JComponent.setDefaultLocale(java.util.Locale)
    </p>
    <p>
      public boolean javax.swing.JComponent.requestFocus(boolean)
    </p>
    <p>
      public void javax.swing.JComponent.requestFocus()
    </p>
    <p>
      public void javax.swing.JComponent.setEnabled(boolean)
    </p>
    <p>
      public void javax.swing.JComponent.revalidate()
    </p>
    <p>
      public void javax.swing.JComponent.firePropertyChange(java.lang.String,char,char)
    </p>
    <p>
      public void javax.swing.JComponent.firePropertyChange(java.lang.String,boolean,boolean)
    </p>
    <p>
      public void javax.swing.JComponent.firePropertyChange(java.lang.String,int,int)
    </p>
    <p>
      public void javax.swing.JComponent.addAncestorListener(javax.swing.event.AncestorListener)
    </p>
    <p>
      public synchronized void javax.swing.JComponent.addVetoableChangeListener(java.beans.VetoableChangeListener)
    </p>
    <p>
      public void javax.swing.JComponent.computeVisibleRect(java.awt.Rectangle)
    </p>
    <p>
      public javax.swing.JToolTip javax.swing.JComponent.createToolTip()
    </p>
    <p>
      public java.awt.event.ActionListener javax.swing.JComponent.getActionForKeyStroke(javax.swing.KeyStroke)
    </p>
    <p>
      public final javax.swing.ActionMap javax.swing.JComponent.getActionMap()
    </p>
    <p>
      public javax.swing.event.AncestorListener[] javax.swing.JComponent.getAncestorListeners()
    </p>
    <p>
      public boolean javax.swing.JComponent.getAutoscrolls()
    </p>
    <p>
      public javax.swing.border.Border javax.swing.JComponent.getBorder()
    </p>
    <p>
      public final java.lang.Object javax.swing.JComponent.getClientProperty(java.lang.Object)
    </p>
    <p>
      public javax.swing.JPopupMenu javax.swing.JComponent.getComponentPopupMenu()
    </p>
    <p>
      public int javax.swing.JComponent.getConditionForKeyStroke(javax.swing.KeyStroke)
    </p>
    <p>
      public int javax.swing.JComponent.getDebugGraphicsOptions()
    </p>
    <p>
      public static java.util.Locale javax.swing.JComponent.getDefaultLocale()
    </p>
    <p>
      public boolean javax.swing.JComponent.getInheritsPopupMenu()
    </p>
    <p>
      public final javax.swing.InputMap javax.swing.JComponent.getInputMap()
    </p>
    <p>
      public final javax.swing.InputMap javax.swing.JComponent.getInputMap(int)
    </p>
    <p>
      public javax.swing.InputVerifier javax.swing.JComponent.getInputVerifier()
    </p>
    <p>
      public java.awt.Component javax.swing.JComponent.getNextFocusableComponent()
    </p>
    <p>
      public java.awt.Component java.awt.Container.add(java.awt.Component)
    </p>
    <p>
      public java.awt.Component java.awt.Container.add(java.lang.String,java.awt.Component)
    </p>
    <p>
      public void java.awt.Container.add(java.awt.Component,java.lang.Object)
    </p>
    <p>
      public java.awt.Component java.awt.Container.add(java.awt.Component,int)
    </p>
    <p>
      public void java.awt.Container.add(java.awt.Component,java.lang.Object,int)
    </p>
    <p>
      public void java.awt.Container.remove(java.awt.Component)
    </p>
    <p>
      public void java.awt.Container.remove(int)
    </p>
    <p>
      public void java.awt.Container.list(java.io.PrintWriter,int)
    </p>
    <p>
      public void java.awt.Container.list(java.io.PrintStream,int)
    </p>
    <p>
      public void java.awt.Container.removeAll()
    </p>
    <p>
      public void java.awt.Container.setFocusTraversalPolicy(java.awt.FocusTraversalPolicy)
    </p>
    <p>
      public java.awt.Component java.awt.Container.locate(int,int)
    </p>
    <p>
      public synchronized void java.awt.Container.addContainerListener(java.awt.event.ContainerListener)
    </p>
    <p>
      public synchronized java.awt.event.ContainerListener[] java.awt.Container.getContainerListeners()
    </p>
    <p>
      public java.awt.Insets java.awt.Container.insets()
    </p>
    <p>
      public boolean java.awt.Container.isAncestorOf(java.awt.Component)
    </p>
    <p>
      public final boolean java.awt.Container.isFocusTraversalPolicyProvider()
    </p>
    <p>
      public boolean java.awt.Container.isFocusTraversalPolicySet()
    </p>
    <p>
      public void java.awt.Container.paintComponents(java.awt.Graphics)
    </p>
    <p>
      public void java.awt.Container.printComponents(java.awt.Graphics)
    </p>
    <p>
      public synchronized void java.awt.Container.removeContainerListener(java.awt.event.ContainerListener)
    </p>
    <p>
      public void java.awt.Container.setComponentZOrder(java.awt.Component,int)
    </p>
    <p>
      public void java.awt.Container.setFocusCycleRoot(boolean)
    </p>
    <p>
      public final void java.awt.Container.setFocusTraversalPolicyProvider(boolean)
    </p>
    <p>
      public void java.awt.Container.setLayout(java.awt.LayoutManager)
    </p>
    <p>
      public void java.awt.Container.transferFocusDownCycle()
    </p>
    <p>
      public java.awt.Component[] java.awt.Container.getComponents()
    </p>
    <p>
      public void java.awt.Container.applyComponentOrientation(java.awt.ComponentOrientation)
    </p>
    <p>
      public boolean java.awt.Container.areFocusTraversalKeysSet(int)
    </p>
    <p>
      public int java.awt.Container.countComponents()
    </p>
    <p>
      public void java.awt.Container.deliverEvent(java.awt.Event)
    </p>
    <p>
      public void java.awt.Container.doLayout()
    </p>
    <p>
      public java.awt.Component java.awt.Container.findComponentAt(java.awt.Point)
    </p>
    <p>
      public java.awt.Component java.awt.Container.findComponentAt(int,int)
    </p>
    <p>
      public java.awt.Component java.awt.Container.getComponentAt(int,int)
    </p>
    <p>
      public java.awt.Component java.awt.Container.getComponentAt(java.awt.Point)
    </p>
    <p>
      public int java.awt.Container.getComponentZOrder(java.awt.Component)
    </p>
    <p>
      public java.util.Set java.awt.Container.getFocusTraversalKeys(int)
    </p>
    <p>
      public java.awt.FocusTraversalPolicy java.awt.Container.getFocusTraversalPolicy()
    </p>
    <p>
      public java.awt.LayoutManager java.awt.Container.getLayout()
    </p>
    <p>
      public java.awt.Point java.awt.Container.getMousePosition(boolean) throws java.awt.HeadlessException
    </p>
    <p>
      public boolean java.awt.Container.isFocusCycleRoot(java.awt.Container)
    </p>
    <p>
      public boolean java.awt.Container.isFocusCycleRoot()
    </p>
    <p>
      public void java.awt.Container.layout()
    </p>
    <p>
      public java.awt.Dimension java.awt.Container.minimumSize()
    </p>
    <p>
      public java.awt.Dimension java.awt.Container.preferredSize()
    </p>
    <p>
      public void java.awt.Container.invalidate()
    </p>
    <p>
      public void java.awt.Container.validate()
    </p>
    <p>
      public void java.awt.Container.addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
    </p>
    <p>
      public void java.awt.Container.addPropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public java.awt.Component java.awt.Container.getComponent(int)
    </p>
    <p>
      public int java.awt.Container.getComponentCount()
    </p>
    <p>
      public void java.awt.Component.add(java.awt.PopupMenu)
    </p>
    <p>
      public void java.awt.Component.remove(java.awt.MenuComponent)
    </p>
    <p>
      public java.lang.String java.awt.Component.toString()
    </p>
    <p>
      public java.lang.String java.awt.Component.getName()
    </p>
    <p>
      public boolean java.awt.Component.contains(java.awt.Point)
    </p>
    <p>
      public java.awt.Dimension java.awt.Component.size()
    </p>
    <p>
      public java.awt.Point java.awt.Component.getLocation()
    </p>
    <p>
      public java.awt.Container java.awt.Component.getParent()
    </p>
    <p>
      public void java.awt.Component.setName(java.lang.String)
    </p>
    <p>
      public void java.awt.Component.list(java.io.PrintWriter)
    </p>
    <p>
      public void java.awt.Component.list()
    </p>
    <p>
      public void java.awt.Component.list(java.io.PrintStream)
    </p>
    <p>
      public java.awt.Dimension java.awt.Component.getSize()
    </p>
    <p>
      public java.awt.Point java.awt.Component.location()
    </p>
    <p>
      public void java.awt.Component.setSize(java.awt.Dimension)
    </p>
    <p>
      public void java.awt.Component.setSize(int,int)
    </p>
    <p>
      public void java.awt.Component.resize(int,int)
    </p>
    <p>
      public void java.awt.Component.resize(java.awt.Dimension)
    </p>
    <p>
      public void java.awt.Component.enable(boolean)
    </p>
    <p>
      public boolean java.awt.Component.isValid()
    </p>
    <p>
      public boolean java.awt.Component.imageUpdate(java.awt.Image,int,int,int,int,int)
    </p>
    <p>
      public boolean java.awt.Component.isLightweight()
    </p>
    <p>
      public boolean java.awt.Component.postEvent(java.awt.Event)
    </p>
    <p>
      public java.awt.Rectangle java.awt.Component.getBounds()
    </p>
    <p>
      public boolean java.awt.Component.action(java.awt.Event,java.lang.Object)
    </p>
    <p>
      public int java.awt.Component.checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
    </p>
    <p>
      public int java.awt.Component.checkImage(java.awt.Image,java.awt.image.ImageObserver)
    </p>
    <p>
      public java.awt.Image java.awt.Component.createImage(java.awt.image.ImageProducer)
    </p>
    <p>
      public java.awt.Image java.awt.Component.createImage(int,int)
    </p>
    <p>
      public java.awt.image.ColorModel java.awt.Component.getColorModel()
    </p>
    <p>
      public java.awt.Font java.awt.Component.getFont()
    </p>
    <p>
      public boolean java.awt.Component.prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
    </p>
    <p>
      public boolean java.awt.Component.prepareImage(java.awt.Image,java.awt.image.ImageObserver)
    </p>
    <p>
      public java.awt.peer.ComponentPeer java.awt.Component.getPeer()
    </p>
    <p>
      public boolean java.awt.Component.isFocusable()
    </p>
    <p>
      public java.awt.Color java.awt.Component.getBackground()
    </p>
    <p>
      public java.awt.Color java.awt.Component.getForeground()
    </p>
    <p>
      public java.awt.GraphicsConfiguration java.awt.Component.getGraphicsConfiguration()
    </p>
    <p>
      public synchronized void java.awt.Component.addComponentListener(java.awt.event.ComponentListener)
    </p>
    <p>
      public synchronized void java.awt.Component.addFocusListener(java.awt.event.FocusListener)
    </p>
    <p>
      public void java.awt.Component.addHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)
    </p>
    <p>
      public void java.awt.Component.addHierarchyListener(java.awt.event.HierarchyListener)
    </p>
    <p>
      public synchronized void java.awt.Component.addKeyListener(java.awt.event.KeyListener)
    </p>
    <p>
      public synchronized void java.awt.Component.addMouseListener(java.awt.event.MouseListener)
    </p>
    <p>
      public synchronized void java.awt.Component.addMouseMotionListener(java.awt.event.MouseMotionListener)
    </p>
    <p>
      public synchronized void java.awt.Component.addMouseWheelListener(java.awt.event.MouseWheelListener)
    </p>
    <p>
      public java.awt.Rectangle java.awt.Component.bounds()
    </p>
    <p>
      public java.awt.image.VolatileImage java.awt.Component.createVolatileImage(int,int)
    </p>
    <p>
      public java.awt.image.VolatileImage java.awt.Component.createVolatileImage(int,int,java.awt.ImageCapabilities) throws java.awt.AWTException
    </p>
    <p>
      public final void java.awt.Component.dispatchEvent(java.awt.AWTEvent)
    </p>
    <p>
      public void java.awt.Component.enableInputMethods(boolean)
    </p>
    <p>
      public synchronized java.awt.event.ComponentListener[] java.awt.Component.getComponentListeners()
    </p>
    <p>
      public java.awt.ComponentOrientation java.awt.Component.getComponentOrientation()
    </p>
    <p>
      public java.awt.Cursor java.awt.Component.getCursor()
    </p>
    <p>
      public synchronized java.awt.dnd.DropTarget java.awt.Component.getDropTarget()
    </p>
    <p>
      public java.awt.Container java.awt.Component.getFocusCycleRootAncestor()
    </p>
    <p>
      public synchronized java.awt.event.FocusListener[] java.awt.Component.getFocusListeners()
    </p>
    <p>
      public boolean java.awt.Component.getFocusTraversalKeysEnabled()
    </p>
    <p>
      public synchronized java.awt.event.HierarchyBoundsListener[] java.awt.Component.getHierarchyBoundsListeners()
    </p>
    <p>
      public synchronized java.awt.event.HierarchyListener[] java.awt.Component.getHierarchyListeners()
    </p>
    <p>
      public boolean java.awt.Component.getIgnoreRepaint()
    </p>
    <p>
      public java.awt.im.InputContext java.awt.Component.getInputContext()
    </p>
    <p>
      public synchronized java.awt.event.InputMethodListener[] java.awt.Component.getInputMethodListeners()
    </p>
    <p>
      public synchronized java.awt.event.KeyListener[] java.awt.Component.getKeyListeners()
    </p>
    <p>
      public java.awt.Point java.awt.Component.getLocationOnScreen()
    </p>
    <p>
      public synchronized java.awt.event.MouseListener[] java.awt.Component.getMouseListeners()
    </p>
    <p>
      public synchronized java.awt.event.MouseMotionListener[] java.awt.Component.getMouseMotionListeners()
    </p>
    <p>
      public java.awt.Point java.awt.Component.getMousePosition() throws java.awt.HeadlessException
    </p>
    <p>
      public synchronized java.awt.event.MouseWheelListener[] java.awt.Component.getMouseWheelListeners()
    </p>
    <p>
      public java.awt.Toolkit java.awt.Component.getToolkit()
    </p>
    <p>
      public final java.lang.Object java.awt.Component.getTreeLock()
    </p>
    <p>
      public boolean java.awt.Component.gotFocus(java.awt.Event,java.lang.Object)
    </p>
    <p>
      public boolean java.awt.Component.handleEvent(java.awt.Event)
    </p>
    <p>
      public boolean java.awt.Component.hasFocus()
    </p>
    <p>
      public boolean java.awt.Component.isBackgroundSet()
    </p>
    <p>
      public boolean java.awt.Component.isCursorSet()
    </p>
    <p>
      public boolean java.awt.Component.isDisplayable()
    </p>
    <p>
      public boolean java.awt.Component.isFocusOwner()
    </p>
    <p>
      public boolean java.awt.Component.isFocusTraversable()
    </p>
    <p>
      public boolean java.awt.Component.isFontSet()
    </p>
    <p>
      public boolean java.awt.Component.isForegroundSet()
    </p>
    <p>
      public boolean java.awt.Component.isMaximumSizeSet()
    </p>
    <p>
      public boolean java.awt.Component.isMinimumSizeSet()
    </p>
    <p>
      public boolean java.awt.Component.isPreferredSizeSet()
    </p>
    <p>
      public boolean java.awt.Component.isShowing()
    </p>
    <p>
      public boolean java.awt.Component.keyDown(java.awt.Event,int)
    </p>
    <p>
      public boolean java.awt.Component.keyUp(java.awt.Event,int)
    </p>
    <p>
      public boolean java.awt.Component.lostFocus(java.awt.Event,java.lang.Object)
    </p>
    <p>
      public boolean java.awt.Component.mouseDown(java.awt.Event,int,int)
    </p>
    <p>
      public boolean java.awt.Component.mouseDrag(java.awt.Event,int,int)
    </p>
    <p>
      public boolean java.awt.Component.mouseEnter(java.awt.Event,int,int)
    </p>
    <p>
      public boolean java.awt.Component.mouseExit(java.awt.Event,int,int)
    </p>
    <p>
      public boolean java.awt.Component.mouseMove(java.awt.Event,int,int)
    </p>
    <p>
      public boolean java.awt.Component.mouseUp(java.awt.Event,int,int)
    </p>
    <p>
      public void java.awt.Component.move(int,int)
    </p>
    <p>
      public void java.awt.Component.nextFocus()
    </p>
    <p>
      public void java.awt.Component.paintAll(java.awt.Graphics)
    </p>
    <p>
      public synchronized void java.awt.Component.removeComponentListener(java.awt.event.ComponentListener)
    </p>
    <p>
      public synchronized void java.awt.Component.removeFocusListener(java.awt.event.FocusListener)
    </p>
    <p>
      public void java.awt.Component.removeHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)
    </p>
    <p>
      public void java.awt.Component.removeHierarchyListener(java.awt.event.HierarchyListener)
    </p>
    <p>
      public synchronized void java.awt.Component.removeInputMethodListener(java.awt.event.InputMethodListener)
    </p>
    <p>
      public synchronized void java.awt.Component.removeKeyListener(java.awt.event.KeyListener)
    </p>
    <p>
      public synchronized void java.awt.Component.removeMouseListener(java.awt.event.MouseListener)
    </p>
    <p>
      public synchronized void java.awt.Component.removeMouseMotionListener(java.awt.event.MouseMotionListener)
    </p>
    <p>
      public synchronized void java.awt.Component.removeMouseWheelListener(java.awt.event.MouseWheelListener)
    </p>
    <p>
      public void java.awt.Component.repaint()
    </p>
    <p>
      public void java.awt.Component.repaint(long)
    </p>
    <p>
      public void java.awt.Component.repaint(int,int,int,int)
    </p>
    <p>
      public void java.awt.Component.setBounds(java.awt.Rectangle)
    </p>
    <p>
      public void java.awt.Component.setBounds(int,int,int,int)
    </p>
    <p>
      public void java.awt.Component.setCursor(java.awt.Cursor)
    </p>
    <p>
      public synchronized void java.awt.Component.setDropTarget(java.awt.dnd.DropTarget)
    </p>
    <p>
      public void java.awt.Component.setFocusTraversalKeysEnabled(boolean)
    </p>
    <p>
      public void java.awt.Component.setFocusable(boolean)
    </p>
    <p>
      public void java.awt.Component.setIgnoreRepaint(boolean)
    </p>
    <p>
      public void java.awt.Component.setLocation(int,int)
    </p>
    <p>
      public void java.awt.Component.setLocation(java.awt.Point)
    </p>
    <p>
      public void java.awt.Component.show(boolean)
    </p>
    <p>
      public void java.awt.Component.show()
    </p>
    <p>
      public void java.awt.Component.transferFocus()
    </p>
    <p>
      public void java.awt.Component.transferFocusBackward()
    </p>
    <p>
      public void java.awt.Component.transferFocusUpCycle()
    </p>
    <p>
      public java.util.Locale java.awt.Component.getLocale()
    </p>
    <p>
      public void java.awt.Component.setLocale(java.util.Locale)
    </p>
    <p>
      public boolean java.awt.Component.inside(int,int)
    </p>
    <p>
      public void java.awt.Component.removePropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public void java.awt.Component.removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
    </p>
    <p>
      public java.beans.PropertyChangeListener[] java.awt.Component.getPropertyChangeListeners(java.lang.String)
    </p>
    <p>
      public java.beans.PropertyChangeListener[] java.awt.Component.getPropertyChangeListeners()
    </p>
    <p>
      public boolean java.awt.Component.isVisible()
    </p>
    <p>
      public boolean java.awt.Component.isEnabled()
    </p>
    <p>
      public void java.awt.Component.firePropertyChange(java.lang.String,float,float)
    </p>
    <p>
      public void java.awt.Component.firePropertyChange(java.lang.String,double,double)
    </p>
    <p>
      public void java.awt.Component.firePropertyChange(java.lang.String,short,short)
    </p>
    <p>
      public void java.awt.Component.firePropertyChange(java.lang.String,byte,byte)
    </p>
    <p>
      public void java.awt.Component.firePropertyChange(java.lang.String,long,long)
    </p>
    <p>
      public final void java.lang.Object.wait() throws java.lang.InterruptedException
    </p>
    <p>
      public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      public boolean java.lang.Object.equals(java.lang.Object)
    </p>
    <p>
      public native int java.lang.Object.hashCode()
    </p>
    <p>
      public final native java.lang.Class java.lang.Object.getClass()
    </p>
    <p>
      public final native void java.lang.Object.notify()
    </p>
    <p>
      public final native void java.lang.Object.notifyAll()
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="result" ID="ID_12729449" CREATED="1618234265334" MODIFIED="1618234265334"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .drop(java.awt.dnd.DropTargetDropEvent)
    </p>
    <p>
      .getDocument()
    </p>
    <p>
      .getDocument()
    </p>
    <p>
      .setDocument(javax.swing.text.Document)
    </p>
    <p>
      .getSelectedText()
    </p>
    <p>
      .replaceSelection(java.lang.String)
    </p>
    <p>
      .replaceSelection(com.lightdev.app.shtm.HTMLText)
    </p>
    <p>
      .getTransferHandler()
    </p>
    <p>
      .setUI(javax.swing.plaf.TextUI)
    </p>
    <p>
      .updateUI()
    </p>
    <p>
      .setText(java.lang.String)
    </p>
    <p>
      .removeCharacterAttributes()
    </p>
    <p>
      .dragEnter(java.awt.dnd.DragSourceDragEvent)
    </p>
    <p>
      .dragEnter(java.awt.dnd.DropTargetDragEvent)
    </p>
    <p>
      .dragExit(java.awt.dnd.DropTargetEvent)
    </p>
    <p>
      .dragExit(java.awt.dnd.DragSourceEvent)
    </p>
    <p>
      .setPopup(javax.swing.JPopupMenu)
    </p>
    <p>
      .getPopup()
    </p>
    <p>
      .getCurrentLinkElement()
    </p>
    <p>
      .appendTableColumn()
    </p>
    <p>
      .applyTableAttributes(javax.swing.text.AttributeSet)
    </p>
    <p>
      .applyListAttributes(javax.swing.text.AttributeSet)
    </p>
    <p>
      .applyCellAttributes(javax.swing.text.AttributeSet,int)
    </p>
    <p>
      .getCurrentTableCell()
    </p>
    <p>
      .setPasteModeFromPrefs()
    </p>
    <p>
      .insertTableColumn()
    </p>
    <p>
      .applyParagraphTag(java.lang.String,java.util.Vector)
    </p>
    <p>
      .applyCharacterTag(java.lang.String)
    </p>
    <p>
      .dragOver(java.awt.dnd.DragSourceDragEvent)
    </p>
    <p>
      .dragOver(java.awt.dnd.DropTargetDragEvent)
    </p>
    <p>
      .dropActionChanged(java.awt.dnd.DragSourceDragEvent)
    </p>
    <p>
      .dropActionChanged(java.awt.dnd.DropTargetDragEvent)
    </p>
    <p>
      .toggleTableHeaderCell()
    </p>
    <p>
      .getSHTMLDocument()
    </p>
    <p>
      .deleteTableCol()
    </p>
    <p>
      .appendTableRow()
    </p>
    <p>
      .insertTableRow(java.lang.String)
    </p>
    <p>
      .deleteTableRow()
    </p>
    <p>
      .dragGestureRecognized(java.awt.dnd.DragGestureEvent)
    </p>
    <p>
      .setLink(java.lang.String,java.lang.String,java.lang.String)
    </p>
    <p>
      .setLink(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Dimension)
    </p>
    <p>
      .removeParagraphAttributes()
    </p>
    <p>
      .getCurrentParagraphElement()
    </p>
    <p>
      .tryDefaultKeyStrokeActionWithinCell(int,int,java.awt.event.ActionEvent)
    </p>
    <p>
      .initDnd()
    </p>
    <p>
      .removeAnchor(java.lang.String)
    </p>
    <p>
      .toggleList(java.lang.String,javax.swing.text.AttributeSet,boolean)
    </p>
    <p>
      .insertNewTable(int)
    </p>
    <p>
      .setPasteMode(com.lightdev.app.shtm.SHTMLEditorPane$PasteMode)
    </p>
    <p>
      .getPasteMode()
    </p>
    <p>
      .insertAnchor(java.lang.String)
    </p>
    <p>
      .insertBreak()
    </p>
    <p>
      .dragDropEnd(java.awt.dnd.DragSourceDropEvent)
    </p>
    <p>
      .getTableCell(int)
    </p>
    <p>
      .goPrevCell(javax.swing.text.Element)
    </p>
    <p>
      .goNextCell(javax.swing.text.Element)
    </p>
    <p>
      .elementToHTML(javax.swing.text.Element)
    </p>
    <p>
      .applyAttributes(javax.swing.text.AttributeSet,boolean)
    </p>
    <p>
      .applyAttributes(javax.swing.text.AttributeSet,boolean,boolean)
    </p>
    <p>
      .read(java.io.InputStream,java.lang.Object) throws java.io.IOException
    </p>
    <p>
      .getScrollableTracksViewportWidth()
    </p>
    <p>
      .getEditorKit()
    </p>
    <p>
      .getScrollableTracksViewportHeight()
    </p>
    <p>
      .getContentType()
    </p>
    <p>
      .setContentType(java.lang.String)
    </p>
    <p>
      .getText()
    </p>
    <p>
      .getUIClassID()
    </p>
    <p>
      .getAccessibleContext()
    </p>
    <p>
      .getPreferredSize()
    </p>
    <p>
      .setEditorKit(javax.swing.text.EditorKit)
    </p>
    <p>
      .addHyperlinkListener(javax.swing.event.HyperlinkListener)
    </p>
    <p>
      .createEditorKitForContentType(java.lang.String)
    </p>
    <p>
      .fireHyperlinkUpdate(javax.swing.event.HyperlinkEvent)
    </p>
    <p>
      .getEditorKitClassNameForContentType(java.lang.String)
    </p>
    <p>
      .getEditorKitForContentType(java.lang.String)
    </p>
    <p>
      .getHyperlinkListeners()
    </p>
    <p>
      .getPage()
    </p>
    <p>
      .registerEditorKitForContentType(java.lang.String,java.lang.String)
    </p>
    <p>
      .registerEditorKitForContentType(java.lang.String,java.lang.String,java.lang.ClassLoader)
    </p>
    <p>
      .removeHyperlinkListener(javax.swing.event.HyperlinkListener)
    </p>
    <p>
      .scrollToReference(java.lang.String)
    </p>
    <p>
      .setEditorKitForContentType(java.lang.String,javax.swing.text.EditorKit)
    </p>
    <p>
      .setPage(java.lang.String) throws java.io.IOException
    </p>
    <p>
      .setPage(java.net.URL) throws java.io.IOException
    </p>
    <p>
      .write(java.io.Writer) throws java.io.IOException
    </p>
    <p>
      .read(java.io.Reader,java.lang.Object) throws java.io.IOException
    </p>
    <p>
      .getActions()
    </p>
    <p>
      .print() throws java.awt.print.PrinterException
    </p>
    <p>
      .print(java.text.MessageFormat,java.text.MessageFormat) throws java.awt.print.PrinterException
    </p>
    <p>
      .print(java.text.MessageFormat,java.text.MessageFormat,boolean,javax.print.PrintService,javax.print.attribute.PrintRequestAttributeSet,boolean) throws java.awt.print.PrinterException
    </p>
    <p>
      .copy()
    </p>
    <p>
      .getPreferredScrollableViewportSize()
    </p>
    <p>
      .getScrollableUnitIncrement(java.awt.Rectangle,int,int)
    </p>
    <p>
      .addCaretListener(javax.swing.event.CaretListener)
    </p>
    <p>
      .addKeymap(java.lang.String,javax.swing.text.Keymap)
    </p>
    <p>
      .cut()
    </p>
    <p>
      .getCaret()
    </p>
    <p>
      .getCaretColor()
    </p>
    <p>
      .getCaretListeners()
    </p>
    <p>
      .getCaretPosition()
    </p>
    <p>
      .getDisabledTextColor()
    </p>
    <p>
      .getDragEnabled()
    </p>
    <p>
      .getDropLocation()
    </p>
    <p>
      .getDropMode()
    </p>
    <p>
      .getFocusAccelerator()
    </p>
    <p>
      .getHighlighter()
    </p>
    <p>
      .getKeymap(java.lang.String)
    </p>
    <p>
      .getKeymap()
    </p>
    <p>
      .getMargin()
    </p>
    <p>
      .getNavigationFilter()
    </p>
    <p>
      .getPrintable(java.text.MessageFormat,java.text.MessageFormat)
    </p>
    <p>
      .getScrollableBlockIncrement(java.awt.Rectangle,int,int)
    </p>
    <p>
      .getSelectedTextColor()
    </p>
    <p>
      .getSelectionColor()
    </p>
    <p>
      .getSelectionEnd()
    </p>
    <p>
      .getSelectionStart()
    </p>
    <p>
      .getUI()
    </p>
    <p>
      .loadKeymap(javax.swing.text.Keymap,javax.swing.text.JTextComponent$KeyBinding[],javax.swing.Action[])
    </p>
    <p>
      .modelToView(int) throws javax.swing.text.BadLocationException
    </p>
    <p>
      .moveCaretPosition(int)
    </p>
    <p>
      .paste()
    </p>
    <p>
      .removeCaretListener(javax.swing.event.CaretListener)
    </p>
    <p>
      .removeKeymap(java.lang.String)
    </p>
    <p>
      .selectAll()
    </p>
    <p>
      .setCaret(javax.swing.text.Caret)
    </p>
    <p>
      .setCaretColor(java.awt.Color)
    </p>
    <p>
      .setCaretPosition(int)
    </p>
    <p>
      .setDisabledTextColor(java.awt.Color)
    </p>
    <p>
      .setDragEnabled(boolean)
    </p>
    <p>
      .setDropMode(javax.swing.DropMode)
    </p>
    <p>
      .setFocusAccelerator(char)
    </p>
    <p>
      .setHighlighter(javax.swing.text.Highlighter)
    </p>
    <p>
      .setKeymap(javax.swing.text.Keymap)
    </p>
    <p>
      .setNavigationFilter(javax.swing.text.NavigationFilter)
    </p>
    <p>
      .setSelectedTextColor(java.awt.Color)
    </p>
    <p>
      .setSelectionColor(java.awt.Color)
    </p>
    <p>
      .setSelectionEnd(int)
    </p>
    <p>
      .setSelectionStart(int)
    </p>
    <p>
      .viewToModel(java.awt.Point)
    </p>
    <p>
      .select(int,int)
    </p>
    <p>
      .getText(int,int) throws javax.swing.text.BadLocationException
    </p>
    <p>
      .setEditable(boolean)
    </p>
    <p>
      .setMargin(java.awt.Insets)
    </p>
    <p>
      .getToolTipText(java.awt.event.MouseEvent)
    </p>
    <p>
      .isEditable()
    </p>
    <p>
      .addInputMethodListener(java.awt.event.InputMethodListener)
    </p>
    <p>
      .getInputMethodRequests()
    </p>
    <p>
      .removeNotify()
    </p>
    <p>
      .setComponentOrientation(java.awt.ComponentOrientation)
    </p>
    <p>
      .update(java.awt.Graphics)
    </p>
    <p>
      .contains(int,int)
    </p>
    <p>
      .getLocation(java.awt.Point)
    </p>
    <p>
      .print(java.awt.Graphics)
    </p>
    <p>
      .getSize(java.awt.Dimension)
    </p>
    <p>
      .isOpaque()
    </p>
    <p>
      .disable()
    </p>
    <p>
      .enable()
    </p>
    <p>
      .setVisible(boolean)
    </p>
    <p>
      .getHeight()
    </p>
    <p>
      .getWidth()
    </p>
    <p>
      .getBounds(java.awt.Rectangle)
    </p>
    <p>
      .paint(java.awt.Graphics)
    </p>
    <p>
      .getRootPane()
    </p>
    <p>
      .getFontMetrics(java.awt.Font)
    </p>
    <p>
      .getListeners(java.lang.Class)
    </p>
    <p>
      .getPopupLocation(java.awt.event.MouseEvent)
    </p>
    <p>
      .getRegisteredKeyStrokes()
    </p>
    <p>
      .getToolTipLocation(java.awt.event.MouseEvent)
    </p>
    <p>
      .getToolTipText()
    </p>
    <p>
      .getTopLevelAncestor()
    </p>
    <p>
      .getVerifyInputWhenFocusTarget()
    </p>
    <p>
      .getVetoableChangeListeners()
    </p>
    <p>
      .getVisibleRect()
    </p>
    <p>
      .grabFocus()
    </p>
    <p>
      .isLightweightComponent(java.awt.Component)
    </p>
    <p>
      .isManagingFocus()
    </p>
    <p>
      .isOptimizedDrawingEnabled()
    </p>
    <p>
      .isPaintingForPrint()
    </p>
    <p>
      .isPaintingTile()
    </p>
    <p>
      .isRequestFocusEnabled()
    </p>
    <p>
      .paintImmediately(int,int,int,int)
    </p>
    <p>
      .paintImmediately(java.awt.Rectangle)
    </p>
    <p>
      .putClientProperty(java.lang.Object,java.lang.Object)
    </p>
    <p>
      .registerKeyboardAction(java.awt.event.ActionListener,javax.swing.KeyStroke,int)
    </p>
    <p>
      .registerKeyboardAction(java.awt.event.ActionListener,java.lang.String,javax.swing.KeyStroke,int)
    </p>
    <p>
      .removeAncestorListener(javax.swing.event.AncestorListener)
    </p>
    <p>
      .removeVetoableChangeListener(java.beans.VetoableChangeListener)
    </p>
    <p>
      .requestDefaultFocus()
    </p>
    <p>
      .resetKeyboardActions()
    </p>
    <p>
      .scrollRectToVisible(java.awt.Rectangle)
    </p>
    <p>
      .setActionMap(javax.swing.ActionMap)
    </p>
    <p>
      .setAlignmentX(float)
    </p>
    <p>
      .setAlignmentY(float)
    </p>
    <p>
      .setAutoscrolls(boolean)
    </p>
    <p>
      .setBorder(javax.swing.border.Border)
    </p>
    <p>
      .setComponentPopupMenu(javax.swing.JPopupMenu)
    </p>
    <p>
      .setDebugGraphicsOptions(int)
    </p>
    <p>
      .setDoubleBuffered(boolean)
    </p>
    <p>
      .setInheritsPopupMenu(boolean)
    </p>
    <p>
      .setInputMap(int,javax.swing.InputMap)
    </p>
    <p>
      .setInputVerifier(javax.swing.InputVerifier)
    </p>
    <p>
      .setNextFocusableComponent(java.awt.Component)
    </p>
    <p>
      .setOpaque(boolean)
    </p>
    <p>
      .setRequestFocusEnabled(boolean)
    </p>
    <p>
      .setTransferHandler(javax.swing.TransferHandler)
    </p>
    <p>
      .setVerifyInputWhenFocusTarget(boolean)
    </p>
    <p>
      .unregisterKeyboardAction(javax.swing.KeyStroke)
    </p>
    <p>
      .getX()
    </p>
    <p>
      .getY()
    </p>
    <p>
      .getGraphics()
    </p>
    <p>
      .addNotify()
    </p>
    <p>
      .getAlignmentX()
    </p>
    <p>
      .getAlignmentY()
    </p>
    <p>
      .getBaseline(int,int)
    </p>
    <p>
      .getBaselineResizeBehavior()
    </p>
    <p>
      .getInsets(java.awt.Insets)
    </p>
    <p>
      .getInsets()
    </p>
    <p>
      .getMaximumSize()
    </p>
    <p>
      .getMinimumSize()
    </p>
    <p>
      .hide()
    </p>
    <p>
      .isDoubleBuffered()
    </p>
    <p>
      .isValidateRoot()
    </p>
    <p>
      .printAll(java.awt.Graphics)
    </p>
    <p>
      .repaint(java.awt.Rectangle)
    </p>
    <p>
      .repaint(long,int,int,int,int)
    </p>
    <p>
      .requestFocusInWindow()
    </p>
    <p>
      .reshape(int,int,int,int)
    </p>
    <p>
      .setBackground(java.awt.Color)
    </p>
    <p>
      .setFocusTraversalKeys(int,java.util.Set)
    </p>
    <p>
      .setFont(java.awt.Font)
    </p>
    <p>
      .setForeground(java.awt.Color)
    </p>
    <p>
      .setMaximumSize(java.awt.Dimension)
    </p>
    <p>
      .setMinimumSize(java.awt.Dimension)
    </p>
    <p>
      .setPreferredSize(java.awt.Dimension)
    </p>
    <p>
      .setToolTipText(java.lang.String)
    </p>
    <p>
      .setDefaultLocale(java.util.Locale)
    </p>
    <p>
      .requestFocus(boolean)
    </p>
    <p>
      .requestFocus()
    </p>
    <p>
      .setEnabled(boolean)
    </p>
    <p>
      .revalidate()
    </p>
    <p>
      .firePropertyChange(java.lang.String,char,char)
    </p>
    <p>
      .firePropertyChange(java.lang.String,boolean,boolean)
    </p>
    <p>
      .firePropertyChange(java.lang.String,int,int)
    </p>
    <p>
      .addAncestorListener(javax.swing.event.AncestorListener)
    </p>
    <p>
      .addVetoableChangeListener(java.beans.VetoableChangeListener)
    </p>
    <p>
      .computeVisibleRect(java.awt.Rectangle)
    </p>
    <p>
      .createToolTip()
    </p>
    <p>
      .getActionForKeyStroke(javax.swing.KeyStroke)
    </p>
    <p>
      .getActionMap()
    </p>
    <p>
      .getAncestorListeners()
    </p>
    <p>
      .getAutoscrolls()
    </p>
    <p>
      .getBorder()
    </p>
    <p>
      .getClientProperty(java.lang.Object)
    </p>
    <p>
      .getComponentPopupMenu()
    </p>
    <p>
      .getConditionForKeyStroke(javax.swing.KeyStroke)
    </p>
    <p>
      .getDebugGraphicsOptions()
    </p>
    <p>
      .getDefaultLocale()
    </p>
    <p>
      .getInheritsPopupMenu()
    </p>
    <p>
      .getInputMap()
    </p>
    <p>
      .getInputMap(int)
    </p>
    <p>
      .getInputVerifier()
    </p>
    <p>
      .getNextFocusableComponent()
    </p>
    <p>
      .add(java.awt.Component)
    </p>
    <p>
      .add(java.lang.String,java.awt.Component)
    </p>
    <p>
      .add(java.awt.Component,java.lang.Object)
    </p>
    <p>
      .add(java.awt.Component,int)
    </p>
    <p>
      .add(java.awt.Component,java.lang.Object,int)
    </p>
    <p>
      .remove(java.awt.Component)
    </p>
    <p>
      .remove(int)
    </p>
    <p>
      .list(java.io.PrintWriter,int)
    </p>
    <p>
      .list(java.io.PrintStream,int)
    </p>
    <p>
      .removeAll()
    </p>
    <p>
      .setFocusTraversalPolicy(java.awt.FocusTraversalPolicy)
    </p>
    <p>
      .locate(int,int)
    </p>
    <p>
      .addContainerListener(java.awt.event.ContainerListener)
    </p>
    <p>
      .getContainerListeners()
    </p>
    <p>
      .insets()
    </p>
    <p>
      .isAncestorOf(java.awt.Component)
    </p>
    <p>
      .isFocusTraversalPolicyProvider()
    </p>
    <p>
      .isFocusTraversalPolicySet()
    </p>
    <p>
      .paintComponents(java.awt.Graphics)
    </p>
    <p>
      .printComponents(java.awt.Graphics)
    </p>
    <p>
      .removeContainerListener(java.awt.event.ContainerListener)
    </p>
    <p>
      .setComponentZOrder(java.awt.Component,int)
    </p>
    <p>
      .setFocusCycleRoot(boolean)
    </p>
    <p>
      .setFocusTraversalPolicyProvider(boolean)
    </p>
    <p>
      .setLayout(java.awt.LayoutManager)
    </p>
    <p>
      .transferFocusDownCycle()
    </p>
    <p>
      .getComponents()
    </p>
    <p>
      .applyComponentOrientation(java.awt.ComponentOrientation)
    </p>
    <p>
      .areFocusTraversalKeysSet(int)
    </p>
    <p>
      .countComponents()
    </p>
    <p>
      .deliverEvent(java.awt.Event)
    </p>
    <p>
      .doLayout()
    </p>
    <p>
      .findComponentAt(java.awt.Point)
    </p>
    <p>
      .findComponentAt(int,int)
    </p>
    <p>
      .getComponentAt(int,int)
    </p>
    <p>
      .getComponentAt(java.awt.Point)
    </p>
    <p>
      .getComponentZOrder(java.awt.Component)
    </p>
    <p>
      .getFocusTraversalKeys(int)
    </p>
    <p>
      .getFocusTraversalPolicy()
    </p>
    <p>
      .getLayout()
    </p>
    <p>
      .getMousePosition(boolean) throws java.awt.HeadlessException
    </p>
    <p>
      .isFocusCycleRoot(java.awt.Container)
    </p>
    <p>
      .isFocusCycleRoot()
    </p>
    <p>
      .layout()
    </p>
    <p>
      .minimumSize()
    </p>
    <p>
      .preferredSize()
    </p>
    <p>
      .invalidate()
    </p>
    <p>
      .validate()
    </p>
    <p>
      .addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
    </p>
    <p>
      .addPropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      .getComponent(int)
    </p>
    <p>
      .getComponentCount()
    </p>
    <p>
      .add(java.awt.PopupMenu)
    </p>
    <p>
      .remove(java.awt.MenuComponent)
    </p>
    <p>
      .toString()
    </p>
    <p>
      .getName()
    </p>
    <p>
      .contains(java.awt.Point)
    </p>
    <p>
      .size()
    </p>
    <p>
      .getLocation()
    </p>
    <p>
      .getParent()
    </p>
    <p>
      .setName(java.lang.String)
    </p>
    <p>
      .list(java.io.PrintWriter)
    </p>
    <p>
      .list()
    </p>
    <p>
      .list(java.io.PrintStream)
    </p>
    <p>
      .getSize()
    </p>
    <p>
      .location()
    </p>
    <p>
      .setSize(java.awt.Dimension)
    </p>
    <p>
      .setSize(int,int)
    </p>
    <p>
      .resize(int,int)
    </p>
    <p>
      .resize(java.awt.Dimension)
    </p>
    <p>
      .enable(boolean)
    </p>
    <p>
      .isValid()
    </p>
    <p>
      .imageUpdate(java.awt.Image,int,int,int,int,int)
    </p>
    <p>
      .isLightweight()
    </p>
    <p>
      .postEvent(java.awt.Event)
    </p>
    <p>
      .getBounds()
    </p>
    <p>
      .action(java.awt.Event,java.lang.Object)
    </p>
    <p>
      .checkImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
    </p>
    <p>
      .checkImage(java.awt.Image,java.awt.image.ImageObserver)
    </p>
    <p>
      .createImage(java.awt.image.ImageProducer)
    </p>
    <p>
      .createImage(int,int)
    </p>
    <p>
      .getColorModel()
    </p>
    <p>
      .getFont()
    </p>
    <p>
      .prepareImage(java.awt.Image,int,int,java.awt.image.ImageObserver)
    </p>
    <p>
      .prepareImage(java.awt.Image,java.awt.image.ImageObserver)
    </p>
    <p>
      .getPeer()
    </p>
    <p>
      .isFocusable()
    </p>
    <p>
      .getBackground()
    </p>
    <p>
      .getForeground()
    </p>
    <p>
      .getGraphicsConfiguration()
    </p>
    <p>
      .addComponentListener(java.awt.event.ComponentListener)
    </p>
    <p>
      .addFocusListener(java.awt.event.FocusListener)
    </p>
    <p>
      .addHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)
    </p>
    <p>
      .addHierarchyListener(java.awt.event.HierarchyListener)
    </p>
    <p>
      .addKeyListener(java.awt.event.KeyListener)
    </p>
    <p>
      .addMouseListener(java.awt.event.MouseListener)
    </p>
    <p>
      .addMouseMotionListener(java.awt.event.MouseMotionListener)
    </p>
    <p>
      .addMouseWheelListener(java.awt.event.MouseWheelListener)
    </p>
    <p>
      .bounds()
    </p>
    <p>
      .createVolatileImage(int,int)
    </p>
    <p>
      .createVolatileImage(int,int,java.awt.ImageCapabilities) throws java.awt.AWTException
    </p>
    <p>
      .dispatchEvent(java.awt.AWTEvent)
    </p>
    <p>
      .enableInputMethods(boolean)
    </p>
    <p>
      .getComponentListeners()
    </p>
    <p>
      .getComponentOrientation()
    </p>
    <p>
      .getCursor()
    </p>
    <p>
      .getDropTarget()
    </p>
    <p>
      .getFocusCycleRootAncestor()
    </p>
    <p>
      .getFocusListeners()
    </p>
    <p>
      .getFocusTraversalKeysEnabled()
    </p>
    <p>
      .getHierarchyBoundsListeners()
    </p>
    <p>
      .getHierarchyListeners()
    </p>
    <p>
      .getIgnoreRepaint()
    </p>
    <p>
      .getInputContext()
    </p>
    <p>
      .getInputMethodListeners()
    </p>
    <p>
      .getKeyListeners()
    </p>
    <p>
      .getLocationOnScreen()
    </p>
    <p>
      .getMouseListeners()
    </p>
    <p>
      .getMouseMotionListeners()
    </p>
    <p>
      .getMousePosition() throws java.awt.HeadlessException
    </p>
    <p>
      .getMouseWheelListeners()
    </p>
    <p>
      .getToolkit()
    </p>
    <p>
      .getTreeLock()
    </p>
    <p>
      .gotFocus(java.awt.Event,java.lang.Object)
    </p>
    <p>
      .handleEvent(java.awt.Event)
    </p>
    <p>
      .hasFocus()
    </p>
    <p>
      .isBackgroundSet()
    </p>
    <p>
      .isCursorSet()
    </p>
    <p>
      .isDisplayable()
    </p>
    <p>
      .isFocusOwner()
    </p>
    <p>
      .isFocusTraversable()
    </p>
    <p>
      .isFontSet()
    </p>
    <p>
      .isForegroundSet()
    </p>
    <p>
      .isMaximumSizeSet()
    </p>
    <p>
      .isMinimumSizeSet()
    </p>
    <p>
      .isPreferredSizeSet()
    </p>
    <p>
      .isShowing()
    </p>
    <p>
      .keyDown(java.awt.Event,int)
    </p>
    <p>
      .keyUp(java.awt.Event,int)
    </p>
    <p>
      .lostFocus(java.awt.Event,java.lang.Object)
    </p>
    <p>
      .mouseDown(java.awt.Event,int,int)
    </p>
    <p>
      .mouseDrag(java.awt.Event,int,int)
    </p>
    <p>
      .mouseEnter(java.awt.Event,int,int)
    </p>
    <p>
      .mouseExit(java.awt.Event,int,int)
    </p>
    <p>
      .mouseMove(java.awt.Event,int,int)
    </p>
    <p>
      .mouseUp(java.awt.Event,int,int)
    </p>
    <p>
      .move(int,int)
    </p>
    <p>
      .nextFocus()
    </p>
    <p>
      .paintAll(java.awt.Graphics)
    </p>
    <p>
      .removeComponentListener(java.awt.event.ComponentListener)
    </p>
    <p>
      .removeFocusListener(java.awt.event.FocusListener)
    </p>
    <p>
      .removeHierarchyBoundsListener(java.awt.event.HierarchyBoundsListener)
    </p>
    <p>
      .removeHierarchyListener(java.awt.event.HierarchyListener)
    </p>
    <p>
      .removeInputMethodListener(java.awt.event.InputMethodListener)
    </p>
    <p>
      .removeKeyListener(java.awt.event.KeyListener)
    </p>
    <p>
      .removeMouseListener(java.awt.event.MouseListener)
    </p>
    <p>
      .removeMouseMotionListener(java.awt.event.MouseMotionListener)
    </p>
    <p>
      .removeMouseWheelListener(java.awt.event.MouseWheelListener)
    </p>
    <p>
      .repaint()
    </p>
    <p>
      .repaint(long)
    </p>
    <p>
      .repaint(int,int,int,int)
    </p>
    <p>
      .setBounds(java.awt.Rectangle)
    </p>
    <p>
      .setBounds(int,int,int,int)
    </p>
    <p>
      .setCursor(java.awt.Cursor)
    </p>
    <p>
      .setDropTarget(java.awt.dnd.DropTarget)
    </p>
    <p>
      .setFocusTraversalKeysEnabled(boolean)
    </p>
    <p>
      .setFocusable(boolean)
    </p>
    <p>
      .setIgnoreRepaint(boolean)
    </p>
    <p>
      .setLocation(int,int)
    </p>
    <p>
      .setLocation(java.awt.Point)
    </p>
    <p>
      .show(boolean)
    </p>
    <p>
      .show()
    </p>
    <p>
      .transferFocus()
    </p>
    <p>
      .transferFocusBackward()
    </p>
    <p>
      .transferFocusUpCycle()
    </p>
    <p>
      .getLocale()
    </p>
    <p>
      .setLocale(java.util.Locale)
    </p>
    <p>
      .inside(int,int)
    </p>
    <p>
      .removePropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      .removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
    </p>
    <p>
      .getPropertyChangeListeners(java.lang.String)
    </p>
    <p>
      .getPropertyChangeListeners()
    </p>
    <p>
      .isVisible()
    </p>
    <p>
      .isEnabled()
    </p>
    <p>
      .firePropertyChange(java.lang.String,float,float)
    </p>
    <p>
      .firePropertyChange(java.lang.String,double,double)
    </p>
    <p>
      .firePropertyChange(java.lang.String,short,short)
    </p>
    <p>
      .firePropertyChange(java.lang.String,byte,byte)
    </p>
    <p>
      .firePropertyChange(java.lang.String,long,long)
    </p>
    <p>
      .wait() throws java.lang.InterruptedException
    </p>
    <p>
      .wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      .wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      .equals(java.lang.Object)
    </p>
    <p>
      .hashCode()
    </p>
    <p>
      .getClass()
    </p>
    <p>
      .notify()
    </p>
    <p>
      .notifyAll()
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="Italics" STYLE_REF="pendingTask" ID="ID_604443210" CREATED="1618234265335" MODIFIED="1623451005860"/>
</node>
<node TEXT="MDH F3" STYLE_REF="milestone" ID="ID_680255571" CREATED="1658705027560" MODIFIED="1658705505193"/>
<node TEXT="MDH F4" STYLE_REF="milestone" ID="ID_442744146" CREATED="1658705033445" MODIFIED="1658705505208"/>
<node TEXT="MDH F5" STYLE_REF="milestone" ID="ID_1275738243" CREATED="1658705038637" MODIFIED="1658705505208"/>
</node>
<node TEXT="MDH.groovy" ID="ID_1322257497" CREATED="1616167740195" MODIFIED="1679339822949" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/MDH.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="25.294" OBJECT="org.freeplane.features.format.FormattedNumber|25294|#,##0"/>
<attribute NAME="projectCode" VALUE="MDH.groovy"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // MarkDownHelper
    </p>
    <p>
      // edo frohlich
    </p>
    <p>
      // 2021
    </p>
    <p>
      
    </p>
    <p>
      package edofro.MarkDownHelper
    </p>
    <p>
      //imports
    </p>
    <p>
      import org.freeplane.view.swing.features.progress.mindmapmode.ProgressUtilities
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      class MDH{
    </p>
    <p>
      
    </p>
    <p>
      //region: public properties
    </p>
    <p>
      // ver ejemplo en WSE.groovy
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      //region: private properties / definitions
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final Map markdown = [
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;format&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: 'markdownPatternFormat',
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;contentType : 'markdown'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final Map icon = [
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;leaf&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F343'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/leaf'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ignoreNode&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-26D4'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/doNotEnter'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ignoreContent&#xa0;&#xa0;&#xa0;: [ 'emoji-1F648'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/dontLook'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;newLine&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-21A9'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/newLine'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;number&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F522'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/numbered'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;bullet&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F537'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/buletted'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;centered&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-2194'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/centered'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;alignRight&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-27A1'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/right'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;completed&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-2714'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/completed'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;isTask&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F532'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/isTask'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;removeFirst&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'RemoveIcon_0_Action'&#xa0;&#xa0;,'RemoveIcon_0_Action'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;removeLast&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'RemoveIconAction'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'RemoveIconAction'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;removeAll&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'RemoveAllIconsAction' ,'RemoveAllIconsAction'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;help&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-2753'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/help'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;save&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F4BE'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/save'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;gotoMD&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F519'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/toDocAndBack'&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;toPlain&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F4DD'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/copyPlain'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rootFolder&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F4CD'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/pin'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;linked&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F517'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/linked'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;addMissingAttr&#xa0;&#xa0;: [ 'emoji-1FA79'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/patchAttributes' ],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;param&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F524'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/textBlockParam'&#xa0;&#xa0;],
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;wiki&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: [ 'emoji-1F4DA'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;,'MarkdownHelper/wiki'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;]&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;]&#xa0;
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String ind&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= '&#xa0;&#xa0;&#xa0;'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String MDNodeStyle&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= 'MarkdownHelperNode'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String MDNodeLinkStyle = 'MarkdownHelperLink'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String MDHPreviewStyle = 'MarkdownHelperPreview'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String MDRootAttr&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= 'MarkdownRootFolder'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String MDNodeAttr&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= 'fileLinksRelative'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String MDBranchAttr&#xa0;&#xa0;&#xa0;&#xa0;= 'MDHGithubBranch'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String MDPreAttr&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= 'MDHTargetRootPath'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final String[] TaskWordInStyle = ['tarea','task']
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final ArrayList MdhStyleNames&#xa0;&#xa0;&#xa0;= [MDNodeStyle,MDNodeLinkStyle,MDHPreviewStyle]
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static class MDParams{
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;TOClevels
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean TOCindent
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean topHeadersNumbered&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean headerNumbering&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean hideFolded
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;headersToUnderline
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean fileLinksRelative
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean isToc
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;topHeaderStartingNumber
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean lineOverHeader
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean ignoreHeaderDetails
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean ignoreHeaderNotes
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean ignoreLeafDetails
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Boolean ignoreHeaderImageObjects
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;public MDParams(nodoMD, nodoTOC, isToc){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.hideFolded&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['hideFolded'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.headerNumbering&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['headerNumbering'&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.topHeadersNumbered&#xa0;&#xa0;= nodoMD['topHeadersNumbered' ].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.fileLinksRelative&#xa0;&#xa0;&#xa0;= nodoMD['fileLinksRelative'&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.headersToUnderline&#xa0;&#xa0;= nodoMD['headersToUnderline' ].num0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.TOClevels&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= isToc?nodoTOC['TOClevels'&#xa0;&#xa0;&#xa0;].num0:9999
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.TOCindent&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= isToc?nodoTOC['TOCindent'&#xa0;&#xa0;&#xa0;].bool:false
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.isToc&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= isToc
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.topHeaderStartingNumber&#xa0;&#xa0;= nodoMD['topHeaderStartingNumber' ].num0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.lineOverHeader&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['lineOverHeader'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.ignoreHeaderDetails&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['ignoreHeaderDetails'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.ignoreHeaderNotes&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['ignoreHeaderNotes'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.ignoreLeafDetails&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['ignoreLeafDetails'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.ignoreHeaderImageObjects = nodoMD['ignoreHeaderImageObjects'].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;public MDParams(){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.hideFolded&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= false
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.headerNumbering&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['headerNumbering'&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.topHeadersNumbered&#xa0;&#xa0;= nodoMD['topHeadersNumbered' ].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.fileLinksRelative&#xa0;&#xa0;&#xa0;= nodoMD['fileLinksRelative'&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.headersToUnderline&#xa0;&#xa0;= nodoMD['headersToUnderline' ].num0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.TOClevels&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= isToc?nodoTOC['TOClevels'&#xa0;&#xa0;&#xa0;].num0:9999
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.TOCindent&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= isToc?nodoTOC['TOCindent'&#xa0;&#xa0;&#xa0;].bool:false
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.isToc&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= isToc
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.topHeaderStartingNumber&#xa0;&#xa0;= nodoMD['topHeaderStartingNumber' ].num0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.lineOverHeader&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['lineOverHeader'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.ignoreHeaderDetails&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['ignoreHeaderDetails'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.ignoreHeaderNotes&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= nodoMD['ignoreHeaderNotes'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;this.ignoreLeafDetails&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;= false
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// this.ignoreHeaderImageObjects = nodoMD['ignoreHeaderImageObjects'].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;static final ProgressUtilities progUtil&#xa0;&#xa0;= new ProgressUtilities()
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      //region: TOC
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static getNodoMarkdown(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return getNodoMarkdown(n,false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static getNodoMarkdown(n,reverse){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return getNodeByAttr(n,'headerNumbering',reverse)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static getNodeByAttr(n,a){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return getNodeByAttr(n,a,false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static getNodeByAttr(n,a,reverse){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodos = reverse?n.pathToRoot.reverse():n.pathToRoot
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return nodos.find{it.attributes.containsKey(a)}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static TOC(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return collectMD(nodo, true)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static document(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return collectMD(nodo, false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static collectMD(nodo,isToc){&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodoMarkdown = isToc?getNodoMarkdown(nodo, true):nodo
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!nodoMarkdown) return failMessage('No Markdown node found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def myPar = new MDParams(nodoMarkdown, nodo, isToc)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def reportText = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodos = nodoMarkdown.children.findAll{!ignoreNode(it,myPar)}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def i = myPar.topHeaderStartingNumber - 1
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;i = i&gt;=0?i:0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;nodos.each{n -&gt;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def resp = linea(n,1,'',i,myPar)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;i += resp[0]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; resp[1]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return reportText.toString()&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      //&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return nodos.toString() //&#xa0;&#xa0;&lt;------------ probando
    </p>
    <p>
      
    </p>
    <p>
      // ---- methods ----
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static linea(n,t,numParent,h,par){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if ( t &gt; par.TOClevels ) return [0,'']
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def reportText = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def objeto = n.externalObject
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if (!isLeaf(n,par)){ // es padre (tÃ­tulo)&#xa0;&#xa0;ignoreHeaderImageObjects
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def hNum = numParent
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def m = 0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!ignoreContent(n)){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;hNum = headerNumber(numParent,h,t,par)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;m = 1
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def header = (separated(hNum) + n.text).trim()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if (par.isToc){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; &quot;${par.TOCindent?(ind * t) + '* ':''}[${header}](#${header.replace(' ','-').replace('.','').replace(&quot;'&quot;,'')})\n\n&quot;&#xa0;&#xa0;//'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; (par.lineOverHeader?( t &lt;= par.headersToUnderline?('-----\n\n'):'' ):'')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; &quot;#&quot; * t&#xa0;&#xa0;+ ' ' + header + '\n\n'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; (!par.lineOverHeader?( t &lt;= par.headersToUnderline?('-----\n\n'):'' ):'')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; DetailsAndNotes(n, par.ignoreHeaderDetails,par.ignoreHeaderNotes)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; (!par.ignoreHeaderImageObjects?objeto?&quot;![${n.details}](${objeto.uri}) \n\n&quot;:'':'')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def k = 0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n.children.findAll{!ignoreNode(it,par)}.each{nd -&gt;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def resp = linea(nd,t + m, hNum, k,par)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;k += resp[0]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; resp[1]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return [1, reportText]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else { //es nodo final (leaf)&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!par.isToc &amp;&amp; !ignoreContent(n)){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def detailsAndNotes = DetailsAndNotes(n,par.ignoreLeafDetails,false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def usarTexto = (!detailsAndNotes &amp;&amp; !objeto)//?true:false
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; (usarTexto?(n.value.toString() + '\n\n'):'')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; detailsAndNotes
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; (objeto?&quot;![${n.details}](${objeto.uri}) \n\n&quot;:'')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return [0, reportText]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static headerNumber(p,j,u,par){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if (!par.headerNumbering) return ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;&#xa0;(u &gt;= (par.topHeadersNumbered?1:2))?(p + (j+1).toString() +'.') :''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static separated(w){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return (w?(w + ' '):'')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static DetailsAndNotes(m,ignoreDetails,ignoreNote) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def details = m.details
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def notes = m.note
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def addContent = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if (details &amp;&amp; !ignoreDetails) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;addContent &lt;&lt; details + '\n\n'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if (notes &amp;&amp; !ignoreNote) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;addContent &lt;&lt; notes + '\n\n'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while(addContent.contains('\n\n\n')){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;addContent = addContent.toString().replace('\n\n\n','\n\n')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return addContent.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static isLeaf(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return (
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n.isLeaf()&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// node is leaf ..
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;|| !n.icons.icons.disjoint(icon.leaf)&#xa0;&#xa0;&#xa0;// ... or it has the leaf icon
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;|| n.hasStyle(MDNodeStyle)&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// ... or it is a MDH node
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static isLeaf(n,par){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return (isLeaf(n)&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// isLeaf(n) or..
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;|| !n.children.any{!ignoreNode(it,par)})&#xa0;&#xa0;&#xa0;&#xa0;// .. &quot;it has no children that has not to be ignored&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// (in other words: &quot;it has no children that has to be considered&quot; or &quot;has only ignorable children&quot;)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static ignoreNode(n,par){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return (!n.icons.icons.disjoint(icon.ignoreNode)&#xa0;&#xa0;// has ignore icon
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;|| (par.hideFolded &amp;&amp; n.isFolded()))&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// or (parameter &quot;hide folded&quot; is true and it is folded)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static ignoreContent(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return (!n.icons.icons.disjoint(icon.ignoreContent)) // has ignoreContent icon
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      //region: MD Nodes
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;//region: MD LINK Nodes
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;// returns absolute link&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static webLink(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def n = nodo.children.find{it.link?true:false}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!n) return failMessage('No link found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def post = !nodo.icons.icons.disjoint(icon.newLine)?'\n\n':''
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;[$n.text]($n.link.uri)$post&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;// returns absolute Image link
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static webImageLink(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def n = nodo.children.find{it.link?true:false}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!n) return failMessage('No image found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def post = !nodo.icons.icons.disjoint(icon.newLine)?'\n\n':''
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;![$n.text]($n.link.uri)$post&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;// returns file link in absolute or relative format
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static fileLink(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fileLink(nodo, '','')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static fileLink(nodo, String pre){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fileLink(nodo, (String) pre, '')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static fileLink(nodo, boolean getBranchAndPre){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def branch = ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nB = getBranchAndPre?getNodeByAttr(nodo,MDBranchAttr):null
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(nB) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;branch = nB[MDBranchAttr].toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fileLink(nodo, (boolean) getBranchAndPre, (String) branch)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static fileLink(nodo, boolean getPre, boolean getBranch){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def branch = ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nB = getBranch?getNodeByAttr(nodo,MDBranchAttr):null
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(nB) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;branch = nB[MDBranchAttr].toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fileLink(nodo, (boolean) getPre, (String) branch)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static fileLink(nodo, String pre, boolean getBranch){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def branch = ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nB = getBranch?getNodeByAttr(nodo,MDBranchAttr):null
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(nB) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;branch = nB[MDBranchAttr].toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fileLink(nodo, (String) pre, (String) branch)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static fileLink(nodo, boolean getPre, String branch){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def pre = ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nB = getPre?getNodeByAttr(nodo,MDPreAttr):null
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(nB) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre = nB[MDPreAttr].toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fileLink(nodo, (String) pre, (String) branch)&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static fileLink(nodo,String pre, String branch){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def n = getNodeWithLinkToFile(nodo)?:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//getting link to file from node (or node's linked nodes)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;nodo.children.findResult{getNodeWithLinkToFile(it)}?:&#xa0;&#xa0;&#xa0;//getting it from any of its children
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;null
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!n) return failMessage('No file found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def post = !nodo.icons.icons.disjoint(icon.newLine)?'\n\n':''
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodoMarkdown = getNodoMarkdown(nodo)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!nodoMarkdown) return failMessage('No Markdown node found!!')&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//in MDI use formula in Attribute:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// =node.link.file.canonicalFile.toURI()
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def fileLinksRelative = nodoMarkdown[MDNodeAttr].bool
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;branch = branch==''?'':branch[-1]=='/'?branch:branch + '/'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;[$n.text](${fileLinksRelative?(pre + branch):''}${getFileLink(nodo, n, fileLinksRelative)})$post&quot;.toString()&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static getFileLink(nodo, n, fileLinksRelative){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def fImage = n.link.file?:null //TODO: QA Add Image Object
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def uri = fImage?fImage.canonicalFile.toURI().toString():n.externalObject.uri
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(uri){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(fileLinksRelative){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodoMdRoot = getNodeByAttr(nodo,MDRootAttr)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!nodoMdRoot || !nodoMdRoot[MDRootAttr]) return failMessage('No Markdown root folder defined!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;uri = getRelativeUri(nodoMdRoot[MDRootAttr].toString(),uri)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;$uri&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return failMessage('No file found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static getRelativeUri(baseUri, fileUri){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def uriRoot = baseUri[-1]=='/'?baseUri:(baseUri + '/')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return fileUri - uriRoot
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;// returns image link in absolute or relative format
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static imageLink(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def result =&#xa0;&#xa0;fileLink(nodo)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;!$result&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def static imageLink(nodo, pre){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def result =&#xa0;&#xa0;fileLink(nodo, pre)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;!$result&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def static imageLink(nodo, pre, branch){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def result =&#xa0;&#xa0;fileLink(nodo, pre, branch)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;!$result&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// def static imageLink(nodo, pre,Boolean branch){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// def result =&#xa0;&#xa0;fileLink(nodo, pre, branch)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// return &quot;!$result&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;// }
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// def static imageLink(nodo,Boolean pre, branch){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// def result =&#xa0;&#xa0;fileLink(nodo, pre, branch)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// return &quot;!$result&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;// }
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;//end:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;//region: MD LIST Nodes
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;//returns list
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static list(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodoMarkdown = getNodoMarkdown(nodo, true)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def myPar
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(nodoMarkdown) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;myPar = new MDParams(nodoMarkdown, nodo, false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;myPar = new MDParams()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def reportText = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def bullet = '-'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; listaNodo(nodo, 0, getBullet(nodo,bullet), myPar)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!reportText) return failMessage('No list items found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; &quot;\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return reportText.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static listaNodo(ndo,L, bullet, par){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def texto = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ndo.children.findAll{!ignoreNode(it,par)}.each{n -&gt;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def tab
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(ignoreContent(n)){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tab = 0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def linea = isTask(n)? &quot;${tarea(n, par)}&quot;: &quot;${bullet} ${oneLiner(n.note?:n.text&#xa0;&#xa0;+ (n.details &amp;&amp; !par.ignoreLeafDetails ? '&#xa0;&#xa0;\n' + n.details : '' ))}\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;texto &lt;&lt; &quot;${ind * L}${linea}&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tab = 1
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!isLeaf(n)){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;texto &lt;&lt; listaNodo(n, L + tab, getBullet(n,bullet), par)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return texto
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static getBullet(n,b){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def ic = n.icons.icons
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def newBullet = !ic.disjoint(icon.number)?'1.': !ic.disjoint(icon.bullet)?'-':null
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return newBullet?:b
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static plainTaskList(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodoMarkdown = getNodoMarkdown(nodo, true)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def myPar
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(nodoMarkdown) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;myPar = new MDParams(nodoMarkdown, nodo, false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;myPar = new MDParams()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def reportText = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def rootNodes = nodo.children.findAll{!it.icons.icons.disjoint(icon.ignoreContent)} + nodo //
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def allChildren = rootNodes*.children.flatten()&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodos = allChildren.findAll{isTask(it)} //TODO: QA agregar condicion icon.task&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;nodos.each{
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; tarea(it, myPar)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!reportText) return failMessage('No tasks found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; &quot;\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return reportText.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static tarea(n, par){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def pre
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def post
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if (hasTaskStyle(n)){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def st = n.style.name //TODO: QA agregar condicion icon.task
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;switch(st){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;case ['Tarea pendiente','pendingTask']:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre&#xa0;&#xa0;= '- [ ] '&#xa0;&#xa0;&#xa0;// '- [ ] &lt;FONT COLOR=#198cb3&gt;'&#xa0;&#xa0;// this formating won't show up in GitHub
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;post = ''&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// '&lt;/FONT&gt;'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;case ['Siguiente tarea','nextTask']:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre&#xa0;&#xa0;= '- [ ] **'&#xa0;&#xa0;&#xa0;// '- [ ] **&lt;FONT COLOR=#FF4500&gt;'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;post = '**'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// '&lt;/FONT&gt;**'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;case ['maybeTask']:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre&#xa0;&#xa0;= '- [ ] *'&#xa0;&#xa0;&#xa0;// '- [ ] *&lt;FONT COLOR=#477585&gt;'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;post = '*'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// '&lt;/FONT&gt;*'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;case ['Tarea finalizada','completedTask']:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre&#xa0;&#xa0;= '- [x] '
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;post = ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;case ['Tarea Descartada','discardedTask']:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre&#xa0;&#xa0;= '- [ ] *&lt;del&gt;'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// '- [ ] *&lt;FONT COLOR=#808080&gt;&lt;del&gt;'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;post = '&lt;/del&gt;*'&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// '&lt;/del&gt;&lt;/FONT&gt;*'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if (!n.icons.icons.disjoint(icon.completed)){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre ='- [x] '
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;post = ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre ='- [ ] ' //&lt;FONT COLOR=#198cb3&gt;'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;post = ''&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&lt;/FONT&gt;'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def wipText = isWorkInProgress(n)?&quot; (working on it: ~${taskProgress(n)})&quot;.toString():''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;// return &quot;$pre${oneLiner(n.text.trim())}${wipText}$post\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;$pre${oneLiner(n.note?:n.text&#xa0;&#xa0;+ (n.details &amp;&amp; !par.ignoreLeafDetails ? '&#xa0;&#xa0;\n' + n.details : '' ))}${wipText}$post\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static nestedTaskList(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodoMarkdown = getNodoMarkdown(nodo, true)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def myPar
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(nodoMarkdown) {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;myPar = new MDParams(nodoMarkdown, nodo, false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;myPar = new MDParams()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def reportText = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; listaTareas(nodo,0, myPar)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!reportText) return failMessage('No tasks found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; &quot;\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return reportText.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static listaTareas(nodo,L, par){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def reportText = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def rootNodes = nodo.children.findAll{!it.icons.icons.disjoint(icon.ignoreContent)} + nodo //
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def allChildren = rootNodes*.children.flatten()&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodos = allChildren.findAll{isTask(it)} //TODO: QA agregar condicion icon.task&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//return 'hola&#xa0;&#xa0;&#xa0;' + nodos.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;nodos.each{
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; &quot;${ind * L}${tarea(it, par)}&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText &lt;&lt; listaTareas(it, L + 1, par)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return reportText
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static isTask(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;hasTaskStyle(n) || !n.icons.icons.disjoint(icon.isTask)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static hasTaskStyle(n){
    </p>
    <p>
      //&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;&#xa0;n.style.name?.toLowerCase()?.contains(TaskWordInStyle.toLowerCase())
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;&#xa0;n.style.name? (TaskWordInStyle*.toLowerCase().any{n.style.name.toLowerCase().contains(it)}) : false
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static isWorkInProgress(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return progUtil.hasProgressIcons(n.delegate) &amp;&amp; !progUtil.hasOKIcon(n.delegate)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static taskProgress(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return isWorkInProgress(n)? n.icons.icons.find{it.endsWith('%')} : ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;//end:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;//region: other MD Nodes
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static codeBlock(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def reportText = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodo = n.children?.find{it.details[0]=='.'}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!nodo) return failMessage('No code found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def lang = nodo.details.drop(1)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;lang = lang.takeBefore(' ')?:lang
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;lang = lang.takeBefore('\n')?:lang
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;reportText
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; &quot;Code: **'${nodo.text}'**\n\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; &quot;```${lang}\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; nodo.note
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&lt;&lt; &quot;\n```\n\n&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return reportText.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static textBlock(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodo = n.children.find{it.note}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!nodo) return failMessage('No node with note found!!')
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nota = nodo.note
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;nodo.children.collect{it.note?:it.text}.eachWithIndex{r, i -&gt;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;nota = nota.replace(&quot;\$${i+1}&quot;.toString(),oneLiner(r.toString()))
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return (nota + '\n\n').toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static comment(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def textos = nodo.children.collect{it.note?:it.text}.join('\n\n')//.replace('\n\n\n\n','\n\n').replace('\n\n\n','\n\n') // &lt;--- esto puede ser que se necesite, no he cachado aÃºn
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return '&gt; ' + textos.replace('\n','\n&gt; ')//.replace('\n&gt; \n','\n\n')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static table(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def nodos = n.children
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!nodos || nodos.size()&lt; 2) return failMessage('Not enough rows found!!')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def t = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;t &lt;&lt; row(nodos[0])&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;t &lt;&lt; row(nodos[0], true)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;nodos[1..-1].each{
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;t &lt;&lt; row(it)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;t &lt;&lt; '\n'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return t.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static row(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return row(n, false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static row(n, isDashRow){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def texto = new StringBuilder()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def pre = ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def post = ''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;texto &lt;&lt; '|'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n.children.each{
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def txt
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if(!isDashRow){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;txt = oneLiner(it.note?:it.displayedText)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pre = !it.icons.icons.disjoint(icon.centered)?':':''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;post = (!it.icons.icons.disjoint(icon.alignRight) ||&#xa0;&#xa0;!it.icons.icons.disjoint(icon.centered))?':':''
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;txt = &quot;${pre}----${post}&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;texto &lt;&lt; &quot;${txt}|&quot;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;texto &lt;&lt; '\n'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return texto.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;//end:
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      //region: helpnode
    </p>
    <p>
      
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static linkedNodeText(nodo){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;def n = getNodeWithLinkToFile(nodo)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if (n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return n.text
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;} else {
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;&#xa0;'to be linked to node with file'
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static getNodeWithLinkToFile(n){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return (n.link &amp;&amp; n.link.uri.scheme=='file')?n: //TODO: QA Add Iamage Object
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n.externalObject.uri?n:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n.connectorsOut.target.findResult{getNodeWithLinkToFile(it)}?:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n.link?.node?getNodeWithLinkToFile(n.link.node):
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;null&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      //region: 2do orden
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static failMessage(msg){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return &quot;\n\n----\n\n--- $msg ---\n\n----\n\n&quot;.toString()
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def static oneLiner(t){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while (t.endsWith('\n')){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;t = t[0 .. -3]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while(t.contains('\n\n')){
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;t = t.replace('\n\n','\n')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return t.replace('\n','&lt;br&gt;')
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;}
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<node TEXT="MDH v0.1.4" STYLE_REF="milestone" ID="ID_850695574" CREATED="1658704975010" MODIFIED="1658705505177">
<node TEXT="mejorar lógica en nodos MDH List" STYLE_REF="completedTask" FOLDED="true" ID="ID_546316360" CREATED="1641503421311" MODIFIED="1659824732352">
<node TEXT="ver ejemplo en mapa readme MDI" ID="ID_1400903518" CREATED="1641503447600" MODIFIED="1641503475622" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_Map-Drive-Inator/README-MapDriveInator-MDH.mm#ID_130725341"/>
<node TEXT="mejorar en MDH" ID="ID_517741661" CREATED="1642606705138" MODIFIED="1642606705138">
<node TEXT="lógica en MDList" STYLE_REF="completedTask" ID="ID_130725341" CREATED="1642606705138" MODIFIED="1659824727643">
<node TEXT="Caso 1: listas y sublistas" ID="ID_1281649011" CREATED="1642606705138" MODIFIED="1642606705138">
<icon BUILTIN="button_ok"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      funciona OK
    </p>
  </body>
</html></richcontent>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" ID="ID_1316981988" CREATED="1642606705139" MODIFIED="1659824676974">
<icon BUILTIN="emoji-1F522"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node) //xss</text>
</richcontent>
<node TEXT="**import folder structure**" STYLE_REF="fullMarkDown" ID="ID_1805808672" CREATED="1642606705140" MODIFIED="1642606705140">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="you can import the folder structure of any folder in your drive" STYLE_REF="fullMarkDown" ID="ID_996429213" CREATED="1642606705140" MODIFIED="1642606705140"/>
</node>
<node TEXT="**import only new files and folders**" STYLE_REF="fullMarkDown" ID="ID_758208719" CREATED="1642606705140" MODIFIED="1642606705140">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="After the first import, Map-Drive-Inator imports only the new files and folders created in your drive without duplicating the allready existing one." STYLE_REF="fullMarkDown" ID="ID_409211500" CREATED="1642606705140" MODIFIED="1642606705140"/>
</node>
<node TEXT="**alerts about missing files**" STYLE_REF="fullMarkDown" ID="ID_222950387" CREATED="1642606705140" MODIFIED="1642606705140">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="It alerts if any node links to a deleted or moved file." STYLE_REF="fullMarkDown" ID="ID_83578922" CREATED="1642606705140" MODIFIED="1642606705140"/>
<node TEXT="For example, if another program deletes, moves or renames a file, then MDI will alert you that a link in a node points to a missing file." STYLE_REF="fullMarkDown" ID="ID_1986660163" CREATED="1642606705140" MODIFIED="1642606705140"/>
</node>
<node TEXT="**move file from one folder to another**" STYLE_REF="fullMarkDown" ID="ID_1640712461" CREATED="1642606705140" MODIFIED="1642606705140">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="if you move a &apos;file&apos; node in your mindmap from one &apos;folder&apos; node to another, the file gets moved in your drive also" STYLE_REF="fullMarkDown" ID="ID_1281773869" CREATED="1642606705140" MODIFIED="1642606705140"/>
</node>
<node TEXT="**create new folders**" STYLE_REF="fullMarkDown" ID="ID_479219108" CREATED="1642606705140" MODIFIED="1642606705140">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="you can create nodes as folders in your map and move file nodes in it. MDI then creates the folders and moves the files into them." STYLE_REF="fullMarkDown" ID="ID_1180543561" CREATED="1642606705140" MODIFIED="1642606705140"/>
</node>
<node TEXT="**rename files**" STYLE_REF="fullMarkDown" ID="ID_1933922688" CREATED="1642606705140" MODIFIED="1642606705140">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="if you modify the text of a file node, the file in the drive gets also renamed to this new text" STYLE_REF="fullMarkDown" ID="ID_544868358" CREATED="1642606705140" MODIFIED="1642606705140"/>
</node>
<node TEXT="**rename folders**" STYLE_REF="fullMarkDown" ID="ID_598641548" CREATED="1642606705140" MODIFIED="1642606705140">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="if you modify the text of a folder node, the folder in the drive gets also renamed to this new text" STYLE_REF="fullMarkDown" ID="ID_1804638879" CREATED="1642606705140" MODIFIED="1642606705140"/>
</node>
<node TEXT="**move *outside files* into the project**" STYLE_REF="fullMarkDown" ID="ID_1464194638" CREATED="1642606705141" MODIFIED="1642606705141">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="if you paste nodes with links to files that are outside of your base folder, MDI move them to their new position in your folder structure" STYLE_REF="fullMarkDown" ID="ID_785060439" CREATED="1642606705141" MODIFIED="1642606705141"/>
</node>
<node TEXT="use copy of a folder in multiple positions in the map, but has to remain in the same path position." STYLE_REF="fullMarkDown" ID="ID_456026938" CREATED="1642606705141" MODIFIED="1642606705141">
<icon BUILTIN="emoji-1F537"/>
</node>
</node>
</node>
<node TEXT="" ID="ID_1290955519" CREATED="1642606705141" MODIFIED="1642606705141">
<hook NAME="FirstGroupNode"/>
</node>
<node TEXT="Caso 2: si nodo posee nota -&gt; se ignora nodo.text y details y se usa sólo nota" ID="ID_1240543728" CREATED="1642606705141" MODIFIED="1642606705141">
<icon BUILTIN="button_ok"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      funciona OK
    </p>
  </body>
</html></richcontent>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" ID="ID_1408985523" CREATED="1642606705141" MODIFIED="1659824606121"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node) //ya</text>
</richcontent>
<node TEXT="**imp. folder struct**" STYLE_REF="fullMarkDown" ID="ID_877351220" CREATED="1642606705141" MODIFIED="1659822927728"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>**import folder structure**  
you can import the folder structure of any folder in your drive</text>
</richcontent>
</node>
<node TEXT="**imp. only new **" STYLE_REF="fullMarkDown" ID="ID_878429536" CREATED="1642606705141" MODIFIED="1659823640220">
<icon BUILTIN="emoji-1F532"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>**import only new files and folders**  
After the first import, Map-Drive-Inator imports only the new files and folders created in your drive without duplicating the allready existing one.</text>
</richcontent>
</node>
<node TEXT="**alerts missing files**" STYLE_REF="fullMarkDown" ID="ID_638251427" CREATED="1642606705141" MODIFIED="1659822270213"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>**alerts about missing files**  
It alerts if any node links to a deleted or moved file.  
For example, if another program deletes, moves or renames a file, then MDI will alert you that a link in a node points to a missing file.</text>
</richcontent>
</node>
<node TEXT="**move file**" STYLE_REF="fullMarkDown" ID="ID_1836487415" CREATED="1642606705142" MODIFIED="1659822270229"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>**move file from one folder to another**  
if you move a &apos;file&apos; node in your mindmap from one &apos;folder&apos; node to another, the file gets moved in your drive also</text>
</richcontent>
</node>
<node TEXT="**create new folders**" STYLE_REF="fullMarkDown" ID="ID_768489316" CREATED="1642606705142" MODIFIED="1659822270229"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>**create new folders**  
you can create nodes as folders in your map and move file nodes in it. MDI then creates the folders and moves the files into them.</text>
</richcontent>
<richcontent CONTENT-TYPE="plain/" TYPE="DETAILS">
    <text>oración en detalles que debe ser ignorada</text>
</richcontent>
<node TEXT="un subpunto sin nota ni detalles" ID="ID_1439722777" CREATED="1642606705142" MODIFIED="1642606705142"/>
<node TEXT="un subpunto sin nota con detalles" ID="ID_53469333" CREATED="1642606705142" MODIFIED="1659824636681"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      oración en detalles que NO debe ser ignorada
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="un subpunto con nota y con detalles" ID="ID_1366578258" CREATED="1642606705142" MODIFIED="1642606705142"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      este subpunto se toma de la nota
    </p>
    <p>
      como todo un párrafo
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      oración en detalles que debe ser ignorada
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="**rename files**" STYLE_REF="fullMarkDown" ID="ID_472427931" CREATED="1642606705142" MODIFIED="1659822270245"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>**rename files**  
if you modify the text of a file node, the file in the drive gets also renamed to this new text</text>
</richcontent>
</node>
<node TEXT="**rename folders**" STYLE_REF="fullMarkDown" ID="ID_258525056" CREATED="1642606705142" MODIFIED="1659822270260"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>**rename folders**  
if you modify the text of a folder node, the folder in the drive gets also renamed to this new text</text>
</richcontent>
</node>
<node TEXT="**move *outside files* into project**" STYLE_REF="fullMarkDown" ID="ID_1295988778" CREATED="1642606705142" MODIFIED="1659822270276"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>**move *outside files* into the project**  
if you paste nodes with links to files that are outside of your base folder, MDI move them to their new position in your folder structure</text>
</richcontent>
</node>
<node TEXT="use copy of a folder ..." STYLE_REF="fullMarkDown" ID="ID_16134887" CREATED="1642606705142" MODIFIED="1659822270276"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>use copy of a folder in multiple positions in the map, but has to remain in the same path position.</text>
</richcontent>
</node>
</node>
</node>
<node TEXT="CAso 3: si nodo no posee nota -&gt; detalles deben unirse a texto del nodo como saltos de línea( no salto de párrafo)" ID="ID_787585930" CREATED="1642606705142" MODIFIED="1659824652423">
<icon BUILTIN="button_ok"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      actualmente ignora los detalles
    </p>
  </body>
</html></richcontent>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" ID="ID_1526705529" CREATED="1642606705143" MODIFIED="1659824613457"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node) //ya</text>
</richcontent>
<node TEXT="**import folder structure**" STYLE_REF="fullMarkDown" ID="ID_439409932" CREATED="1642606705143" MODIFIED="1642606705143"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      you can import the folder structure of any folder in your drive
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="**import only new files and folders**" STYLE_REF="fullMarkDown" ID="ID_1502048374" CREATED="1642606705143" MODIFIED="1659823629915">
<icon BUILTIN="emoji-1F532"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      After the first import, Map-Drive-Inator imports only the new files and folders created in your drive without duplicating the allready existing one.
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="**alerts about missing files**" STYLE_REF="fullMarkDown" ID="ID_1560708408" CREATED="1642606705143" MODIFIED="1642606705143"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      It alerts if any node links to a deleted or moved file.
    </p>
    <p>
      For example, if another program deletes, moves or renames a file, then MDI will alert you that a link in a node points to a missing file.
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="**move file from one folder to another**" STYLE_REF="fullMarkDown" ID="ID_746810402" CREATED="1642606705143" MODIFIED="1642606705143"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      if you move a 'file' node in your mindmap from one 'folder' node to another, the file gets moved in your drive also
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="**create new folders**" STYLE_REF="fullMarkDown" ID="ID_1233632095" CREATED="1642606705143" MODIFIED="1642606705143"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      you can create nodes as folders in your map and move file nodes in it. MDI then creates the folders and moves the files into them.
    </p>
  </body>
</html></richcontent>
<node TEXT="un subpunto sin nota ni detalles" ID="ID_1931732129" CREATED="1642606705143" MODIFIED="1642606705143"/>
<node TEXT="un subpunto sin nota con detalles" ID="ID_563451130" CREATED="1642606705143" MODIFIED="1659824636697"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      oración en detalles que NO debe ser ignorada
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="un subpunto con nota y con detalles" ID="ID_315464930" CREATED="1642606705143" MODIFIED="1642606705143"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      este subpunto se toma de la nota
    </p>
    <p>
      como todo un párrafo
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      oración en detalles que debe ser ignorada
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="**rename files**" STYLE_REF="fullMarkDown" ID="ID_1475270470" CREATED="1642606705143" MODIFIED="1642606705143"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      if you modify the text of a file node, the file in the drive gets also renamed to this new text
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="**rename folders**" STYLE_REF="fullMarkDown" ID="ID_464540925" CREATED="1642606705143" MODIFIED="1642606705143"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      if you modify the text of a folder node, the folder in the drive gets also renamed to this new text
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="**move *outside files* into the project**" STYLE_REF="fullMarkDown" ID="ID_1017033603" CREATED="1642606705143" MODIFIED="1642606705143"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      if you paste nodes with links to files that are outside of your base folder, MDI move them to their new position in your folder structure
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="use copy of a folder in multiple positions in the map, but has to remain in the same path position." STYLE_REF="fullMarkDown" ID="ID_819663908" CREATED="1642606705144" MODIFIED="1642606705144"/>
</node>
</node>
<node TEXT="" ID="ID_1953663053" CREATED="1642606705144" MODIFIED="1642606705144">
<hook NAME="SummaryNode"/>
<hook NAME="AlwaysUnfoldedNode"/>
<node TEXT="Estos dos deberían verse iguales&#xa;(renderear lo mismo)" ID="ID_29377006" CREATED="1642606705144" MODIFIED="1642606705144"/>
</node>
</node>
</node>
<node TEXT="nodos marcados deben tener lógica distinta" STYLE_REF="completedTask" ID="ID_1821575134" CREATED="1659742183651" MODIFIED="1659824723050">
<node TEXT="ignorar" ID="ID_1856717232" CREATED="1659742202704" MODIFIED="1659742216906">
<icon BUILTIN="emoji-1F648"/>
</node>
<node TEXT="no entrar" ID="ID_1334224017" CREATED="1659742207375" MODIFIED="1659742213177">
<icon BUILTIN="emoji-26D4"/>
</node>
<node TEXT="leaf" ID="ID_1785500611" CREATED="1659742220033" MODIFIED="1659742225728">
<icon BUILTIN="emoji-1F343"/>
</node>
</node>
</node>
</node>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_1583361320" CREATED="1658705010307" MODIFIED="1658705505193">
<node TEXT="Funcionalidad MDH:&#xa;Comando para &apos;actualizar&apos; la nota a un nodo con link a un nodo MDH y copia su contenido" STYLE_REF="pendingTask" ID="ID_1466239605" CREATED="1636486893897" MODIFIED="1636487019787"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      desde otro mapa
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="MDH F2" STYLE_REF="milestone" ID="ID_1705598620" CREATED="1658705021227" MODIFIED="1658705505193">
<node TEXT="ver posibilidad de que nodo pueda ver nods que no estén en su descendencia de modo que no tenga que estar insertando nodos en árboles que cumplan cierta estructura" STYLE_REF="pendingTask" FOLDED="true" ID="ID_1414679047" CREATED="1650900292901" MODIFIED="1650900401249">
<node TEXT="usando?" ID="ID_1081483579" CREATED="1650900362923" MODIFIED="1650900377444">
<node TEXT="clones" ID="ID_9527715" CREATED="1650900377444" MODIFIED="1650900379600"/>
<node TEXT="nodos con links" ID="ID_824506611" CREATED="1650900382109" MODIFIED="1650900387095"/>
<node TEXT="conectores" ID="ID_801724186" CREATED="1650900388563" MODIFIED="1650900392750"/>
<node TEXT="...." ID="ID_1176969873" CREATED="1650900396509" MODIFIED="1650900397931"/>
</node>
</node>
</node>
<node TEXT="MDH F3" STYLE_REF="milestone" ID="ID_27344471" CREATED="1658705027560" MODIFIED="1658705505193">
<node TEXT="Hacer que nodos &apos;Markdown document&apos; definan su nivel de título basado en su posición respecto a otro nodo MD" STYLE_REF="pendingTask" FOLDED="true" ID="ID_1845412801" CREATED="1651203663795" MODIFIED="1651203728818">
<node TEXT="posible lógica" FOLDED="true" ID="ID_1310240702" CREATED="1651203730342" MODIFIED="1651203739165">
<node TEXT="saca path to root" ID="ID_1722069623" CREATED="1651203743665" MODIFIED="1651203761326"/>
<node TEXT="si no hay ningún nodo MD como antecesor --&gt; nivel =1" ID="ID_1864401180" CREATED="1651203762889" MODIFIED="1651203800471"/>
<node TEXT="si hay" FOLDED="true" ID="ID_1352938263" CREATED="1651203804642" MODIFIED="1651203813045">
<node TEXT="ubica el más próximo" ID="ID_1231816613" CREATED="1651203813060" MODIFIED="1651203825382"/>
<node TEXT="mira que valor de nivel tiene definido ese nodo" ID="ID_1732741716" CREATED="1651203826835" MODIFIED="1651203853841"/>
<node TEXT="cuenta los nodos que hay entre ese nodo y él (sin contar los que tienen monito con ojos tapados)" ID="ID_915968233" CREATED="1651203858883" MODIFIED="1651203906505"/>
<node TEXT="suma ambos valores" ID="ID_1513862182" CREATED="1651203921590" MODIFIED="1651203931872"/>
</node>
</node>
</node>
<node TEXT="sacar proceso de numeración de titulos de &apos;Markdown document&apos; Node" STYLE_REF="pendingTask" FOLDED="true" ID="ID_1765976470" CREATED="1651202925415" MODIFIED="1651203524924">
<node TEXT=" script que agrega numeración a texto Markdown" FOLDED="true" ID="ID_1660721839" CREATED="1651199734750" MODIFIED="1651203462522">
<attribute NAME="script1" VALUE="t =[]&#xd;&#xa;10.times{t &lt;&lt; 0}&#xd;&#xa;&#xd;&#xa;def texto = node.children[0].note&#xd;&#xa;def nuevoTexto = new StringBuilder()&#xd;&#xa;&#xd;&#xa;texto.eachLine{l -&gt;&#xd;&#xa;    def matcher = (l =~ /(#+) /)&#xd;&#xa;    def match&#xd;&#xa;    if(matcher.size()&gt;0){&#xd;&#xa;        match = matcher[0][1]&#xd;&#xa;    }&#xd;&#xa;    if( match){&#xd;&#xa;        avanza( match.size() - 1 )&#xd;&#xa;        def num = t.takeWhile{it &gt; 0}.join(&apos;.&apos;)&#xd;&#xa;        l = l.replace(match, match + &apos; &apos; + num)&#xd;&#xa;        println l &#xd;&#xa;    }&#xd;&#xa;    nuevoTexto &lt;&lt; l &lt;&lt; &apos;\n&apos;&#xd;&#xa;}&#xd;&#xa;&#xd;&#xa;node.note = nuevoTexto.toString()&#xd;&#xa;null&#xd;&#xa;&#xd;&#xa;def avanza(l){&#xd;&#xa;    t[l]++&#xd;&#xa;    (l+1..t.size()-1).each{ t[it] = 0 }    &#xd;&#xa;}"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Implementación de la Estrategia
    </p>
    <p>
      
    </p>
    <p>
      # 1 Análisis Competitivo
    </p>
    <p>
      
    </p>
    <p>
      ## 1.1 Establecer Declaración Estratégica
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Descripción Empresa
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Situación actual
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Mercados
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Productos/servicios
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Etc.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Misión
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Visión
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Valores
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Declaración Estratégica&quot;
    </p>
    <p>
      
    </p>
    <p>
      ## 1.2 Realizar Análisis Estratégico
    </p>
    <p>
      Recopilar y evaluar información relevante para establecer plan estratégico
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* 5 fuerzas de Porter
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Poder de Proveedores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Poder de Compradores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Amenaza de Sustitutos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Nuevos Competidores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Rivalidad entre Empresas
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* FODA
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Fortalezas
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Oportunidades
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Debilidades
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Amenazas
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Análisis Estratégico&quot;
    </p>
    <p>
      
    </p>
    <p>
      # 2 Elección de la estrategia competitiva:
    </p>
    <p>
      Definir ámbitos en los que se desea mejorar
    </p>
    <p>
      
    </p>
    <p>
      ## 2.1 Obtener Factores Críticos de Éxito (FCE)
    </p>
    <p>
      
    </p>
    <p>
      ### 2.1.1 Revisar Formulación Estratégica
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Declaración Propuesta de Valor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Propuesta Valor vs. Valores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Propuesta Valor vs. FODA
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Análisis Propuesta de Valor&quot;
    </p>
    <p>
      
    </p>
    <p>
      ### 2.1.2 Diagramar Modelo de Negocios
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Canvas
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Análisis de cada elemento
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Modelo Negocio vs Propuesta de Valor
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Canvas&quot;
    </p>
    <p>
      
    </p>
    <p>
      ### 2.1.3 Establecer Factores Críticos de Éxito
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Definir Procesos Críticos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Establecer Factores Críticos de Éxito (FCE)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* FCE vs. Valores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* FCE vs. FODA
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Factores Críticos de Éxito&quot;
    </p>
    <p>
      
    </p>
    <p>
      ## 2.2 Definir Temas Estratégicos
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Definir Temas Estratégicos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* alineados a visión / misión /valores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* relevantes según Análisis Estratégico y FCE
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Temas Estratégicos&quot;
    </p>
    <p>
      
    </p>
    <p>
      # 3 Mapa Estratégico
    </p>
    <p>
      
    </p>
    <p>
      ## 3.1 Crear un Mapa Estratégico
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Crear Mapa estratégico
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Desde Temas Estratégicos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Objetivos estratégicos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Lógica de causa / efecto robusta
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Mapa Estratégico&quot;
    </p>
    <p>
      
    </p>
    <p>
      ## 3.2 Generar Cuadro de Mando de Objetivos
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Cuadro de Mando Integral (CMI)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Tablero
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Contiene todos los objetivos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Calidad Objetivos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Métrica corresponde a Objetivo y lógica de Mapa
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Perspectivas cuentan con suficientes Objetivos
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Mapa Estratégico&quot; + CMI
    </p>
    <p>
      
    </p>
    <p>
      # 4 Definir iniciativas relacionadas a objetivos
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Para cada objetivo establecer Iniciativas Críticas asociadas
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Cuadro de Mando: Iniciativas
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Mapa Estratégico&quot; + CMI + Iniciativas
    </p>
    <p>
      
    </p>
    <p>
      # 5 Revisar Esquema de Incentivos
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Selección indicadores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Corporativo, Gerencia, Equipo, Individuales
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Flexible
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Desempeño esperado
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Requisitos de pago, monto, tramos
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Análisis de Esquema de Incentivos vs Mapa Estratégico&quot;
    </p>
  </body>
</html></richcontent>
<node TEXT="texto" ID="ID_1129378629" CREATED="1651199743829" MODIFIED="1651202676124"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Implementación de la Estrategia
    </p>
    <p>
      
    </p>
    <p>
      # Análisis Competitivo
    </p>
    <p>
      
    </p>
    <p>
      ## Establecer Declaración Estratégica
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Descripción Empresa
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Situación actual
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Mercados
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Productos/servicios
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Etc.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Misión
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Visión
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Valores
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Declaración Estratégica&quot;
    </p>
    <p>
      
    </p>
    <p>
      ## Realizar Análisis Estratégico
    </p>
    <p>
      Recopilar y evaluar información relevante para establecer plan estratégico
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* 5 fuerzas de Porter
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Poder de Proveedores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Poder de Compradores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Amenaza de Sustitutos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Nuevos Competidores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Rivalidad entre Empresas
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* FODA
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Fortalezas
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Oportunidades
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Debilidades
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Amenazas
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Análisis Estratégico&quot;
    </p>
    <p>
      
    </p>
    <p>
      # Elección de la estrategia competitiva:
    </p>
    <p>
      Definir ámbitos en los que se desea mejorar
    </p>
    <p>
      
    </p>
    <p>
      ## Obtener Factores Críticos de Éxito (FCE)
    </p>
    <p>
      
    </p>
    <p>
      ### Revisar Formulación Estratégica
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Declaración Propuesta de Valor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Propuesta Valor vs. Valores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Propuesta Valor vs. FODA
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Análisis Propuesta de Valor&quot;
    </p>
    <p>
      
    </p>
    <p>
      ### Diagramar Modelo de Negocios
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Canvas
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Análisis de cada elemento
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Modelo Negocio vs Propuesta de Valor
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Canvas&quot;
    </p>
    <p>
      
    </p>
    <p>
      ### Establecer Factores Críticos de Éxito
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Definir Procesos Críticos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Establecer Factores Críticos de Éxito (FCE)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* FCE vs. Valores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* FCE vs. FODA
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Factores Críticos de Éxito&quot;
    </p>
    <p>
      
    </p>
    <p>
      ## Definir Temas Estratégicos
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Definir Temas Estratégicos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* alineados a visión / misión /valores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* relevantes según Análisis Estratégico y FCE
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Temas Estratégicos&quot;
    </p>
    <p>
      
    </p>
    <p>
      # Mapa Estratégico
    </p>
    <p>
      
    </p>
    <p>
      ## Crear un Mapa Estratégico
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Crear Mapa estratégico
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Desde Temas Estratégicos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Objetivos estratégicos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Lógica de causa / efecto robusta
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Mapa Estratégico&quot;
    </p>
    <p>
      
    </p>
    <p>
      ## Generar Cuadro de Mando de Objetivos
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Cuadro de Mando Integral (CMI)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Tablero
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Contiene todos los objetivos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Calidad Objetivos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Métrica corresponde a Objetivo y lógica de Mapa
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* Perspectivas cuentan con suficientes Objetivos
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Mapa Estratégico&quot; + CMI
    </p>
    <p>
      
    </p>
    <p>
      # Definir iniciativas relacionadas a objetivos
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Para cada objetivo establecer Iniciativas Críticas asociadas
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Cuadro de Mando: Iniciativas
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Mapa Estratégico&quot; + CMI + Iniciativas
    </p>
    <p>
      
    </p>
    <p>
      # Revisar Esquema de Incentivos
    </p>
    <p>
      
    </p>
    <p>
      * **Temas a abordar:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Selección indicadores
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Corporativo, Gerencia, Equipo, Individuales
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Flexible
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Desempeño esperado
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* Requisitos de pago, monto, tramos
    </p>
    <p>
      * **Entregable:**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* documento &quot;Análisis de Esquema de Incentivos vs Mapa Estratégico&quot;
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node TEXT="MDH F4" STYLE_REF="milestone" ID="ID_1000287803" CREATED="1658705033445" MODIFIED="1658705505208">
<node TEXT="crear opción &quot;marcar para incluir&quot;" STYLE_REF="maybeTask" FOLDED="true" ID="ID_1314571807" CREATED="1650900025773" MODIFIED="1658112777351">
<node TEXT="actualmente nodo &apos;Markdown Document.md&apos; incluye todo lo que está en su descendencia, a menos que este marcado para ignorar o no ingresar" ID="ID_683602905" CREATED="1650900113079" MODIFIED="1650900276689"/>
<node TEXT="nueva opción que sólo vea los nodos mercados para ser vistos y los nodos leaf" ID="ID_154485468" CREATED="1650900160166" MODIFIED="1650900202335"/>
</node>
<node TEXT="un atributo para pausar update del documento" STYLE_REF="pendingTask" ID="ID_1591098920" CREATED="1618580575708" MODIFIED="1623451000900">
<node TEXT="que update funcione sólo si el nodo está seleccionado" ID="ID_1428268710" CREATED="1618580619910" MODIFIED="1618580642309"/>
<node TEXT="¿como úmico seleccionad?" ID="ID_1459777419" CREATED="1618580643188" MODIFIED="1659801099108"/>
</node>
</node>
<node TEXT="MDH F5" STYLE_REF="milestone" ID="ID_588822293" CREATED="1658705038637" MODIFIED="1658705505208"/>
<node TEXT="add details MDH node" STYLE_REF="nextTask" FOLDED="true" ID="ID_76658437" CREATED="1678220165333" MODIFIED="1679339822933"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MDH
    </p>
    <p>
      
    </p>
    <p>
      def texto =&quot;&quot;
    </p>
    <p>
      node.children.each{ n-&gt;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def resumen = n.text
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def nodoContenido = n.children[0]
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def detailsAndNotes = MDH.DetailsAndNotes(nodoContenido,false,false)
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;def contenido = detailsAndNotes?:nodoContenido.text
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;//texto += &quot;&lt;details&gt;&lt;summary&gt;\n\n${resumen}\n\n&lt;/summary&gt;\n\n----\n${contenido}----\n&lt;/details&gt;\n&quot;&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;&#xa0;texto += &quot;&lt;details&gt;&lt;summary&gt;\n\n### ${resumen}\n\n&lt;/summary&gt;\n\n${contenido}&lt;/details&gt;\n&quot;&#xa0;
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      println texto
    </p>
  </body>
</html>
</richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="ejemplo 1" ID="ID_825454641" CREATED="1678220556926" MODIFIED="1679095570781">
<node TEXT="Markdown document.md" STYLE_REF="MarkdownHelperNode" ID="ID_1392727127" CREATED="1678220207566" MODIFIED="1679095408008">
<attribute NAME="headersToUnderline" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="false"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<attribute NAME="topHeaderStartingNumber" VALUE="1" OBJECT="org.freeplane.features.format.FormattedNumber|1"/>
<attribute NAME="fileLinksRelative" VALUE="false"/>
<attribute NAME="lineOverHeader" VALUE="true"/>
<attribute NAME="ignoreHeaderDetails" VALUE="true"/>
<attribute NAME="ignoreHeaderNotes" VALUE="true"/>
<attribute NAME="ignoreLeafDetails" VALUE="false"/>
<attribute NAME="ignoreHeaderImageObjects" VALUE="false"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.document(node)</text>
</richcontent>
<node TEXT="mi titulo" ID="ID_1939312162" CREATED="1678220215778" MODIFIED="1678220220857">
<node TEXT="Este va a _ser_ el **primer** párrafo" ID="ID_1591099186" CREATED="1678220222039" MODIFIED="1678220252030"/>
</node>
</node>
</node>
<node TEXT="ejemplo 2" ID="ID_43431412" CREATED="1678220570839" MODIFIED="1679095575000">
<node TEXT="mi titulo" POSITION="bottom_or_right" ID="ID_285747915" CREATED="1678220215778" MODIFIED="1678220220857">
<node TEXT="Este va a _ser_ el **primer** párrafo" ID="ID_824448063" CREATED="1678220222039" MODIFIED="1678221749823"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      este es el detalle
    </p>
  </body>
</html></richcontent>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      esta es su nota
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="ejemplo 3" ID="ID_1473262797" CREATED="1679095674322" MODIFIED="1679095677344">
<node TEXT="list" STYLE_REF="MarkdownHelperNode" ID="ID_33873576" CREATED="1679095697864" MODIFIED="1679095697864"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html>
</richcontent>
<node TEXT="peras" POSITION="bottom_or_right" ID="ID_1030546777" CREATED="1679095702599" MODIFIED="1679095705873"/>
<node TEXT="manzanas" POSITION="bottom_or_right" ID="ID_1853487549" CREATED="1679095706946" MODIFIED="1679095709137"/>
<node TEXT="melones" POSITION="bottom_or_right" ID="ID_469747712" CREATED="1679095709569" MODIFIED="1679095711329"/>
<node TEXT="guindas" POSITION="bottom_or_right" ID="ID_500149937" CREATED="1679095712009" MODIFIED="1679095714114"/>
</node>
</node>
<node TEXT="ejemplo 4" ID="ID_788109136" CREATED="1679095678432" MODIFIED="1679095682242">
<node TEXT="Markdown document.md" STYLE_REF="MarkdownHelperNode" ID="ID_1939664465" CREATED="1678220207566" MODIFIED="1679095445335">
<attribute NAME="headersToUnderline" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="false"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<attribute NAME="topHeaderStartingNumber" VALUE="1" OBJECT="org.freeplane.features.format.FormattedNumber|1"/>
<attribute NAME="fileLinksRelative" VALUE="false"/>
<attribute NAME="lineOverHeader" VALUE="true"/>
<attribute NAME="ignoreHeaderDetails" VALUE="true"/>
<attribute NAME="ignoreHeaderNotes" VALUE="true"/>
<attribute NAME="ignoreLeafDetails" VALUE="false"/>
<attribute NAME="ignoreHeaderImageObjects" VALUE="false"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.document(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" POSITION="bottom_or_right" ID="ID_121363622" CREATED="1679095694357" MODIFIED="1679095694357"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html>
</richcontent>
<node TEXT="frutas" ID="ID_318640172" CREATED="1679095723480" MODIFIED="1679095726651">
<node TEXT="peras" POSITION="bottom_or_right" ID="ID_1906646080" CREATED="1679095702599" MODIFIED="1679095705873"/>
<node TEXT="manzanas" POSITION="bottom_or_right" ID="ID_405716312" CREATED="1679095706946" MODIFIED="1679095709137"/>
<node TEXT="melones" POSITION="bottom_or_right" ID="ID_1342841849" CREATED="1679095709569" MODIFIED="1679095711329"/>
<node TEXT="guindas" POSITION="bottom_or_right" ID="ID_865514042" CREATED="1679095712009" MODIFIED="1679095714114"/>
</node>
<node TEXT="verduras" ID="ID_1834353733" CREATED="1679095731853" MODIFIED="1679095738976">
<node TEXT="lechuga" ID="ID_215377030" CREATED="1679095744099" MODIFIED="1679095762071"/>
<node TEXT="tomates" ID="ID_1520893648" CREATED="1679095762637" MODIFIED="1679095764188"/>
<node TEXT="zapallos" ID="ID_1690714003" CREATED="1679095764789" MODIFIED="1679095767433"/>
<node TEXT="esparragos" ID="ID_412688477" CREATED="1679095768051" MODIFIED="1679095770442"/>
<node TEXT="papas" ID="ID_745113619" CREATED="1679095770906" MODIFIED="1679095772110"/>
</node>
</node>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" POSITION="bottom_or_right" ID="ID_1672266622" CREATED="1679095697864" MODIFIED="1679095697864"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="peras" POSITION="bottom_or_right" ID="ID_215700957" CREATED="1679095702599" MODIFIED="1679095705873"/>
<node TEXT="manzanas" POSITION="bottom_or_right" ID="ID_1051736631" CREATED="1679095706946" MODIFIED="1679095709137"/>
<node TEXT="melones" POSITION="bottom_or_right" ID="ID_1615387075" CREATED="1679095709569" MODIFIED="1679095711329"/>
<node TEXT="guindas" POSITION="bottom_or_right" ID="ID_1654063004" CREATED="1679095712009" MODIFIED="1679095714114"/>
</node>
</node>
</node>
<node TEXT="ejemplo 5" ID="ID_1988758655" CREATED="1679095678432" MODIFIED="1679339034846">
<node TEXT="list" STYLE_REF="MarkdownHelperNode" POSITION="bottom_or_right" ID="ID_61860648" CREATED="1679095694357" MODIFIED="1679095694357"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="frutas" ID="ID_1226079418" CREATED="1679095723480" MODIFIED="1679095726651">
<node TEXT="peras" POSITION="bottom_or_right" ID="ID_826260334" CREATED="1679095702599" MODIFIED="1679095705873"/>
<node TEXT="manzanas" POSITION="bottom_or_right" ID="ID_474202165" CREATED="1679095706946" MODIFIED="1679095709137"/>
<node TEXT="melones" POSITION="bottom_or_right" ID="ID_1968202204" CREATED="1679095709569" MODIFIED="1679095711329"/>
<node TEXT="guindas" POSITION="bottom_or_right" ID="ID_1975500144" CREATED="1679095712009" MODIFIED="1679095714114"/>
</node>
<node TEXT="verduras" ID="ID_1495434783" CREATED="1679095731853" MODIFIED="1679095738976">
<node TEXT="lechuga" ID="ID_552529643" CREATED="1679095744099" MODIFIED="1679095762071"/>
<node TEXT="tomates" ID="ID_1118788441" CREATED="1679095762637" MODIFIED="1679095764188"/>
<node TEXT="zapallos" ID="ID_15126432" CREATED="1679095764789" MODIFIED="1679095767433"/>
<node TEXT="esparragos" ID="ID_16551218" CREATED="1679095768051" MODIFIED="1679095770442"/>
<node TEXT="papas" ID="ID_1075655201" CREATED="1679095770906" MODIFIED="1679095772110"/>
</node>
</node>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" POSITION="bottom_or_right" ID="ID_508179184" CREATED="1679095697864" MODIFIED="1679095697864"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="peras" POSITION="bottom_or_right" ID="ID_1445154711" CREATED="1679095702599" MODIFIED="1679095705873"/>
<node TEXT="manzanas" POSITION="bottom_or_right" ID="ID_1021565046" CREATED="1679095706946" MODIFIED="1679095709137"/>
<node TEXT="melones" POSITION="bottom_or_right" ID="ID_902957808" CREATED="1679095709569" MODIFIED="1679095711329"/>
<node TEXT="guindas" POSITION="bottom_or_right" ID="ID_482648458" CREATED="1679095712009" MODIFIED="1679095714114"/>
</node>
</node>
<node TEXT="ejemplo 4" ID="ID_347103699" CREATED="1679095678432" MODIFIED="1679095682242">
<node TEXT="Markdown document.md" STYLE_REF="MarkdownHelperNode" ID="ID_97039579" CREATED="1678220207566" MODIFIED="1679339233743"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.document(node)</text>
</richcontent>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" POSITION="bottom_or_right" ID="ID_235350553" CREATED="1679095694357" MODIFIED="1679095694357"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="frutas" ID="ID_332285619" CREATED="1679095723480" MODIFIED="1679095726651">
<node TEXT="peras" POSITION="bottom_or_right" ID="ID_209110728" CREATED="1679095702599" MODIFIED="1679095705873"/>
<node TEXT="manzanas" POSITION="bottom_or_right" ID="ID_889970278" CREATED="1679095706946" MODIFIED="1679095709137"/>
<node TEXT="melones" POSITION="bottom_or_right" ID="ID_917977527" CREATED="1679095709569" MODIFIED="1679095711329"/>
<node TEXT="guindas" POSITION="bottom_or_right" ID="ID_997375685" CREATED="1679095712009" MODIFIED="1679095714114"/>
</node>
<node TEXT="verduras" ID="ID_1609645403" CREATED="1679095731853" MODIFIED="1679095738976">
<node TEXT="lechuga" ID="ID_1679545660" CREATED="1679095744099" MODIFIED="1679095762071"/>
<node TEXT="tomates" ID="ID_1847937518" CREATED="1679095762637" MODIFIED="1679095764188"/>
<node TEXT="zapallos" ID="ID_1024404869" CREATED="1679095764789" MODIFIED="1679095767433"/>
<node TEXT="esparragos" ID="ID_622431545" CREATED="1679095768051" MODIFIED="1679095770442"/>
<node TEXT="papas" ID="ID_1555454732" CREATED="1679095770906" MODIFIED="1679095772110"/>
</node>
</node>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" POSITION="bottom_or_right" ID="ID_584003026" CREATED="1679095697864" MODIFIED="1679095697864"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="peras" POSITION="bottom_or_right" ID="ID_48718106" CREATED="1679095702599" MODIFIED="1679095705873"/>
<node TEXT="manzanas" POSITION="bottom_or_right" ID="ID_1200172202" CREATED="1679095706946" MODIFIED="1679095709137"/>
<node TEXT="melones" POSITION="bottom_or_right" ID="ID_107467249" CREATED="1679095709569" MODIFIED="1679095711329"/>
<node TEXT="guindas" POSITION="bottom_or_right" ID="ID_334002856" CREATED="1679095712009" MODIFIED="1679095714114"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="MDI_redux.groovy" ID="ID_468646551" CREATED="1616167740197" MODIFIED="1678219438110" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/MDI_redux.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.246" OBJECT="org.freeplane.features.format.FormattedNumber|3246|#,##0"/>
<attribute NAME="projectCode" VALUE="MDI.redux.groovy"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package edofro.MarkDownHelper
    </p>
    <p>
      
    </p>
    <p>
      class MDI_redux{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;private static final String styleFolder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'file_folder'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;private static final String styleBaseFolder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'baseFolder'
    </p>
    <p>
      
    </p>
    <p>
      // --------------------------------- obtainPathFromMap -----------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//function, returns string, builds the new path string by looking at the position of the node in the mindmap
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//it uses all the file-folder styled nodes till the base node
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static obtainPathFromMap(n) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def texto =''
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseFolderNode = obtainBaseFolder(n)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(baseFolderNode){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(!n.equals(baseFolderNode)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(nodeIsFolder(n)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto = correctFolderName(n) &lt;&lt; File.separator &lt;&lt; texto&nbsp;&nbsp;//TODO: Linux
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n = n.parent
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto = getPathFromLink(baseFolderNode) &lt;&lt; texto
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return texto.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// function, returns Node (&quot;Base folder&quot;) under the selected node
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static obtainBaseFolder(n) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// returns the first node which has a link to a file directory and has style styleFolder + styleBaseFolder
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//return n.pathToRoot.find{it.link?.file?.directory &amp;&amp; it.hasStyle(styleFolder) &amp;&amp; it.hasStyle(styleBaseFolder)}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nBase = n.pathToRoot.find{it.link?.file?.directory &amp;&amp; it.hasStyle(styleFolder) &amp;&amp; it.hasStyle(styleBaseFolder)}?:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n.link?.file?.directory &amp;&amp; n.hasStyle(styleFolder))?n:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.pathToRoot.find{it.link?.file?.directory &amp;&amp; it.hasStyle(styleFolder)}?:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.pathToRoot.find{it.link?.file?.directory}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return nBase
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static nodeIsFolder(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return n.hasStyle(styleFolder)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//function, returns string, looks at text in node and correct it if it can't be used as a foldername (privado)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static correctFolderName(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String texto = n.text.trim().replace('/','-').replace(File.separator,'-')//.replace('.','-') //replaces chars not usefull in a Folder name&nbsp;&nbsp;&nbsp;&nbsp;//TODO: Linux
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n.text != texto) n.text = texto//corrects text in node too
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return texto // returns the corrected text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getPathFromLink(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//return n.link.uri.path.drop(1) as String&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def lastChar = (n.link.file?.directory || nodeIsFolder(n))?File.separator:'' //TODO: Linux
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (n.link.file?n.link.file.path + lastChar:null)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      // -------------------------------&nbsp;&nbsp;createPath ------------------------------
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// create all folders of a path (if they doesn't exist)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static createPath(String p) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//ui.informationMessage('createPath ' + p)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def folders = p.replace(File.separator,'/').split('/')&nbsp;&nbsp;&nbsp;&nbsp;//TODO: Linux
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//ui.informationMessage(folders.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def path =''
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;folders.each{ String f -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path = path &lt;&lt; f&nbsp;&nbsp;&lt;&lt; '/'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;createFolder(path.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// create new folder if it doesn't exist (privado)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static createFolder(String folderName) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def folder = new File(folderName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!folder.isDirectory()){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;folder.mkdir()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="WikiTools.groovy" FOLDED="true" ID="ID_463891518" CREATED="1617488386802" MODIFIED="1678219438151" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/WikiTools.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="7.249" OBJECT="org.freeplane.features.format.FormattedNumber|7249|#,##0"/>
<attribute NAME="projectCode" VALUE="WikiTools.groovy"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // MarkDownHelper
    </p>
    <p>
      // edo frohlich
    </p>
    <p>
      // 2021
    </p>
    <p>
      
    </p>
    <p>
      package edofro.MarkDownHelper
    </p>
    <p>
      //imports
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      class WikiTools{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final noBaseNodeMsg = &quot;no **baseFolder node** found between the selected node and the map's root.\n\n A **baseFolder node** is a node with a **link to the folder** where the Markdown files have been (or are going to be) saved in the local drive.&quot;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static currentLocation(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseNode = edofro.MarkDownHelper.MDI_redux.obtainBaseFolder(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!baseNode) return noBaseNodeMsg
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseUri = baseNode.link.uri.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def isMDDoc = {it.link &amp;&amp; it.link.file &amp;&amp; it.link?.uri?.toString()?.toLowerCase()?.endsWith('.md') &amp;&amp; !it.text.startsWith('_') }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def docNodes = nodo.pathToRoot.findAll(isMDDoc)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def texto = new StringBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docNodes.dropRight(1).each{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; &quot; / ${ wikiLink(it,baseUri,'','')}&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def pre
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!texto){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; ' '
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre = nodo.children?nodo.children[0].text.trim()?:null:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def post = nodo.children.size()&gt;1?nodo.children[1].text.trim()?:null:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; &quot; / ${docNodes[-1].text.takeBefore('.md').replace('-',' ')}&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; (post?&quot;\n\n${post}&quot;:'')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ((pre?&quot;${pre}\n\n&quot;:'') + texto).toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static docsInside(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tab = '&nbsp;&nbsp;'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//def title ='**Pages in this section**\n\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseNode = edofro.MarkDownHelper.MDI_redux.obtainBaseFolder(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!baseNode) return noBaseNodeMsg
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseUri = baseNode.link.uri.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def isMDDoc = {it.link &amp;&amp; it.link.file &amp;&amp; it.link?.uri?.toString()?.toLowerCase()?.endsWith('.md') &amp;&amp; !it.text.startsWith('_') }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def myDocNode = nodo.pathToRoot.reverse().find(isMDDoc)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def docNodes = myDocNode?myDocNode.find(isMDDoc).drop(1):null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def lP = myDocNode?.getNodeLevel(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def texto = new StringBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docNodes.each{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def lN = it.getNodeLevel(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; &quot;${tab * (lN - lP - 1)}* ${ wikiLink(it,baseUri,'','')}\n&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def pre
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!texto){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; ' '
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre = nodo.children?nodo.children[0].text.trim()?:null:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def post = nodo.children.size()&gt;1?nodo.children[1].text.trim()?:null:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; (post?&quot;\n${post}&quot;:'')
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ((pre?&quot;${pre}\n\n&quot;:'') + texto).toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static topDocsList(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseNode = edofro.MarkDownHelper.MDI_redux.obtainBaseFolder(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!baseNode) return noBaseNodeMsg
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseUri = baseNode.link.uri.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def isMDDoc = {it.link &amp;&amp; it.link.file &amp;&amp; it.link?.uri?.toString()?.toLowerCase()?.endsWith('.md') &amp;&amp; !it.text.startsWith('_') }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def docNodes = baseNode.children.findAll(isMDDoc)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def filterIcon = nodo.icons.first
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (filterIcon){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docNodes = docNodes.findAll{it.icons.contains(filterIcon)}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def texto = new StringBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docNodes.each{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; &quot;* ${ wikiLink(it,baseUri,'','')}\n&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return texto.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// TODO: ver si requiere nodos hijos pre y post
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static structuredDocsList(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tab = '&nbsp;&nbsp;'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseNode = edofro.MarkDownHelper.MDI_redux.obtainBaseFolder(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!baseNode) return noBaseNodeMsg
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseUri = baseNode.link.uri.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def isMDDoc = {it.link &amp;&amp; it.link.file &amp;&amp; !it.text.startsWith('_') &amp;&amp; it.link?.uri?.toString()?.toLowerCase()?.endsWith('.md') }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def docNodes = baseNode.find(isMDDoc)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def filterIcon = nodo.icons.first
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (filterIcon){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docNodes = docNodes.findAll{it.icons.contains(filterIcon)}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def lP = baseNode.getNodeLevel(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def texto = new StringBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;docNodes.each{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def lN = it.getNodeLevel(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; &quot;${tab * (lN - lP - 1)}* ${ wikiLink(it,baseUri,'','')}\n&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!texto){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; ' '
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return texto.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// TODO: ver si requiere nodos hijos pre y post
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static linkToWikipage(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// def n = nodo.children.find{it.link &amp;&amp; it.link.uri.scheme=='file'}?:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// primer hijo &quot;nodo con link a file&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// nodo.connectorsOut.target.find{it.link.file}?:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// primer &quot;nodo con link a file&quot; conectado desde nodo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// nodo.children.connectorsOut.target.flatten().find{it.link.file}?:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// primer &quot;nodo con link a file&quot; conectado desde nodo hijo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// nodo.children.find{it.link.node}?.link?.node?:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &quot;nodo con link a file&quot; linkeado desde primer hijo con link
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// nodo.link?.node&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &quot;nodo con link a file&quot; linkeado desde nodo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def n = MDH.getNodeWithLinkToFile(nodo)?:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//getting link to file from node (or node's linked nodes)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.children.findResult{MDH.getNodeWithLinkToFile(it)}?:&nbsp;&nbsp;&nbsp;//getting it from any of its children
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def texto =n.text.takeBefore('.md')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def uri = n.link.uri.toString().takeAfter('.wiki/').takeBefore('.md')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(texto &amp;&amp; (texto == uri || texto == uri.replace('-',' '))){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;[${texto.replace('-',' ')}]($uri)&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return MDH.failMessage('No wiki page found!!')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return MDH.failMessage('No wiki page found!!')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static previousAndNext(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseNode = edofro.MarkDownHelper.MDI_redux.obtainBaseFolder(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!baseNode) return noBaseNodeMsg
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def baseUri = baseNode.link.uri.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def isMDDoc = {it.link &amp;&amp; it.link.file &amp;&amp; it.link?.uri?.toString()?.toLowerCase()?.endsWith('.md') &amp;&amp; !it.text.startsWith('_') }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def pathToRootDocNodes = nodo.pathToRoot.findAll(isMDDoc)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def thisDocNode = pathToRootDocNodes?pathToRootDocNodes[-1]:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!thisDocNode) return ' '
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def docNodes = baseNode.find(isMDDoc)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def pos = docNodes.indexOf(thisDocNode)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def prevDocNode = pos&gt;0?docNodes[pos - 1]:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nextDocNode = pos&lt;docNodes.size()?docNodes[pos + 1]:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def pre = nodo.children?nodo.children[0].text.trim()?:null:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def post = nodo.children.size()&gt;1?nodo.children[1].text.trim()?:null:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;${pre?&quot;${pre}\n\n&quot;:''}${ wikiLink(prevDocNode,baseUri,'&lt;&lt;&lt; ','')} - ${ wikiLink(nextDocNode,baseUri,'',' &gt;&gt;&gt;')}${post?&quot;\n\n${post}&quot;:''}&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static wikiLink(n, baseUri, pre, post){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return n?&quot;[${pre}${n.text.takeBefore('.md').replace('-',' ')}${post}](${(n.link.uri.toString()-baseUri).takeBefore('.md')})&quot;:&quot;${pre}-${post}&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<node TEXT="MDH v0.1.4" STYLE_REF="milestone" ID="ID_1348078670" CREATED="1658704975010" MODIFIED="1658705505177"/>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_1141261676" CREATED="1658705010307" MODIFIED="1658705505193">
<node TEXT="create links to other .md documents and headings in the site" ID="ID_627787887" CREATED="1633189669534" MODIFIED="1658112841567" VGAP_QUANTITY="2 px">
<node TEXT="- the main drawback for me in using MDH for making a website was the lack of an easy way to create links to other .md documents and headings in the site; that&apos;s the main reason that I switched to a text editor, Obsidian, that is designed to make such things easy (it does things like updating links in all documents if I decide to change a filename or header)" STYLE_REF="pendingTask" ID="ID_1281749185" CREATED="1633189597756" MODIFIED="1658112841567"/>
</node>
</node>
<node TEXT="MDH F2" STYLE_REF="milestone" ID="ID_1785793753" CREATED="1658705021227" MODIFIED="1658705505193"/>
<node TEXT="MDH F3" STYLE_REF="milestone" ID="ID_190264705" CREATED="1658705027560" MODIFIED="1658705505193">
<node TEXT="- the relationship between the map and files needs to be clearer, with more instructions about how to add the folders nodes in the beginning, and more troubleshooting and instructions about how to add and use the wikinodes that rely on file names." STYLE_REF="maybeTask" ID="ID_1193365769" CREATED="1633189597753" MODIFIED="1658112866779"/>
</node>
<node TEXT="MDH F4" STYLE_REF="milestone" ID="ID_1484827320" CREATED="1658705033445" MODIFIED="1658705505208">
<node TEXT="" ID="ID_402885995" CREATED="1621875315036" MODIFIED="1621875315044">
<hook NAME="FirstGroupNode"/>
</node>
<node TEXT="guardar masivo de Md Docs" STYLE_REF="pendingTask" ID="ID_1290664104" CREATED="1618237646337" MODIFIED="1623451006172">
<node TEXT="guardar md docs de rama" FOLDED="true" ID="ID_393300812" CREATED="1618234265330" MODIFIED="1618237510781"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownDialog
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def nodo = node
    </p>
    <p>
      
    </p>
    <p>
      def isMDDoc = {it.link &amp;&amp; it.link.file &amp;&amp; it.link?.uri?.toString()?.toLowerCase()?.endsWith('.md') &amp;&amp; !it.text.startsWith('_') }
    </p>
    <p>
      def docNodes = nodo.find(isMDDoc)
    </p>
    <p>
      def j=0
    </p>
    <p>
      
    </p>
    <p>
      docNodes.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;j += MarkdownDialog.saveFile(n, true)&nbsp;&nbsp;// saveFile(nodo, overwriteConfirmed)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      return j
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="no funciona. genera errores" ID="ID_1768617856" CREATED="1618234265330" MODIFIED="1618234265330"/>
<node TEXT="al parecer es un tema que recalcula formuals entre grabación y grabación y se enreda" ID="ID_1231995327" CREATED="1618234265330" MODIFIED="1618234265330"/>
</node>
<node TEXT="guarda doc y selecciona siguiente" ID="ID_420232279" CREATED="1618234265330" MODIFIED="1618237542816">
<icon BUILTIN="forward"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownDialog
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def baseNode = edofro.MarkDownHelper.MDI_redux.obtainBaseFolder(node)
    </p>
    <p>
      def baseUri = baseNode.link.uri.toString()
    </p>
    <p>
      
    </p>
    <p>
      def isMDDoc = {it.link &amp;&amp; it.link.file &amp;&amp; it.link?.uri?.toString()?.toLowerCase()?.endsWith('.md') /* &amp;&amp; !it.text.startsWith('_') */ }
    </p>
    <p>
      
    </p>
    <p>
      def pathToRootDocNodes = node.pathToRoot.findAll(isMDDoc)
    </p>
    <p>
      def thisDocNode = pathToRootDocNodes?pathToRootDocNodes[-1]:null
    </p>
    <p>
      if(!thisDocNode) return 'no se encontró MdDoc'
    </p>
    <p>
      def j
    </p>
    <p>
      if(node == thisDocNode){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;j = MarkdownDialog.saveFile(thisDocNode, true)
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.select(thisDocNode)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'no guardado, sólo seleccionado'
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def docNodes = baseNode.find(isMDDoc)
    </p>
    <p>
      def pos = docNodes.indexOf(thisDocNode)
    </p>
    <p>
      
    </p>
    <p>
      //def prevDocNode = pos&gt;0?docNodes[pos - 1]:null
    </p>
    <p>
      def nextDocNode = pos&lt;docNodes.size()?docNodes[pos + 1]:null
    </p>
    <p>
      
    </p>
    <p>
      if (nextDocNode) c.select(nextDocNode)
    </p>
    <p>
      
    </p>
    <p>
      return &quot;hecho: $thisDocNode&nbsp;&nbsp;$j&quot;
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="colapsar hijos de nodos Md Docs (que no sean MD Docs)" STYLE_REF="pendingTask" FOLDED="true" ID="ID_308514874" CREATED="1618237706380" MODIFIED="1623451006488">
<node TEXT="cerrar nodos &apos;content&apos;" ID="ID_552781098" CREATED="1618234265331" MODIFIED="1618234265331"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // cerrar nodos 'content'
    </p>
    <p>
      node.find{it.text == 'content'}*.folded = true
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="cambiar fileLinksRelative a true o false" ID="ID_500468903" CREATED="1618234265331" MODIFIED="1618234265331">
<icon BUILTIN="forward"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      def att = 'fileLinksRelative'
    </p>
    <p>
      
    </p>
    <p>
      def a = 0
    </p>
    <p>
      def opcion = a==1?true:false
    </p>
    <p>
      
    </p>
    <p>
      def nodos = node.find{n -&gt; n.attributes.containsKey(att)}
    </p>
    <p>
      
    </p>
    <p>
      nodos.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n[att] = opcion
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //fileLinksRelative&nbsp;&nbsp;&nbsp;&nbsp;true
    </p>
    <p>
      
    </p>
    <p>
      return nodos.size()
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="" ID="ID_907035538" CREATED="1621875315029" MODIFIED="1621875315035">
<hook NAME="SummaryNode"/>
<hook NAME="AlwaysUnfoldedNode"/>
<node TEXT="ver versiones en mapa &quot;Markdown Helper Wiki&quot;" STYLE_REF="pendingTask" ID="ID_324393409" CREATED="1621875315051" MODIFIED="1623451006799"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      pueden estar más desarrolladas
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="MDH F5" STYLE_REF="milestone" ID="ID_1309434676" CREATED="1658705038637" MODIFIED="1658705505208"/>
</node>
<node TEXT="" ID="ID_1946811593" CREATED="1616168858537" MODIFIED="1616168858559">
<hook NAME="SummaryNode"/>
<hook NAME="AlwaysUnfoldedNode"/>
<node TEXT="limpiar variables duplicadas" STYLE_REF="completedTask" FOLDED="true" ID="ID_908594759" CREATED="1616168858680" MODIFIED="1623451211946">
<node TEXT="obtener accion de icono desde la id que le di" ID="ID_178684388" CREATED="1618522009215" MODIFIED="1624206367019"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Map icon = [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leaf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F343' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignoreNode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-26D4'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignoreContent&nbsp;&nbsp;&nbsp;: 'emoji-1F648' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newLine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-21A9'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F522' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bullet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F537' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;centered&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2194'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alignRight&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-27A1'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2714'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isTask&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F532' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeFirst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveIcon_0_Action',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeLast&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveIconAction',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeAll&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveAllIconsAction',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2753'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4BE' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoMD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F519' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toPlain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4DD' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rootFolder&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4CD' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linked&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F517'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;]&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      def iconos = 'removeFirst,removeLast,removeAll,leaf,ignoreContent,ignoreNode,number,bullet,alignRight,centered,newLine,isTask,completed'.split(',')
    </p>
    <p>
      
    </p>
    <p>
      def iconAction(icono){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return icono.toLowerCase().endsWith('action')?icono:'IconAction.' + icono
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def tbActions = iconos.collect{key -&gt; iconAction(icon[key])}
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="WSE_redux.groovy" ID="ID_1812682619" CREATED="1631711734781" MODIFIED="1678219438187" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/WSE_redux.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.416" OBJECT="org.freeplane.features.format.FormattedNumber|2416|#,##0"/>
<attribute NAME="projectCode" VALUE="WSE_redux.groovy"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package edofro.MarkDownHelper
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.plugin.script.FreeplaneScriptBaseClass.ConfigProperties
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      class WSE_redux{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String attributeForExtensions =&nbsp;&nbsp;new ConfigProperties().getProperty('wikdShellExtension_attributeForExtensions','file_ext')
    </p>
    <p>
      
    </p>
    <p>
      //region: get/set/is extension from selected node
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static extensionFromNode(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extensionFromAttribute(n)?:extensionFromDetails(n)?:extensionFromText(n)?:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static extensionFromAttribute(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[attributeForExtensions]?:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static extensionFromDetails(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.details?.size()&gt;1?n.details?[0]=='.'?n.details.drop(1).takeBefore(' ').takeBefore('\n')?:n.details.drop(1).takeBefore('\n')?:n.details.drop(1).takeBefore(' ')?:n.details.drop(1):null:null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static extensionFromText(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.text.reverse().takeBefore('.').reverse()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static extensionFromFilePath(filepath){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return filepath.reverse().split(&quot;\\.&quot;)[0].reverse().toLowerCase()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static setExtension(n, ext){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// If it's allready defined --&gt; do nothing
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(extensionFromAttribute(n)==ext || extensionFromDetails(n)==ext) return
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//I prefer it in this order:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// only details
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if details are beeing Used --&gt; attribute
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!n.details){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.details = '.' + ext
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[attributeForExtensions] = ext
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static extensionFromNodeFile(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(n.link &amp;&amp; n.link.uri &amp;&amp; n.link.uri.scheme == 'file')?extensionFromFilePath(n.link.uri.path):null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static isExtensionNode(n, extension){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def ext = extensionFromNodeFile(n)?:extensionFromNode(n)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ext?ext==extension:false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //region: groovy Node
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static isGroovyNode(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return (isExtensionNode(n, 'groovy') || n['script1']?true:false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static scriptFromNode(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def input = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (isGroovyNode(n)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( extensionFromNodeFile(n) == 'groovy' ) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;&nbsp;&nbsp;= n.link.file.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if ( n['script1']?true:false ){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;&nbsp;&nbsp;= n['script1'].plain.toString().trim()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if ( n.note ){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input&nbsp;&nbsp;&nbsp;= n.note.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return input
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="MarkdownPreview.groovy" FOLDED="true" ID="ID_1942851268" CREATED="1640280832711" MODIFIED="1678219438220" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/MarkdownPreview.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="12.714" OBJECT="org.freeplane.features.format.FormattedNumber|12714|#,##0"/>
<attribute NAME="projectCode" VALUE="MarkdownPreview.groovy"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package edofro.MarkDownHelper
    </p>
    <p>
      
    </p>
    <p>
      //region: imports
    </p>
    <p>
      
    </p>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      // import java.awt.GraphicsEnvironment
    </p>
    <p>
      // import java.awt.Dimension
    </p>
    <p>
      // import java.awt.Desktop
    </p>
    <p>
      // import java.awt.BorderLayout
    </p>
    <p>
      // import java.awt.Color
    </p>
    <p>
      
    </p>
    <p>
      import java.awt.event.WindowAdapter
    </p>
    <p>
      import java.awt.event.WindowEvent
    </p>
    <p>
      
    </p>
    <p>
      import javax.swing.event.HyperlinkEvent
    </p>
    <p>
      import javax.swing.event.HyperlinkListener
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.features.map.INodeSelectionListener;
    </p>
    <p>
      import org.freeplane.features.map.INodeChangeListener
    </p>
    <p>
      import org.freeplane.features.map.NodeChangeEvent
    </p>
    <p>
      import org.freeplane.features.map.NodeModel
    </p>
    <p>
      import org.freeplane.features.mode.Controller
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.core.util.MenuUtils
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import org.freeplane.plugin.script.proxy.ScriptUtils
    </p>
    <p>
      import org.freeplane.plugin.script.proxy.NodeProxy
    </p>
    <p>
      
    </p>
    <p>
      import io.github.gitbucket.markedj.Marked
    </p>
    <p>
      import io.github.gitbucket.markedj.Options
    </p>
    <p>
      
    </p>
    <p>
      import edofro.pseudofreeplaneapi.UserStyles as us
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      class MarkdownPreview {
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: properties
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;SwingBuilder swing&nbsp;&nbsp;&nbsp;&nbsp;= new SwingBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static dialogName = 'MDHPreviewDialog_013'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def myEditorName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'MDHPreviewPanel'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def iniMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;----- select the node with the note you want to view and click the 'Turn ON' button ----&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ScriptUtils.c()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;Options options&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= new Options()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: constructor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;public MarkdownPreview(){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;options.getWhitelist().addProtocols(&quot;img&quot;, &quot;src&quot;, &quot;http&quot;, &quot;https&quot;, &quot;file&quot;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def newEditorPane = { t -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def com = swing.editorPane(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editable&nbsp;&nbsp;&nbsp;&nbsp;: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentType : &quot;text/html&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//background: Color.pink,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : t,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//preferredSize: new Dimension(30, 50),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: myEditorName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com.addHyperlinkListener(e -&gt; {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (HyperlinkEvent.EventType.ACTIVATED.equals(e.getEventType())) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Desktop desktop = Desktop.getDesktop();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;desktop.browse(e.getURL().toURI());
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (Exception ex) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ex.printStackTrace();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return com
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def editorPane
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def noteFrame
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnOnOff
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnFollow
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnPanel
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def previousBounds
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def scrollPane = {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def com = swing.scrollPane(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//background: Color.blue,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane = newEditorPane(iniMsg)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com.verticalScrollBar.unitIncrement = 16&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return com
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def buttonPanel = {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swing.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constraints : BorderLayout.NORTH,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//background: Color.yellow,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowLayout(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alignment : FlowLayout.RIGHT,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnOnOff = toggleButton(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'Turn ON',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;(in)activates the preview panel. It links it to the node that was selected when clicking the button and shows its note.&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//margin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: new Insets(10,15,10,15),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttn = e.source
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def off = !bttn.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttn.text = activateChangeListener(editorPane, c.selected, off)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(off){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnFollow.selected = false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deactivateSelectionListener()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnFollow.text = 'Follow'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnFollow.enabled = !off
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MarkdownDialog.focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnFollow = toggleButton(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'Follow',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;when active it 'follows' the selected node and shows the nearest MDH node above it. Click again to unfollow&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;enabled : false ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttn = e.source
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttn.text = activateSelectionListener(editorPane, !bttn.selected)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MarkdownDialog.focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleButton(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'Maximize panel',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'Maximizes the preview panel to fit the screen. You can also drag the borders to resize the panel.',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttn = e.source
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(bttn.selected){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;previousBounds&nbsp;&nbsp;&nbsp;= new Rectangle(noteFrame.bounds)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;noteFrame.bounds = noteFrame.graphicsConfiguration.bounds
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttn.text = 'Back to previous size'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;noteFrame.bounds = previousBounds
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttn.text = 'Maximize panel'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MarkdownDialog.focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleButton(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'alwaysOnTop',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;(in)activate the 'Allways on Top' state for the preview panel&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttn = e.source
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;noteFrame.alwaysOnTop = bttn.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MarkdownDialog.focusMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;noteFrame = swing.dialog(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title : 'MarkdownHelper Preview',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: dialogName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locationRelativeTo: UITools.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(450,400),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//background: Color.green,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;iconImage : MenuUtils.getMenuItemIcon('IconAction.MarkdownHelper/MarkdownHelper-icon').imageIcon.image,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack : true,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show : true,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// id:'myDialog',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modal:false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;owner:UITools.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderLayout()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnPanel = buttonPanel()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scrollPane()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;noteFrame.addWindowListener(new WindowAdapter() {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void windowClosing(WindowEvent e) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// System.out.println(&quot;WindowClosingDemo.windowClosing&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// System.exit(0);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deactivateSelectionListener()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deactivateChangeListener()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnOnOff.selected&nbsp;&nbsp;= false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnOnOff.text&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Turn ON'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnFollow.enabled&nbsp;&nbsp;= false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnFollow.selected = false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttnFollow.text&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Follow'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane.text&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= iniMsg
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// MarkdownDialog.addArrowMoves( bttnPanel, 0 ) // no vale la pena. no supe hacerlo funcionar acÃ¡
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EditorStyle.updateFormat(editorPane, us.getUserStyleNode(MDH.MDHPreviewStyle))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: methods
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def activateChangeListener(comp, nodo, boolean deactivate = false){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mapController = Controller.currentModeController.mapController;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deactivateChangeListener()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (deactivate) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.text = iniMsg
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'Turn On'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def myChgListener = new MDHNodeChangeListener(comp, nodo );
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapController.addNodeChangeListener(myChgListener);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.text = getHtmlFromNote(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'Turn Off'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def deactivateChangeListener(){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mapController = Controller.currentModeController.mapController;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def listenerFound = false;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(mapController.nodeChangeListeners.findAll { it.class.name == MDHNodeChangeListener.class.name }).each {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapController.removeNodeChangeListener(it);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listenerFound = true;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return listenerFound
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def activateSelectionListener(comp, boolean deactivate = false){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mapController = Controller.currentModeController.mapController;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;deactivateSelectionListener()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (deactivate) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'Follow'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mySelListener = new MDHSelectionListener(comp);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapController.addNodeSelectionListener(mySelListener);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;activateChangeListener(comp, getMDNode(c.selected)) // activar el panel para nodo MDH sobre seleccionado
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'Unfollow'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def deactivateSelectionListener(){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mapController = Controller.currentModeController.mapController;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def listenerFound = false;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(mapController.nodeSelectionListeners.findAll { it.class.name == MDHSelectionListener.class.name }).each {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapController.removeNodeSelectionListener(it);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listenerFound = true;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return listenerFound
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getHtmlFromNote(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nodo?.note) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def noteType = nodo.noteContentType
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def html
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch (noteType){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case ['auto','html']:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html = nodo.plainNote.startsWith('=')?nodo.note.plain:nodo.note.html
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case 'markdown':
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &lt;style&gt;${htmlStyle}&lt;/style&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html = &quot;&quot;&quot;&lt;html&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${Marked.marked(nodo.note.plain, options)}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/html&gt;&quot;&quot;&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;html = &quot;Node's note not recognized&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return html
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getMDNode(NodeModel nM){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def n = c.selected.mindMap.node(nM.ID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return getMDNode(n)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getMDNode(NodeProxy n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return n.parent?.pathToRoot?.reverse().find{it.style.name == 'MarkdownHelperNode'}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static showMDHPreview(){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def MDHPreviewDialog = UITools.frame.ownedWindows.find{ it.name == MarkdownPreview.dialogName }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (MDHPreviewDialog){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MDHPreviewDialog.show()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def editorPane =&nbsp;&nbsp;MDHPreviewDialog.contentPane.components[1].components[0].components[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def styleNode = us.getUserStyleNode(MDH.MDHPreviewStyle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;EditorStyle.updateFormat(editorPane, styleNode)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return MDHPreviewDialog.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new MarkdownPreview()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'build'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//region: listeners
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;class MDHNodeChangeListener implements INodeChangeListener {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def comp
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def node
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MDHNodeChangeListener(def component, nodo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp = component
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = nodo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public void nodeChanged(NodeChangeEvent event) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object property = event.property
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def id = event.node.getID()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (id == node.id) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.text = getHtmlFromNote(node)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;class MDHSelectionListener implements INodeSelectionListener {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def comp&nbsp;&nbsp;&nbsp;//component, en este caso editorPane
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def node&nbsp;&nbsp;&nbsp;&nbsp;//nodo MDH que estÃ¡ mirando actualmente
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def sNode&nbsp;&nbsp;&nbsp;//Ãºltimo nodo seleccionado
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MDHSelectionListener(def component) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp = component;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void onSelect(NodeModel selNode) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (sNode != selNode){&nbsp;&nbsp;//si el nuevo nodo seleccionado es otro que el anterior seleccionado
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//busca el nodo MDH mÃ¡s cercano
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mdNode = getMDNode(selNode)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// si el nuevo nodo MDH es diferente al actual nodo MDH
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (mdNode &amp;&amp; node != mdNode){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;activateChangeListener(comp, mdNode) // activar el panel para el nuevo nodo MDH
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = mdNode
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sNode = selNode
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void onDeselect(NodeModel deselNode) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//end:
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
<node TEXT="MDH v0.1.4" STYLE_REF="milestone" ID="ID_505589966" CREATED="1658704975010" MODIFIED="1658705505177"/>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_331919880" CREATED="1658705010307" MODIFIED="1658705505193"/>
<node TEXT="MDH F2" STYLE_REF="milestone" ID="ID_351197543" CREATED="1658705021227" MODIFIED="1658705505193">
<node TEXT="cambiar textos botones previewPanel" STYLE_REF="maybeTask" FOLDED="true" ID="ID_223303296" CREATED="1651250814274" MODIFIED="1658112543917">
<node TEXT="Unfollow ---&gt; Stay here" ID="ID_1130420712" CREATED="1651250832051" MODIFIED="1651250889659"/>
</node>
</node>
<node TEXT="MDH F3" STYLE_REF="milestone" ID="ID_552420384" CREATED="1658705027560" MODIFIED="1658705505193"/>
<node TEXT="MDH F4" STYLE_REF="milestone" ID="ID_773574142" CREATED="1658705033445" MODIFIED="1658705505208"/>
<node TEXT="MDH F5" STYLE_REF="milestone" ID="ID_880805715" CREATED="1658705038637" MODIFIED="1658705505208">
<node TEXT="editorpane print" STYLE_REF="maybeTask" FOLDED="true" ID="ID_866892156" CREATED="1639004411538" MODIFIED="1658112543902">
<node TEXT="https://stackoverflow.com/questions/4197669/printing-from-jeditorpane" ID="ID_902053900" CREATED="1639005157091" MODIFIED="1639005157091" LINK="https://stackoverflow.com/questions/4197669/printing-from-jeditorpane"/>
<node TEXT="https://stackoverflow.com/questions/22428725/how-can-i-print-content-of-jtextpane" ID="ID_1730197927" CREATED="1639005137519" MODIFIED="1639005137519" LINK="https://stackoverflow.com/questions/22428725/how-can-i-print-content-of-jtextpane"/>
<node TEXT="https://www.tabnine.com/code/java/methods/javax.swing.JEditorPane/print" ID="ID_182987926" CREATED="1639005176061" MODIFIED="1639005176061" LINK="https://www.tabnine.com/code/java/methods/javax.swing.JEditorPane/print"/>
<node TEXT="https://docs.oracle.com/javase/7/docs/api/javax/swing/text/JTextComponent.html#print(java.text.MessageFormat,%20java.text.MessageFormat)" ID="ID_1793928922" CREATED="1639005114605" MODIFIED="1639005114605" LINK="https://docs.oracle.com/javase/7/docs/api/javax/swing/text/JTextComponent.html#print(java.text.MessageFormat,%20java.text.MessageFormat)"/>
<node TEXT="https://gist.github.com/dagvadorj/3877702" ID="ID_1699897559" CREATED="1639004434453" MODIFIED="1639004434453" LINK="https://gist.github.com/dagvadorj/3877702"/>
<node TEXT="https://github.com/miura/tango/blob/master/src/main/java/tango/rEditor/DocumentRenderer.java" ID="ID_497598143" CREATED="1639005009067" MODIFIED="1639005009067" LINK="https://github.com/miura/tango/blob/master/src/main/java/tango/rEditor/DocumentRenderer.java"/>
<node TEXT="http://www.java2s.com/Questions_And_Answers/Swing/JEditorPane/Print.htm" ID="ID_1239956634" CREATED="1639005086143" MODIFIED="1639005086143" LINK="http://www.java2s.com/Questions_And_Answers/Swing/JEditorPane/Print.htm"/>
</node>
</node>
</node>
<node TEXT="EditorStyle.groovy" ID="ID_763679017" CREATED="1641301559740" MODIFIED="1678219438247" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/EditorStyle.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.938" OBJECT="org.freeplane.features.format.FormattedNumber|3938|#,##0"/>
<attribute NAME="projectCode" VALUE="EditorStyle.groovy"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package edofro.MarkDownHelper
    </p>
    <p>
      
    </p>
    <p>
      //region: imports
    </p>
    <p>
      
    </p>
    <p>
      import java.awt.Font
    </p>
    <p>
      import javax.swing.text.html.StyleSheet
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.core.ui.components.html.StyleSheetConfigurer;
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import org.freeplane.core.ui.components.html.CssRuleBuilder
    </p>
    <p>
      import org.freeplane.core.util.FreeplaneVersion
    </p>
    <p>
      import org.freeplane.features.styles.LogicalStyleController.StyleOption
    </p>
    <p>
      import org.freeplane.api.Node as ApiNode
    </p>
    <p>
      import org.freeplane.plugin.script.proxy.ScriptUtils
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      class EditorStyle {
    </p>
    <p>
      
    </p>
    <p>
      //region: properties
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String htmlStyle =
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table {border: 0; border-spacing: 0;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;th, td {border: 1px solid;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pre {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background-color: rgb(230, 230, 230);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border: 1px solid rgb(0, 0, 0);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;display: block;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;padding: 10px;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;code {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;font-family: Consolas,&quot;courier new&quot;;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color: rgb(0, 80, 0);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;&quot;&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final requiredFreeplaneVersion = FreeplaneVersion.getVersion( &quot;1.9.12&quot; )
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      //region: apply format from node to editorPane document
    </p>
    <p>
      
    </p>
    <p>
      // public
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static updateFormat( editorPane, ApiNode nodo ){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nodo || !editorPane) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;updateColors(editorPane, nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;updateStyleSheet(editorPane, nodo as ApiNode)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane.updateUI()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getStyleSheetFromNode( ApiNode nodo ) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nodo) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String ownRule&nbsp;&nbsp;= getCssRuleFromNodeCss(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String nodeRule = getCssRuleFromNodeFormat(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def ownStyleSheet = new StyleSheet()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.removeStyle(&quot;body&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.removeStyle(&quot;p&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.addRule(nodeRule);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.addRule(ownRule);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ownStyleSheet
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      // private
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static updateColors( editorPane, ApiNode nodo ) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nodo || !editorPane) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fgColor = nodo.style.textColor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//msg(fgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bgColor = nodo.style.backgroundColor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//msg(bgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane.setForeground(fgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane.setBackground(bgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static updateStyleSheet( editorPane, ApiNode nodo ) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nodo || !editorPane) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return updateStyleSheet(editorPane, getStyleSheetFromNode(nodo))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static updateStyleSheet( editorPane, StyleSheet ownStyleSheet ) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!ownStyleSheet || !editorPane) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StyleSheet styleSheet = editorPane.getDocument().getStyleSheet();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StyleSheetConfigurer.resetStyles(styleSheet, 1);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StyleSheet defaultSheet = StyleSheetConfigurer.createDefaultStyleSheet() //por si acaso
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;styleSheet.addStyleSheet(defaultSheet);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;styleSheet.addStyleSheet(ownStyleSheet);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getCssRuleFromNodeCss( ApiNode nodo ){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuilder cssBuilder = new StringBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cssBuilder &lt;&lt; ( ( !nodo || ScriptUtils.c().freeplaneVersion &lt; requiredFreeplaneVersion )? htmlStyle : nodo.style.css )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return cssBuilder.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getCssRuleFromNodeFormat( ApiNode nodo ){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( !nodo ) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def f = nodo.style.font
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringBuilder ruleBuilder = new StringBuilder(100);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ruleBuilder.append(&quot;body {&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ruleBuilder.append(new CssRuleBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withCSSFont( new Font(f.name,(f.bold?Font.BOLD:0) + (f.italic?Font.ITALIC:0) ,f.size) )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withColor( nodo.style.textColor )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withBackground( nodo.style.backgroundColor ) )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//.withAlignment(getHorizontalTextAlignment(nodo, StyleOption.FOR_UNSELECTED_NODE).swingConstant));
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ruleBuilder.append( &quot;}\n&quot; );
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ruleBuilder.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="MdhCleaner.groovy" FOLDED="true" ID="ID_502639662" CREATED="1651980719743" MODIFIED="1678219438265" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/MdhCleaner.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="10.909" OBJECT="org.freeplane.features.format.FormattedNumber|10909|#,##0"/>
<attribute NAME="projectCode" VALUE="MdhCleaner.groovy"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package edofro.MarkDownHelper
    </p>
    <p>
      
    </p>
    <p>
      //region: imports
    </p>
    <p>
      import edofro.pseudofreeplaneapi.UserStyles as us
    </p>
    <p>
      
    </p>
    <p>
      import java.nio.file.Files
    </p>
    <p>
      import java.nio.file.Path
    </p>
    <p>
      import java.nio.file.Paths
    </p>
    <p>
      import java.nio.file.attribute.BasicFileAttributes
    </p>
    <p>
      
    </p>
    <p>
      import javax.swing.JFileChooser
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.core.ui.CaseSensitiveFileNameExtensionFilter
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools as ui
    </p>
    <p>
      import org.freeplane.core.util.TextUtils as textUtils
    </p>
    <p>
      import org.freeplane.plugin.script.FreeplaneScriptBaseClass.ConfigProperties
    </p>
    <p>
      import org.freeplane.plugin.script.proxy.ScriptUtils
    </p>
    <p>
      
    </p>
    <p>
      //end:
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      class MdhCleaner{
    </p>
    <p>
      
    </p>
    <p>
      // region: properties
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String noMdhMapMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Current mind map has no MDH styled nodes. Nothing to do. Aborted.'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList MdhStyleNames&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= MDH.MdhStyleNames
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String saveMapMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Save map to continue?'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String MDHTitle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'MarkdownHelper'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String mapNotSavedMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;The original map wasn't saved. Aborted&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String chooseFileTitle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;Save mindmap copy as 'MDH-Clean' mindmap&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String noExportFilePathMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'No export file chosen. Aborted.'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String abortedMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ' Aborted '
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String mapOpenWithChangesMsg&nbsp;&nbsp;&nbsp;= 'Export map is open and has unsaved changes. \nDo you want to lose that changes and overwrite it?'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String mapCloseWithChangesMsg&nbsp;&nbsp;= 'Export map has been modified after the previous export. \nDo you want to lose that changes and overwrite it?'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final ArrayList listOfStylesToProcess = [MDH.MDNodeStyle]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String pathVariable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'mdhCleanMindmapPath'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final String exportDateVariable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'mdhCleanMindmapExportDate'
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static final c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ScriptUtils.c()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;static ConfigProperties config = new ConfigProperties()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      // end:
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;/**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* saves a copy of the source mindmap as a map without MDH nodes and styles.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* &lt;p&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* source mindmap should be open in Freeplane.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param sourceMap descr
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static saveAsMdhCleanMap(sourceMap){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//1. confirms that Map uses MDH
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!hasMDH(sourceMap)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noMdhMapMsg,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 0'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//2. saves current map
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def isMapSaved = sourceMap.saved || doUserSavesMap(sourceMap)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!isMapSaved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(mapNotSavedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 1'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//3. gets exportFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def exportFilePath = sourceMap.storage[pathVariable]?.to?.string
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def loggedLastDate = sourceMap.storage[exportDateVariable]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loggedLastDate = (loggedLastDate &amp;&amp; loggedLastDate.isDate())?loggedLastDate.to.date:null
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = confirmExportFilePath(sourceMap, exportFilePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noExportFilePathMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 2'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//4. confirms that the target file has no additional modifications that may be unvoluntary overwritten
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def okToContinue = isConflictFree(exportFilePath, loggedLastDate)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!okToContinue){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(abortedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 3'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 5. clone sourceMap --&gt; targetMap
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def sourceFile = sourceMap.file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def targetFile = new File(exportFilePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def targetMap = c.mapLoader(sourceFile).newMapLocation(targetFile)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//.saveAfterLoading()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//.withView() // make all changes not visible
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.getMindMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetMap.evaluateOutdatedFormulas() //maybe better evaluateAllFormulas ?
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 6. delete MDH variables from targetMap
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetMap.storage[exportDateVariable] = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetMap.storage[pathVariable]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= null
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 7. get MDH style nodes from map
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def MdhStyleNodesInMap&nbsp;&nbsp;= us.getUserDefinedStylesParentNode(targetMap).children.findAll{it.text in MdhStyleNames }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def MdhStyleNamesInMap&nbsp;&nbsp;= MdhStyleNodesInMap.collect{it.text}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def stylesToProcess&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= listOfStylesToProcess.intersect(MdhStyleNamesInMap)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 8. process MDH nodes
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nodosMDH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= targetMap.root.find{ it.style.name in stylesToProcess}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nodosPrincipales = nodosMDH.findAll{ n -&gt; !(n.pathToRoot - n)*.style*.name.any{it in stylesToProcess} }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodosPrincipales.each{ n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeMDHfromNode(n)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 9. clean other MDH styles
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def otherMdhStyles = (MdhStyleNames -&nbsp;&nbsp;listOfStylesToProcess).intersect(MdhStyleNamesInMap)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodosMDH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= targetMap.root.find{ it.style.name in otherMdhStyles}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodosMDH.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.style.name = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 10. delete MDH styles from map
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MdhStyleNodesInMap.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.delete()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 11. activates sourceMap
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//def sourceFile = sourceMap.file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//c.mapLoader(sourceFile).withView().getMindMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 12. targetMap visible
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetMap.modeController.mapController.createMapView(targetMap.delegate)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 13. save targetMap without modification dates (cleaner for Github)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def configKey = 'save_modification_times'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def configValue = config.properties[configKey]&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.properties[configKey] = 'false'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetMap.saved = false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;targetMap.save(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;config.properties[configKey] = configValue
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// c.select(nodosPrincipales)
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 14. update map variables
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sourceMap.storage[pathVariable] = exportFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sourceMap.storage[exportDateVariable] = fileLastModifiedDate(exportFilePath).format(&quot;yyyy-MM-dd HH:mm:ss.SSSZ&quot;).toString()
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 15. save source map
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sourceMap.save(true)
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 16. ready!
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.informationMessage('Ready!\n\ncopy of mindmap without MDH exported')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'ok!!!'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      // region: help methods
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;/**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* looks if the mindmap has any node using a MDH style
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param mindmap the mindmap as&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return true if the map has a node with an MDH style assigned to it. False otherwise.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static hasMDH(mindmap){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mindmap.root.findAll().any{n-&gt; n.style.name in MdhStyleNames}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;/**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* shows confirm dialog
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param&nbsp;&nbsp;msg&nbsp;&nbsp;&nbsp;&nbsp;message to be shown&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param&nbsp;&nbsp;title&nbsp;&nbsp;text to be used as title in the dialog
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return true if user confirms. false otherwise
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static continueDialog(msg, title){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ui.showConfirmDialog(null, msg, title, 2) == 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;/**
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* asks the user to save the mindmap (if it hasn't been save yet)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @param mapa mindmap
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* @return true if mindmap is finally saved. False otherwise
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static doUserSavesMap(mapa){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(continueDialog( saveMapMessage, MDHTitle)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapa.save(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return mapa.saved
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static isConflictFree(exportFilePath, loggedLastDate){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def doContinue = true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tempTargetMap = getIfMindMapOpen(exportFilePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def isSaved = !tempTargetMap ? true : tempTargetMap.saved
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!isSaved) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doContinue = continueDialog(mapOpenWithChangesMsg, MDHTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else if( loggedLastDate &amp;&amp; fileLastModifiedDate(exportFilePath) &gt; loggedLastDate ) { // comparing last modified dates (file vs map variable)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doContinue = continueDialog(mapCloseWithChangesMsg, MDHTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tempTargetMap &amp;&amp; doContinue){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempTargetMap.close(true, false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return doContinue
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// getting last modified date from file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static fileLastModifiedDate(filePath){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Path file&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Paths.get(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!file.toFile().isFile()) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BasicFileAttributes attr&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Files.readAttributes(file, BasicFileAttributes.class)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;&nbsp;attr?.lastModifiedTime().toInstant().toDate()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static getIfMindMapOpen(path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.openMaps.find{it.file?.canonicalPath == path}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static doProposeName(mapa){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def withMDH = '-MDH.'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mapName = mapa.file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return mapName.contains(withMDH)?mapName.replace(withMDH, '.'): mapName.replace('.mm','_MdhRemoved.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static fileChooser(directory, proposedName, title){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def chooser = ui.newFileChooser(directory)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setFileFilter(new CaseSensitiveFileNameExtensionFilter('mm', textUtils.getText(&quot;mindmaps_desc&quot;)))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setAcceptAllFileFilterUsed(false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setSelectedFile(new File(proposedName))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setDialogTitle(title)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def resp = chooser.showSaveDialog(ui.frame)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def selectedFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if( resp == JFileChooser.APPROVE_OPTION){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = chooser.selectedFile.path
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = selectedFilePath.endsWith('.mm')? selectedFilePath : (selectedFilePath + '.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return selectedFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static confirmExportFilePath(sourceMap, exportFilePath){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def proposedName = doProposeName(sourceMap)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def directory = sourceMap.file.parentFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = fileChooser(directory, proposedName,chooseFileTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tempTargetFile = new File(exportFilePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = fileChooser(tempTargetFile.parentFile, tempTargetFile.name, chooseFileTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return exportFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def static removeMDHfromNode(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mdText = n.note?.plain
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.noteText = mdText
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.attributes.clear()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.style.name = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.noteContentType = 'markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.children*.delete()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.icons.add('emoji-1F4D5') //TODO: this should be optional
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      // end:
    </p>
    <p>
      
    </p>
    <p>
      // region: --------------------------- help methods ------------------------
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getMapFromPath(filePath, withView){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(exists(filePath)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def m = c.mapLoader(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(withView) m.withView()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return m.getMindMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(String path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exists(new File(path))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(File file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.isFile()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      // end:
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<node TEXT="Save copy of MDH map as map without MDH" ID="ID_1452564024" CREATED="1648058503295" MODIFIED="1651851298676">
<attribute NAME="projectCode" VALUE="Save.copy.of.MDH.map.as.without.MDH"/>
<node TEXT="crear mapas testeo" FOLDED="true" ID="ID_1904414367" CREATED="1648484882500" MODIFIED="1648484897330">
<node TEXT="crear(copiar) mapa testeo con MDH" STYLE_REF="completedTask" ID="ID_1282093894" CREATED="1648484898964" MODIFIED="1678218951450">
<arrowlink DESTINATION="ID_325948084"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      guardar en ignoredByGitHub
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="mapa resultante tras sacar MDH" STYLE_REF="completedTask" FOLDED="true" ID="ID_890753203" CREATED="1648484908499" MODIFIED="1648767647771"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      resultado esperado
    </p>
  </body>
</html></richcontent>
<node TEXT="para comparar con lo que entrega el script" FOLDED="true" ID="ID_269558425" CREATED="1648495634443" MODIFIED="1648495645706">
<node TEXT="WinMerge" ID="ID_1366960051" CREATED="1648495668371" MODIFIED="1648495677677"/>
</node>
</node>
</node>
<node TEXT="armar script" STYLE_REF="completedTask" FOLDED="true" ID="ID_1350971628" CREATED="1648485000780" MODIFIED="1650381719322" VGAP_QUANTITY="2 px">
<node TEXT="lógica" FOLDED="true" ID="ID_1124629372" CREATED="1648767676574" MODIFIED="1648767684100">
<node TEXT="guardar mapa con MDH como mapa sin MDH" ID="ID_256863897" CREATED="1648750592753" MODIFIED="1678218951450">
<arrowlink DESTINATION="ID_484129564" STARTINCLINATION="99.75 pt;0 pt;" ENDINCLINATION="105 pt;0 pt;"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import java.nio.file.Files
    </p>
    <p>
      import java.nio.file.Path
    </p>
    <p>
      import java.nio.file.Paths
    </p>
    <p>
      import java.nio.file.attribute.BasicFileAttributes
    </p>
    <p>
      
    </p>
    <p>
      import javax.swing.JFileChooser
    </p>
    <p>
      import org.freeplane.core.ui.CaseSensitiveFileNameExtensionFilter
    </p>
    <p>
      
    </p>
    <p>
      import edofro.pseudofreeplaneapi.UserStyles as us
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // properties
    </p>
    <p>
      saveMapMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Save map to continue?'
    </p>
    <p>
      MDHTitle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'MarkdownHelper'
    </p>
    <p>
      chooseFileTitle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;Save mindmap copy as 'MDH-Clean' mindmap&quot;
    </p>
    <p>
      chooseFileTitle2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;File not found - Save mindmap copy as 'MDH-Clean' mindmap&quot;
    </p>
    <p>
      mapNotSavedMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'The original map wasn\'t saved. Aborted'
    </p>
    <p>
      noExportFilePathMsg&nbsp;&nbsp;&nbsp;&nbsp;= 'No export file chosen. Aborted.'
    </p>
    <p>
      mapOpenWithChangesMsg&nbsp;&nbsp;= 'Export map is open and has unsaved changes. \nDo you want to lose that changes and overwrite it?'
    </p>
    <p>
      abortedMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ' Aborted '
    </p>
    <p>
      mapCloseWithChangesMsg = 'Export map has been modified after the previous export. \nDo you want to lose that changes and overwrite it?'
    </p>
    <p>
      
    </p>
    <p>
      def listOfStylesToProcess = ['MarkdownHelperNode']
    </p>
    <p>
      def MdhStyleNames&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'MarkdownHelperNode,MarkdownHelperLink,MarkdownHelperPreview'.split(',')
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def nodo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= c.selected
    </p>
    <p>
      def sourceMap = nodo.map
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //1. saves current map
    </p>
    <p>
      def isMapSaved = mapMustBeSaved(sourceMap)
    </p>
    <p>
      if(!isMapSaved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(mapNotSavedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 1'
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //2. gets exportFilePath
    </p>
    <p>
      
    </p>
    <p>
      def exportFilePath = sourceMap.storage['mdhCleanMindmapPath']
    </p>
    <p>
      def loggedLastDate = sourceMap.storage['mdhCleanMindmapExportDate']?.to?.date
    </p>
    <p>
      
    </p>
    <p>
      def chooserDisplayed = false
    </p>
    <p>
      if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def proposedName = doProposeName(sourceMap)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def directory = sourceMap.file.parentFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = fileChooser(directory, proposedName,chooseFileTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;chooserDisplayed = true
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noExportFilePathMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 2'
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def tempTargetFile = new File(exportFilePath)
    </p>
    <p>
      
    </p>
    <p>
      if(!tempTargetFile.isFile() &amp;&amp; !chooserDisplayed) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = fileChooser(tempTargetFile.parentFile, tempTargetFile.name, chooseFileTitle2)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noExportFilePathMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 3'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def tempTargetMap = getIfMindMapOpen(exportFilePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//ui.showMessage(&quot;targetMap is open: $tempTargetMap&quot;,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def isSaved = !tempTargetMap ? true : tempTargetMap.saved
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//ui.showMessage(&quot;targetMap has no unsaved changes:&nbsp;&nbsp;$isSaved&quot;,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if (!isSaved) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def doContinue = continueDialog(mapOpenWithChangesMsg, MDHTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!doContinue){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(abortedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// comparing last modified dates (file vs map variable)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;else if( loggedLastDate &amp;&amp; fileLastModifiedDate(exportFilePath) &gt; loggedLastDate ) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def doContinue = continueDialog(mapCloseWithChangesMsg, MDHTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!doContinue){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(abortedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 5'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// close tempTargetMap if it is open
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(tempTargetMap){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tempTargetMap.close(true, false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//MindMap.close(force , allowInteraction)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// force - close map even if there are unsaved changes.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if (allowInteraction &amp;&amp; ! force) a saveAs dialog will be opened if there are unsaved changes.)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //(B)
    </p>
    <p>
      
    </p>
    <p>
      // 3. clone sourceMap --&gt; targetMap
    </p>
    <p>
      def sourceFile = sourceMap.file
    </p>
    <p>
      def targetFile = new File(exportFilePath)
    </p>
    <p>
      
    </p>
    <p>
      def targetMap = c.mapLoader(sourceFile)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.unsetMapLocation()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//.newMapLocation(targetFile)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//.saveAfterLoading()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withView()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.getMindMap()
    </p>
    <p>
      
    </p>
    <p>
      targetMap.evaluateOutdatedFormulas() //Quizás evaluateAllFormulas
    </p>
    <p>
      
    </p>
    <p>
      //targetMap.saveAs(targetFile) // ver si requiere interacción de usuario
    </p>
    <p>
      //targetMap.name = targetMap.name
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 4. get MDH style nodes from map
    </p>
    <p>
      def closure = {it.text in MdhStyleNames }
    </p>
    <p>
      def MdhStyleNodesInMap&nbsp;&nbsp;= us.getUserDefinedStylesParentNode(targetMap).children.findAll(closure)
    </p>
    <p>
      def MdhStyleNamesInMap&nbsp;&nbsp;= [] + MdhStyleNodesInMap*.text
    </p>
    <p>
      
    </p>
    <p>
      def stylesToProcess = listOfStylesToProcess.intersect(MdhStyleNamesInMap)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 5. process MDH nodes
    </p>
    <p>
      def nodosMDH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= targetMap.root.find{ it.style.name in stylesToProcess}
    </p>
    <p>
      def nodosPrincipales = nodosMDH.findAll{ n -&gt; !(n.pathToRoot - n)*.style*.name.any{it in stylesToProcess} }
    </p>
    <p>
      
    </p>
    <p>
      nodosPrincipales.each{ n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;removeMDHfromNode(n)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 6. delete MDH styles from map
    </p>
    <p>
      MdhStyleNodesInMap.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.delete()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      // 6.5. delete MDH variables from tragetMap
    </p>
    <p>
      targetMap.storage['mdhCleanMindmapExportDate'] = null
    </p>
    <p>
      targetMap.storage['mdhCleanMindmapPath']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= null
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 7. save targetMap
    </p>
    <p>
      targetMap.saveAs(targetFile)
    </p>
    <p>
      
    </p>
    <p>
      // 8. activates sourceMap
    </p>
    <p>
      //def sourceFile = sourceMap.file
    </p>
    <p>
      //c.mapLoader(sourceFile).withView().getMindMap()
    </p>
    <p>
      
    </p>
    <p>
      // 9. update map variables
    </p>
    <p>
      sourceMap.storage['mdhCleanMindmapPath'] = exportFilePath
    </p>
    <p>
      sourceMap.storage['mdhCleanMindmapExportDate'] = fileLastModifiedDate(exportFilePath)
    </p>
    <p>
      //ui.showMessage(exportFilePath,1)
    </p>
    <p>
      //ui.showMessage(fileLastModifiedDate(exportFilePath).toString(),1)
    </p>
    <p>
      sourceMap.save(true)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      return 'exito'
    </p>
    <p>
      
    </p>
    <p>
      // ----- Methods ---
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def continueDialog(msg, title){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ui.showConfirmDialog(null, msg, title, 2) == 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mapMustBeSaved(mapa){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(continueDialog( saveMapMessage, MDHTitle)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapa.save(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getIfMindMapOpen(path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.openMaps.find{it.file.canonicalPath == path}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// getting last modified date from file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def fileLastModifiedDate(filePath){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Path&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Paths.get(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BasicFileAttributes attr&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Files.readAttributes(file, BasicFileAttributes.class)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;&nbsp;attr.lastModifiedTime().toInstant().toDate()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def fileChooser(directory, proposedName, title){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def chooser = ui.newFileChooser(directory)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setFileFilter(new CaseSensitiveFileNameExtensionFilter('mm', textUtils.getText(&quot;mindmaps_desc&quot;)))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setAcceptAllFileFilterUsed(false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setSelectedFile(new File(proposedName))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setDialogTitle(title)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def resp = chooser.showSaveDialog(ui.frame)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def selectedFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if( resp == JFileChooser.APPROVE_OPTION){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = chooser.selectedFile.path
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = selectedFilePath.endsWith('.mm')? selectedFilePath : (selectedFilePath + '.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return selectedFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def doProposeName(mapa){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def withMDH = '-MDH.'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mapName = mapa.file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return mapName.contains(withMDH)?mapName.replace(withMDH, '.'): mapName.replace('.mm','_MdhRemoved.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def removeMDHfromNode(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mdText = n.note.plain
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.noteText = mdText
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.attributes.clear()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.style.name = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.noteContentType = 'markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.children*.delete()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      // region: --------------------------- help methods ------------------------
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getMapFromPath(filePath, withView){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(exists(filePath)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def m = c.mapLoader(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(withView) m.withView()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return m.getMindMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(String path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exists(new File(path))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(File file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.isFile()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      // end:
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="guarda versión actual de mapa" STYLE_REF="completedTask" FOLDED="true" ID="ID_1894600755" CREATED="1648486272685" MODIFIED="1648728146927">
<node TEXT="¿automáticamente o alerta si no se desea guardar antes?" ID="ID_658754252" CREATED="1648486293882" MODIFIED="1648486319753"/>
<node TEXT="guardar mapa" ID="ID_815639567" CREATED="1648726895375" MODIFIED="1648728038058"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      def nodo = node
    </p>
    <p>
      
    </p>
    <p>
      def saveMapMessage = 'Save map to continue?'
    </p>
    <p>
      def saveMapTitle&nbsp;&nbsp;&nbsp;= 'MarkdownHelper'
    </p>
    <p>
      def mapa = nodo.map
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(ui.showConfirmDialog(null, saveMapMessage, saveMapTitle, 2) == 0){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapa.save(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'no exitoso - abortar'
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      return 'exitoso'
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="revisar mapa con nombre alternativo" STYLE_REF="completedTask" FOLDED="true" ID="ID_1849418457" CREATED="1648486518999" MODIFIED="1648744667303" VGAP_QUANTITY="2 px">
<node TEXT="lógica" FOLDED="true" ID="ID_1173407360" CREATED="1648728232991" MODIFIED="1648728238566">
<node TEXT="obtener path/nombre de archivo alternativo" FOLDED="true" ID="ID_14110336" CREATED="1648728071622" MODIFIED="1648728112375">
<node TEXT="en propertie de mapa?" ID="ID_780602592" CREATED="1648728217596" MODIFIED="1648728227389"/>
<node TEXT="mdhFreeMindmapPath" FOLDED="true" ID="ID_1375062218" CREATED="1648729668539" MODIFIED="1648739452532"/>
</node>
<node TEXT="obtener fecha última exportación" FOLDED="true" ID="ID_1685631527" CREATED="1648729546911" MODIFIED="1648729560866">
<node TEXT="mdhFreeMindmapExportDate" FOLDED="true" ID="ID_460429995" CREATED="1648729668539" MODIFIED="1648739452501"/>
</node>
<node TEXT="ver si path ya está definido" FOLDED="true" ID="ID_1400740490" CREATED="1648728238566" MODIFIED="1648728253970">
<node TEXT="sí" FOLDED="true" ID="ID_364928456" CREATED="1648728253985" MODIFIED="1648728262484">
<node TEXT="existe?" FOLDED="true" ID="ID_959681663" CREATED="1648728337941" MODIFIED="1648728347724">
<node TEXT="sí" FOLDED="true" ID="ID_1944180925" CREATED="1648728347739" MODIFIED="1648728349606">
<node TEXT="mapa está abierto?" FOLDED="true" ID="ID_1915470796" CREATED="1648486331132" MODIFIED="1648486585321">
<node TEXT="si" FOLDED="true" ID="ID_355827048" CREATED="1648728864460" MODIFIED="1648728866982">
<node TEXT="mapa guardado?" FOLDED="true" ID="ID_508000668" CREATED="1648728955930" MODIFIED="1648728970677">
<node TEXT="no" ID="ID_1363574584" CREATED="1648728978011" MODIFIED="1678218951450">
<arrowlink SHAPE="EDGE_LIKE" DESTINATION="ID_801466806"/>
</node>
<node TEXT="sí" FOLDED="true" ID="ID_1840152802" CREATED="1648728975789" MODIFIED="1648729511815" VGAP_QUANTITY="2 px">
<node TEXT="mapa posee cambios posteriores a última exportación?" FOLDED="true" ID="ID_1807537364" CREATED="1648486632625" MODIFIED="1648729511800" HGAP_QUANTITY="44.6383 pt" VSHIFT_QUANTITY="37.53191 pt"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      según fecha última modificación
    </p>
  </body>
</html></richcontent>
<node TEXT="sí" FOLDED="true" ID="ID_772750670" CREATED="1648728643274" MODIFIED="1648729282265" VGAP_QUANTITY="2 px">
<node TEXT="mensaje: seguir?" FOLDED="true" ID="ID_801466806" CREATED="1648486667137" MODIFIED="1648729282265" HGAP_QUANTITY="21.65957 pt" VSHIFT_QUANTITY="-57.44681 pt">
<node TEXT="" ID="ID_740658795" CREATED="1648486716749" MODIFIED="1648486716752">
<hook NAME="FirstGroupNode"/>
</node>
<node TEXT="no" ID="ID_456258669" CREATED="1648486709364" MODIFIED="1648486711238"/>
<node TEXT="cancel" ID="ID_1452592825" CREATED="1648486711728" MODIFIED="1648486713861"/>
<node TEXT="" ID="ID_1306630552" CREATED="1648486716744" MODIFIED="1648486716748">
<hook NAME="SummaryNode"/>
<hook NAME="AlwaysUnfoldedNode"/>
<node TEXT="aborta con mensaje" ID="ID_1120257177" CREATED="1648486716755" MODIFIED="1648486731464"/>
</node>
<node TEXT="sí" ID="ID_286153509" CREATED="1648486672747" MODIFIED="1678218951450">
<arrowlink SHAPE="EDGE_LIKE" DESTINATION="ID_712334399"/>
</node>
</node>
</node>
<node TEXT="no" FOLDED="true" ID="ID_188722239" CREATED="1648728718700" MODIFIED="1648756760844" VGAP_QUANTITY="2 px">
<node TEXT="mapa está abierto?" FOLDED="true" ID="ID_712334399" CREATED="1648486331132" MODIFIED="1648756760838" HGAP_QUANTITY="183.49999 pt" VSHIFT_QUANTITY="2.25 pt">
<node TEXT="si" FOLDED="true" ID="ID_1566797239" CREATED="1648729386763" MODIFIED="1648729389297">
<node TEXT="cierra mapa" FOLDED="true" ID="ID_1395334396" CREATED="1648729331368" MODIFIED="1648729340445">
<node TEXT="continuar" ID="ID_1627059931" CREATED="1648728896922" MODIFIED="1648728927254" BACKGROUND_COLOR="#ccff99"/>
</node>
</node>
<node TEXT="no" FOLDED="true" ID="ID_1754867956" CREATED="1648729393357" MODIFIED="1648729394673">
<node TEXT="continuar" ID="ID_1144097152" CREATED="1648728896922" MODIFIED="1648728927254" BACKGROUND_COLOR="#ccff99"/>
</node>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="no" ID="ID_1798548751" CREATED="1648728867617" MODIFIED="1678218951450">
<arrowlink SHAPE="EDGE_LIKE" DESTINATION="ID_1807537364"/>
</node>
</node>
</node>
<node TEXT="no" FOLDED="true" ID="ID_1413732230" CREATED="1648728350761" MODIFIED="1648735068590" VGAP_QUANTITY="2 px">
<node TEXT="dialogo definir path/nombre" FOLDED="true" ID="ID_1887174415" CREATED="1648728540609" MODIFIED="1648744723441" HGAP_QUANTITY="105.91489 pt" VSHIFT_QUANTITY="19.14894 pt">
<node TEXT="continuar" ID="ID_1000819163" CREATED="1648728896922" MODIFIED="1648728927254" BACKGROUND_COLOR="#ccff99"/>
</node>
</node>
</node>
</node>
<node TEXT="no" FOLDED="true" ID="ID_97572578" CREATED="1648728270090" MODIFIED="1648728272627">
<node TEXT="generar path/nombre propuesto" STYLE_REF="completedTask" ID="ID_1911803432" CREATED="1648728272637" MODIFIED="1678218951450">
<arrowlink SHAPE="EDGE_LIKE" DESTINATION="ID_1887174415"/>
</node>
</node>
</node>
<node TEXT="continuar" FOLDED="true" ID="ID_39155101" CREATED="1648728896922" MODIFIED="1648728927254" BACKGROUND_COLOR="#ccff99">
<node TEXT="crear targetFile" ID="ID_368241717" CREATED="1648728463816" MODIFIED="1648728480407"/>
</node>
</node>
<node TEXT="revisar mapa exportado" ID="ID_1182004551" CREATED="1648739505733" MODIFIED="1648739525407"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import java.nio.file.Files
    </p>
    <p>
      import java.nio.file.Path
    </p>
    <p>
      import java.nio.file.Paths
    </p>
    <p>
      import java.nio.file.attribute.BasicFileAttributes
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def mapa = node.map
    </p>
    <p>
      // node.map.storage['mdhFreeMindmapExportDate'] = new Date()
    </p>
    <p>
      
    </p>
    <p>
      def exportFilePath = mapa.storage['mdhFreeMindmapPath']// = 'hhgf'
    </p>
    <p>
      def loggedLastDate = mapa.storage['mdhFreeMindmapExportDate']?.to?.date //= new Date()// = 'hhgf'
    </p>
    <p>
      
    </p>
    <p>
      //return lastDate &lt;= new Date()
    </p>
    <p>
      //exportFilePath = node.map.file.path //para probar isMindMapOpen
    </p>
    <p>
      
    </p>
    <p>
      if(!exportFilePath) return 'mapa no contiene variable exportFilePath. ir a fileChooser. Proponer nombre' //salta a (B)
    </p>
    <p>
      
    </p>
    <p>
      if(!exists(exportFilePath)) return 'no existe file en path exportFilePath. ir a fileChooser usando nombre exportFilePath y mensaje' //salta a (B)
    </p>
    <p>
      
    </p>
    <p>
      def openMap = getIfMindMapOpen(exportFilePath)
    </p>
    <p>
      def isSaved = !openMap ? true : openMap.saved
    </p>
    <p>
      
    </p>
    <p>
      if (!isSaved) return 'mensaje indicando que mapa está abierto y con cambios no guardados. continuar o abortar?' //si continua se salta la comparación de fechas. Salta a (A)
    </p>
    <p>
      
    </p>
    <p>
      // comparing last modified dates (file vs map variable)
    </p>
    <p>
      if(!loggedLastDate || fileLastModifiedDate(exportFilePath) &gt;loggedLastDate)return 'mensaje indicando que mapa tiene cambios posteriores a última exportación. continuar o abortar?'
    </p>
    <p>
      
    </p>
    <p>
      // (A)
    </p>
    <p>
      // cierra mapa si está abierto
    </p>
    <p>
      if(openMap){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;openMap.close(true, false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//MindMap.close(force , allowInteraction)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// force - close map even if there are unsaved changes.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if (allowInteraction &amp;&amp; ! force) a saveAs dialog will be opened if there are unsaved changes.)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //(B)
    </p>
    <p>
      def targetFile = new File(exportFilePath)
    </p>
    <p>
      
    </p>
    <p>
      //&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      // --- methods ---
    </p>
    <p>
      
    </p>
    <p>
      def getIfMindMapOpen(path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.openMaps.find{it.file.canonicalPath == path}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      // getting last modified date from file
    </p>
    <p>
      def fileLastModifiedDate(filePath){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;Path&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Paths.get(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;BasicFileAttributes attr&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Files.readAttributes(file, BasicFileAttributes.class)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;&nbsp;attr.lastModifiedTime().toInstant().toDate()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      // funciones dummy
    </p>
    <p>
      
    </p>
    <p>
      def exists(x){true}
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="dialogo definir path/nombre" ID="ID_153830507" CREATED="1648728540609" MODIFIED="1648744686289"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import javax.swing.JFileChooser;
    </p>
    <p>
      import org.freeplane.core.ui.CaseSensitiveFileNameExtensionFilter
    </p>
    <p>
      
    </p>
    <p>
      def proposedName
    </p>
    <p>
      if(!proposedName){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def withMDH = '-MDH.'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mapName = node.map.file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;proposedName = mapName.contains(withMDH)?mapName.replace(withMDH, '.'): mapName.replace('.mm','_MdhRemoved.mm')
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def chooser = ui.newFileChooser()//folderPath)
    </p>
    <p>
      
    </p>
    <p>
      chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES)
    </p>
    <p>
      chooser.setFileFilter(new CaseSensitiveFileNameExtensionFilter('mm', textUtils.getText(&quot;mindmaps_desc&quot;)))
    </p>
    <p>
      chooser.setAcceptAllFileFilterUsed(false)
    </p>
    <p>
      chooser.setSelectedFile(new File(proposedName))
    </p>
    <p>
      chooser.setDialogTitle(&quot;Save mindmap copy as 'MDH-Clean' mindmap&quot;)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //def resp = chooser.showDialog(ui.frame,'hola')
    </p>
    <p>
      def resp = chooser.showSaveDialog(ui.frame)
    </p>
    <p>
      
    </p>
    <p>
      def targetFile
    </p>
    <p>
      if( resp == JFileChooser.APPROVE_OPTION){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def selectedFilePath = chooser.selectedFile.path
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = selectedFilePath.endsWith('.mm')? selectedFilePath : (selectedFilePath + '.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;targetFile = new File (selectedFilePath)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      targetFile
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="clonar mapa activo para usarlo para las modificaciones" STYLE_REF="completedTask" FOLDED="true" ID="ID_140600179" CREATED="1648493627062" MODIFIED="1648495187722">
<node TEXT="clonar mapa activo" ID="ID_1492096557" CREATED="1648493290628" MODIFIED="1648744876340"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      def sourceMap = node.map
    </p>
    <p>
      
    </p>
    <p>
      def sourceFile = sourceMap.file
    </p>
    <p>
      
    </p>
    <p>
      def targetFile = new File('C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/targetMap.mm')
    </p>
    <p>
      //return targetFile.properties
    </p>
    <p>
      
    </p>
    <p>
      def myLoader = c.mapLoader(sourceFile)
    </p>
    <p>
      def targetMap = myLoader.unsetMapLocation().withView().getMindMap()
    </p>
    <p>
      
    </p>
    <p>
      targetMap.saveAs(targetFile) // ver si requiere interacción de usuario
    </p>
    <p>
      targetMap.name = 'Clonado'
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="crea lista con estilos MDH presentes en mapa" STYLE_REF="completedTask" FOLDED="true" ID="ID_763870247" CREATED="1648485011475" MODIFIED="1648741081382">
<node TEXT="get MDH style nodes from map" ID="ID_1161372559" CREATED="1648740292317" MODIFIED="1648741823085"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.pseudofreeplaneapi.UserStyles as us
    </p>
    <p>
      
    </p>
    <p>
      def listOfStylesToProcess = ['MarkdownHelperNode']
    </p>
    <p>
      def sourceMap = node.map
    </p>
    <p>
      def MdhStyleNames = 'MarkdownHelperNode,MarkdownHelperLink,MarkdownHelperPreview'.split(',')
    </p>
    <p>
      def closure = {it.text in MdhStyleNames }
    </p>
    <p>
      def MdhStyleNodesInMap = us.getUserDefinedStylesParentNode(sourceMap).children.findAll(closure)
    </p>
    <p>
      def MdhStyleNamesInMap&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= [] + MdhStyleNodesInMap*.text
    </p>
    <p>
      
    </p>
    <p>
      def stylesToProcess = listOfStylesToProcess.intersect(MdhStyleNamesInMap)
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="para cada estilo:" STYLE_REF="completedTask" FOLDED="true" ID="ID_1298437195" CREATED="1648485025920" MODIFIED="1648744590298">
<node TEXT="seleccionar nodos MDH a procesar" FOLDED="true" ID="ID_673854369" CREATED="1648742918887" MODIFIED="1648744575541"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      def targetMap = node.map //para pruebas
    </p>
    <p>
      
    </p>
    <p>
      targetMap.evaluateOutdatedFormulas() //Quizás ejecutar antes
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def stylesToProcess = ['MarkdownHelperNode']
    </p>
    <p>
      
    </p>
    <p>
      def nodos
    </p>
    <p>
      //stylesToProcess.each{mdhStyle -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodos = targetMap.root.find{ it.style.name in stylesToProcess}
    </p>
    <p>
      //}
    </p>
    <p>
      
    </p>
    <p>
      // return nodos.size()
    </p>
    <p>
      
    </p>
    <p>
      def nodosPrincipales = nodos.findAll{ n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;!(n.pathToRoot - n)*.style*.name.any{it in stylesToProcess}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //nodosPrincipales.size()
    </p>
    <p>
      c.select(nodosPrincipales)
    </p>
    <p>
      //return
    </p>
    <p>
      
    </p>
    <p>
      nodosPrincipales.each{ n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mdText = n.note.plain
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.noteText = mdText
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.attributes.clear()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.style.name = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.noteContentType = 'markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.children*.delete()
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="lista nodos con ese estilo" STYLE_REF="completedTask" ID="ID_1873194880" CREATED="1648485036065" MODIFIED="1648742097644"/>
<node TEXT="evitar conflicto de nodos MDH descendencia de otros nodos MDH&#xa;Si se elimina el superior, luego el loop presentará error cuando no encuentre al hijo" STYLE_REF="completedTask" FOLDED="true" ID="ID_969358177" CREATED="1648485210395" MODIFIED="1648742904583">
<node TEXT="alternativas" FOLDED="true" ID="ID_1672259950" CREATED="1648485286832" MODIFIED="1648485292026">
<node TEXT="ordenar nodos de mayor level a menor level." FOLDED="true" ID="ID_1691229684" CREATED="1648485293840" MODIFIED="1648485312582">
<node TEXT="esto asegura que vayan desapareciendo como nodos MDH aquellos que sean descendientes antes que sus padres, etc." ID="ID_658379512" CREATED="1648485312624" MODIFIED="1648485350761"/>
<node TEXT="poco eficiente pues los hace a todos, aunque se podría evitar aquellos que se van a eliminar igual" FOLDED="true" ID="ID_227109460" CREATED="1648485352723" MODIFIED="1648485397470">
<node TEXT="alternativa: si algún nodo en pathToRoot tiene estilo MDH --&gt; no hace nada" ID="ID_1977852517" CREATED="1648485762776" MODIFIED="1648485860121">
<icon BUILTIN="forward"/>
</node>
</node>
</node>
<node TEXT="equivalente" FOLDED="true" ID="ID_1564298014" CREATED="1648485464870" MODIFIED="1648485469230">
<node TEXT="filtrar a nodos que no posean un nodo con estilo MDH en su pathToRoot" ID="ID_1622701752" CREATED="1648485401228" MODIFIED="1648485854992">
<icon BUILTIN="forward"/>
</node>
<node TEXT="filtrar a nodos que no posean otro nodo del listado en su pathToRoot" ID="ID_298278713" CREATED="1648485401228" MODIFIED="1648485512235"/>
<node TEXT="filtrar a nodos que no sean descendientes de otro nodo del listado en su pathToRoot" ID="ID_1114707226" CREATED="1648485401228" MODIFIED="1648485561481"/>
</node>
<node TEXT="a clon de listado de nodos, para cada nodo, restarle los descendientes de ese nodo." ID="ID_1029431251" CREATED="1648485648826" MODIFIED="1648485719369"/>
</node>
</node>
<node TEXT="para cada nodo" STYLE_REF="completedTask" FOLDED="true" ID="ID_1031991805" CREATED="1648485063536" MODIFIED="1648744587034">
<node TEXT="transforma fórmula de nota a valor MD" ID="ID_1601235787" CREATED="1648485068715" MODIFIED="1648485111576"/>
<node TEXT="elimina sus nodos hijos (+ descendencia)" ID="ID_267673621" CREATED="1648485143811" MODIFIED="1648485181272"/>
</node>
</node>
</node>
<node TEXT="quita los estilos MDH del mapa" STYLE_REF="completedTask" FOLDED="true" ID="ID_1304643181" CREATED="1648147444379" MODIFIED="1648741195515">
<node TEXT="borrar estilos MDH en mapa" ID="ID_353774738" CREATED="1648741110698" MODIFIED="1648741188154"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      MdhStyleNodesInMap.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.delete()
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="guarda copia de mapa en ubicación /nombre alternativo" STYLE_REF="completedTask" FOLDED="true" ID="ID_822295842" CREATED="1648058718234" MODIFIED="1648495192870">
<node TEXT="targetMap.saveAs(targetFile)" ID="ID_48593533" CREATED="1648493909857" MODIFIED="1648493909857"/>
</node>
<node TEXT="reabre mapa original" STYLE_REF="completedTask" FOLDED="true" ID="ID_1253897857" CREATED="1648486908660" MODIFIED="1648495190568">
<node TEXT="prueba activar vista de otro mapa" ID="ID_231900039" CREATED="1648494199240" MODIFIED="1648495079581"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // prueba para activar vista de mapa
    </p>
    <p>
      Random random = new Random()
    </p>
    <p>
      
    </p>
    <p>
      def mapas = c.openMaps
    </p>
    <p>
      def i = random.nextInt(mapas.size())
    </p>
    <p>
      def otroMapa = mapas[i]
    </p>
    <p>
      
    </p>
    <p>
      //return otroMapa.name
    </p>
    <p>
      
    </p>
    <p>
      def sourceFile = otroMapa.file
    </p>
    <p>
      def mapa = c.mapLoader(sourceFile).withView().getMindMap()
    </p>
    <p>
      
    </p>
    <p>
      assert mapa.equals(otroMapa)
    </p>
    <p>
      
    </p>
    <p>
      mapa.name
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="actualizar en mapa original" STYLE_REF="completedTask" FOLDED="true" ID="ID_1036011368" CREATED="1648729646494" MODIFIED="1648767656646">
<node TEXT="en properties" ID="ID_1672926439" CREATED="1648739615474" MODIFIED="1648739619388"/>
<node ID="ID_1097330346" CONTENT_ID="ID_1375062218">
<node TEXT="guardar exportFilePath" STYLE_REF="completedTask" ID="ID_383586432" CREATED="1648739720997" MODIFIED="1648778516526"/>
</node>
<node ID="ID_1666024417" CONTENT_ID="ID_460429995">
<node TEXT="tomar date de archivo recién guardado para asegurar que son iguales" STYLE_REF="completedTask" ID="ID_1158364870" CREATED="1648739628662" MODIFIED="1648778516541"/>
</node>
</node>
</node>
<node TEXT="ver variables Map Storage de mapa" ID="ID_1738046090" CREATED="1605736466249" MODIFIED="1651846794084"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // muestra valores de map storage
    </p>
    <p>
      // ojo, en wikdshell el mapa 'map' no cambia al seleccionar un nodo en otro mapa
    </p>
    <p>
      // por eso acá uso node.map
    </p>
    <p>
      
    </p>
    <p>
      def texto = new StringBuilder()
    </p>
    <p>
      
    </p>
    <p>
      node.map.storage.keySet().sort().eachWithIndex{it, i -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def thisLineText = i + '.&nbsp;&nbsp;' + it.toString() + '&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;&nbsp;' + node.map.storage[it.toString()]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;texto &lt;&lt; '\n' &lt;&lt; thisLineText
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;println thisLineText
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //node.createChild(&quot;Result:\nthis map.storage variables&quot;).note = texto
    </p>
    <p>
      //return texto
    </p>
    <p>
      return
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="guardar mapa con MDH como mapa sin MDH v2" ID="ID_484129564" CREATED="1648750592753" MODIFIED="1678218951450">
<arrowlink DESTINATION="ID_1598966786" STARTINCLINATION="44.25 pt;3 pt;" ENDINCLINATION="53.25 pt;0 pt;"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import java.nio.file.Files
    </p>
    <p>
      import java.nio.file.Path
    </p>
    <p>
      import java.nio.file.Paths
    </p>
    <p>
      import java.nio.file.attribute.BasicFileAttributes
    </p>
    <p>
      
    </p>
    <p>
      import javax.swing.JFileChooser
    </p>
    <p>
      import org.freeplane.core.ui.CaseSensitiveFileNameExtensionFilter
    </p>
    <p>
      
    </p>
    <p>
      import edofro.pseudofreeplaneapi.UserStyles as us
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // properties
    </p>
    <p>
      saveMapMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Save map to continue?'
    </p>
    <p>
      MDHTitle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'MarkdownHelper'
    </p>
    <p>
      chooseFileTitle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;Save mindmap copy as 'MDH-Clean' mindmap&quot;
    </p>
    <p>
      chooseFileTitle2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;File not found - Save mindmap copy as 'MDH-Clean' mindmap&quot;
    </p>
    <p>
      mapNotSavedMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'The original map wasn\'t saved. Aborted'
    </p>
    <p>
      noExportFilePathMsg&nbsp;&nbsp;&nbsp;&nbsp;= 'No export file chosen. Aborted.'
    </p>
    <p>
      mapOpenWithChangesMsg&nbsp;&nbsp;= 'Export map is open and has unsaved changes. \nDo you want to lose that changes and overwrite it?'
    </p>
    <p>
      abortedMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ' Aborted '
    </p>
    <p>
      mapCloseWithChangesMsg = 'Export map has been modified after the previous export. \nDo you want to lose that changes and overwrite it?'
    </p>
    <p>
      noMdhMapMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Current mind map has no MDH styled nodes. Nothing to do. Aborted.'
    </p>
    <p>
      
    </p>
    <p>
      def listOfStylesToProcess = ['MarkdownHelperNode']
    </p>
    <p>
      def MdhStyleNames&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ['MarkdownHelperNode','MarkdownHelperLink','MarkdownHelperPreview']
    </p>
    <p>
      //return listOfStylesToProcess.class
    </p>
    <p>
      
    </p>
    <p>
      def nodo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= node
    </p>
    <p>
      def sourceMap = nodo.map
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //0. Look if Map is MDH&nbsp;
    </p>
    <p>
      def hasMDH = nodo.map.root.findAll().any{n-&gt; n.style.name in MdhStyleNames}
    </p>
    <p>
      if(!hasMDH){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noMdhMapMsg,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 0'
    </p>
    <p>
      }
    </p>
    <p>
      //return hasMDH
    </p>
    <p>
      
    </p>
    <p>
      //1. saves current map
    </p>
    <p>
      def isMapSaved = mapMustBeSaved(sourceMap)
    </p>
    <p>
      if(!isMapSaved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(mapNotSavedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 1'
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //2. gets exportFilePath
    </p>
    <p>
      def chooserDisplayed = false
    </p>
    <p>
      def exportFilePath = sourceMap.storage['mdhCleanMindmapPath']?.to?.string
    </p>
    <p>
      def loggedLastDate = sourceMap.storage['mdhCleanMindmapExportDate']?.to?.date
    </p>
    <p>
      if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def proposedName = doProposeName(sourceMap)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def directory = sourceMap.file.parentFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = fileChooser(directory, proposedName,chooseFileTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;chooserDisplayed = true
    </p>
    <p>
      }
    </p>
    <p>
      if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noExportFilePathMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 2'
    </p>
    <p>
      }
    </p>
    <p>
      def tempTargetFile = new File(exportFilePath)
    </p>
    <p>
      if(!chooserDisplayed) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = fileChooser(tempTargetFile.parentFile, tempTargetFile.name, chooseFileTitle2)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noExportFilePathMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 3'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      def tempTargetMap = getIfMindMapOpen(exportFilePath)
    </p>
    <p>
      def isSaved = !tempTargetMap ? true : tempTargetMap.saved
    </p>
    <p>
      if (!isSaved) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def doContinue = continueDialog(mapOpenWithChangesMsg, MDHTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!doContinue){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(abortedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      } else if( loggedLastDate &amp;&amp; fileLastModifiedDate(exportFilePath) &gt; loggedLastDate ) { // comparing last modified dates (file vs map variable)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def doContinue = continueDialog(mapCloseWithChangesMsg, MDHTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!doContinue){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(abortedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 5'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      // close tempTargetMap if it is open
    </p>
    <p>
      if(tempTargetMap){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tempTargetMap.close(true, false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//MindMap.close(force , allowInteraction)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// force - close map even if there are unsaved changes.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if (allowInteraction &amp;&amp; ! force) a saveAs dialog will be opened if there are unsaved changes.)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //(B)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 3. clone sourceMap --&gt; targetMap
    </p>
    <p>
      def sourceFile = sourceMap.file
    </p>
    <p>
      def targetFile = new File(exportFilePath)
    </p>
    <p>
      def targetMap = c.mapLoader(sourceFile)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.unsetMapLocation()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withView()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.getMindMap()
    </p>
    <p>
      targetMap.name = targetFile.name.dropRight(3)
    </p>
    <p>
      targetMap.evaluateOutdatedFormulas() //Quizás evaluateAllFormulas
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 3.5. delete MDH variables from tragetMap
    </p>
    <p>
      targetMap.storage['mdhCleanMindmapExportDate'] = null
    </p>
    <p>
      targetMap.storage['mdhCleanMindmapPath']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= null
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 4. get MDH style nodes from map
    </p>
    <p>
      def closure = {it.text in MdhStyleNames }
    </p>
    <p>
      def MdhStyleNodesInMap&nbsp;&nbsp;= us.getUserDefinedStylesParentNode(targetMap).children.findAll(closure)
    </p>
    <p>
      def MdhStyleNamesInMap&nbsp;&nbsp;= MdhStyleNodesInMap.collect{it.text}//.flatten()
    </p>
    <p>
      //return listOfStylesToProcess.intersect(MdhStyleNamesInMap)
    </p>
    <p>
      def stylesToProcess = listOfStylesToProcess.intersect(MdhStyleNamesInMap)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 5. process MDH nodes
    </p>
    <p>
      def nodosMDH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= targetMap.root.find{ it.style.name in stylesToProcess}
    </p>
    <p>
      def nodosPrincipales = nodosMDH.findAll{ n -&gt; !(n.pathToRoot - n)*.style*.name.any{it in stylesToProcess} }
    </p>
    <p>
      nodosPrincipales.each{ n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;removeMDHfromNode(n)
    </p>
    <p>
      }
    </p>
    <p>
      c.select(nodosPrincipales)
    </p>
    <p>
      
    </p>
    <p>
      // 5.5 clean other MDH styles
    </p>
    <p>
      def otherMdhStyles = (MdhStyleNames -&nbsp;&nbsp;listOfStylesToProcess).intersect(MdhStyleNamesInMap)
    </p>
    <p>
      nodosMDH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= targetMap.root.find{ it.style.name in otherMdhStyles}
    </p>
    <p>
      nodosMDH.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.style.name = null
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 6. delete MDH styles from map
    </p>
    <p>
      MdhStyleNodesInMap.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.delete()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 7. save targetMap
    </p>
    <p>
      targetMap.saveAs(targetFile)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 8. activates sourceMap
    </p>
    <p>
      //def sourceFile = sourceMap.file
    </p>
    <p>
      //c.mapLoader(sourceFile).withView().getMindMap()
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 9. update map variables
    </p>
    <p>
      sourceMap.storage['mdhCleanMindmapPath'] = exportFilePath
    </p>
    <p>
      sourceMap.storage['mdhCleanMindmapExportDate'] = format(fileLastModifiedDate(exportFilePath), &quot;yyyy-MM-dd HH:mm:ss.SSSZ&quot;).toString()
    </p>
    <p>
      sourceMap.save(true)
    </p>
    <p>
      
    </p>
    <p>
      ui.informationMessage('Ready!\n\ncopy of mindmap without MDH exported')
    </p>
    <p>
      return 'ok!!!'
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // ----- Methods ---
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def continueDialog(msg, title){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ui.showConfirmDialog(null, msg, title, 2) == 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mapMustBeSaved(mapa){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(continueDialog( saveMapMessage, MDHTitle)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapa.save(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getIfMindMapOpen(path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.openMaps.find{it.file?.canonicalPath == path}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// getting last modified date from file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def fileLastModifiedDate(filePath){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Path&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Paths.get(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BasicFileAttributes attr&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Files.readAttributes(file, BasicFileAttributes.class)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;&nbsp;attr.lastModifiedTime().toInstant().toDate()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def fileChooser(directory, proposedName, title){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def chooser = ui.newFileChooser(directory)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setFileFilter(new CaseSensitiveFileNameExtensionFilter('mm', textUtils.getText(&quot;mindmaps_desc&quot;)))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setAcceptAllFileFilterUsed(false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setSelectedFile(new File(proposedName))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setDialogTitle(title)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def resp = chooser.showSaveDialog(ui.frame)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def selectedFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if( resp == JFileChooser.APPROVE_OPTION){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = chooser.selectedFile.path
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = selectedFilePath.endsWith('.mm')? selectedFilePath : (selectedFilePath + '.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return selectedFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def doProposeName(mapa){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def withMDH = '-MDH.'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mapName = mapa.file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return mapName.contains(withMDH)?mapName.replace(withMDH, '.'): mapName.replace('.mm','_MdhRemoved.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def removeMDHfromNode(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mdText = n.note?.plain
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.noteText = mdText
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.attributes.clear()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.style.name = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.noteContentType = 'markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.children*.delete()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.icons.add('emoji-1F4D5')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // region: --------------------------- help methods ------------------------
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getMapFromPath(filePath, withView){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(exists(filePath)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def m = c.mapLoader(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(withView) m.withView()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return m.getMindMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(String path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exists(new File(path))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(File file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.isFile()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      // end:
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="guardar mapa con MDH como mapa sin MDH v3" ID="ID_1598966786" CREATED="1648750592753" MODIFIED="1651853437690" VSHIFT_QUANTITY="55.14894 pt">
<icon BUILTIN="forward"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import java.nio.file.Files
    </p>
    <p>
      import java.nio.file.Path
    </p>
    <p>
      import java.nio.file.Paths
    </p>
    <p>
      import java.nio.file.attribute.BasicFileAttributes
    </p>
    <p>
      
    </p>
    <p>
      import javax.swing.JFileChooser
    </p>
    <p>
      import org.freeplane.core.ui.CaseSensitiveFileNameExtensionFilter
    </p>
    <p>
      
    </p>
    <p>
      import edofro.pseudofreeplaneapi.UserStyles as us
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.features.map.MapController
    </p>
    <p>
      import org.freeplane.features.map.MapModel
    </p>
    <p>
      import org.freeplane.features.map.mindmapmode.MMapController;
    </p>
    <p>
      import org.freeplane.features.map.mindmapmode.MMapModel;
    </p>
    <p>
      
    </p>
    <p>
      // properties
    </p>
    <p>
      saveMapMessage&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Save map to continue?'
    </p>
    <p>
      MDHTitle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'MarkdownHelper'
    </p>
    <p>
      chooseFileTitle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;Save mindmap copy as 'MDH-Clean' mindmap&quot;
    </p>
    <p>
      chooseFileTitle2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= &quot;Save mindmap copy as 'MDH-Clean' mindmap&quot;
    </p>
    <p>
      mapNotSavedMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'The original map wasn\'t saved. Aborted'
    </p>
    <p>
      noExportFilePathMsg&nbsp;&nbsp;&nbsp;&nbsp;= 'No export file chosen. Aborted.'
    </p>
    <p>
      mapOpenWithChangesMsg&nbsp;&nbsp;= 'Export map is open and has unsaved changes. \nDo you want to lose that changes and overwrite it?'
    </p>
    <p>
      abortedMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ' Aborted '
    </p>
    <p>
      mapCloseWithChangesMsg = 'Export map has been modified after the previous export. \nDo you want to lose that changes and overwrite it?'
    </p>
    <p>
      noMdhMapMsg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= 'Current mind map has no MDH styled nodes. Nothing to do. Aborted.'
    </p>
    <p>
      
    </p>
    <p>
      def listOfStylesToProcess = ['MarkdownHelperNode']
    </p>
    <p>
      def MdhStyleNames&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ['MarkdownHelperNode','MarkdownHelperLink','MarkdownHelperPreview']
    </p>
    <p>
      //return listOfStylesToProcess.class
    </p>
    <p>
      
    </p>
    <p>
      def nodo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= node
    </p>
    <p>
      def sourceMap = nodo.map
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //0. Look if Map is MDH
    </p>
    <p>
      def hasMDH = nodo.map.root.findAll().any{n-&gt; n.style.name in MdhStyleNames}
    </p>
    <p>
      if(!hasMDH){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noMdhMapMsg,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 0'
    </p>
    <p>
      }
    </p>
    <p>
      //return hasMDH
    </p>
    <p>
      
    </p>
    <p>
      //1. saves current map
    </p>
    <p>
      def isMapSaved = mapMustBeSaved(sourceMap)
    </p>
    <p>
      if(!isMapSaved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(mapNotSavedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 1'
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //2. gets exportFilePath
    </p>
    <p>
      def chooserDisplayed = false
    </p>
    <p>
      def exportFilePath = sourceMap.storage['mdhCleanMindmapPath']?.to?.string
    </p>
    <p>
      def loggedLastDate = sourceMap.storage['mdhCleanMindmapExportDate']
    </p>
    <p>
      loggedLastDate = (loggedLastDate &amp;&amp; loggedLastDate.isDate())?loggedLastDate.to.date:null
    </p>
    <p>
      
    </p>
    <p>
      if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def proposedName = doProposeName(sourceMap)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def directory = sourceMap.file.parentFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = fileChooser(directory, proposedName,chooseFileTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;chooserDisplayed = true
    </p>
    <p>
      }
    </p>
    <p>
      if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noExportFilePathMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 2'
    </p>
    <p>
      }
    </p>
    <p>
      def tempTargetFile = new File(exportFilePath)
    </p>
    <p>
      if(!chooserDisplayed) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;exportFilePath = fileChooser(tempTargetFile.parentFile, tempTargetFile.name, chooseFileTitle2)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!exportFilePath) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(noExportFilePathMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 3'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      def tempTargetMap = getIfMindMapOpen(exportFilePath)
    </p>
    <p>
      def isSaved = !tempTargetMap ? true : tempTargetMap.saved
    </p>
    <p>
      if (!isSaved) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def doContinue = continueDialog(mapOpenWithChangesMsg, MDHTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!doContinue){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(abortedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      } else if( loggedLastDate &amp;&amp; fileLastModifiedDate(exportFilePath) &gt; loggedLastDate ) { // comparing last modified dates (file vs map variable)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def doContinue = continueDialog(mapCloseWithChangesMsg, MDHTitle)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!doContinue){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ui.showMessage(abortedMsg,0)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'aborted: 5'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      // close tempTargetMap if it is open
    </p>
    <p>
      if(tempTargetMap){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tempTargetMap.close(true, false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//MindMap.close(force , allowInteraction)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// force - close map even if there are unsaved changes.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if (allowInteraction &amp;&amp; ! force) a saveAs dialog will be opened if there are unsaved changes.)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //(B)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 3. clone sourceMap --&gt; targetMap
    </p>
    <p>
      def sourceFile = sourceMap.file
    </p>
    <p>
      def targetFile = new File(exportFilePath)
    </p>
    <p>
      def targetMap = c.mapLoader(sourceFile).newMapLocation(targetFile)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//.saveAfterLoading()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//.withView() // make all changes not visible
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.getMindMap()
    </p>
    <p>
      targetMap.evaluateOutdatedFormulas() //Quizás evaluateAllFormulas
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 3.5. delete MDH variables from targetMap
    </p>
    <p>
      targetMap.storage['mdhCleanMindmapExportDate'] = null
    </p>
    <p>
      targetMap.storage['mdhCleanMindmapPath']&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= null
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 4. get MDH style nodes from map
    </p>
    <p>
      def closure = {it.text in MdhStyleNames }
    </p>
    <p>
      def MdhStyleNodesInMap&nbsp;&nbsp;= us.getUserDefinedStylesParentNode(targetMap).children.findAll(closure)
    </p>
    <p>
      def MdhStyleNamesInMap&nbsp;&nbsp;= MdhStyleNodesInMap.collect{it.text}//.flatten()
    </p>
    <p>
      //return listOfStylesToProcess.intersect(MdhStyleNamesInMap)
    </p>
    <p>
      def stylesToProcess = listOfStylesToProcess.intersect(MdhStyleNamesInMap)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 5. process MDH nodes
    </p>
    <p>
      def nodosMDH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= targetMap.root.find{ it.style.name in stylesToProcess}
    </p>
    <p>
      def nodosPrincipales = nodosMDH.findAll{ n -&gt; !(n.pathToRoot - n)*.style*.name.any{it in stylesToProcess} }
    </p>
    <p>
      nodosPrincipales.each{ n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;removeMDHfromNode(n)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 5.5 clean other MDH styles
    </p>
    <p>
      def otherMdhStyles = (MdhStyleNames -&nbsp;&nbsp;listOfStylesToProcess).intersect(MdhStyleNamesInMap)
    </p>
    <p>
      nodosMDH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= targetMap.root.find{ it.style.name in otherMdhStyles}
    </p>
    <p>
      nodosMDH.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.style.name = null
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 6. delete MDH styles from map
    </p>
    <p>
      MdhStyleNodesInMap.each{n -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;n.delete()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 8. activates sourceMap
    </p>
    <p>
      //def sourceFile = sourceMap.file
    </p>
    <p>
      //c.mapLoader(sourceFile).withView().getMindMap()
    </p>
    <p>
      
    </p>
    <p>
      // 9. targetMap visible
    </p>
    <p>
      targetMap.modeController.mapController.createMapView(targetMap.delegate)
    </p>
    <p>
      
    </p>
    <p>
      //targetMap.modeController.visible = true //createMapView((MapModel) targetMap.delegate )
    </p>
    <p>
      
    </p>
    <p>
      //return targetMap.delegate
    </p>
    <p>
      
    </p>
    <p>
      //targetMap = c.mapLoader(targetFile.toURL())
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.saveAfterLoading()
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withView()
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.getMindMap()
    </p>
    <p>
      
    </p>
    <p>
      // targetMap.name = targetFile.name.dropRight(3)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 7. save targetMap
    </p>
    <p>
      try{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;edofro.MapSavingOptions.MSO.saveMap(targetMap)
    </p>
    <p>
      }
    </p>
    <p>
      catch(e){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;targetMap.save(true)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      c.select(nodosPrincipales)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // 10. update map variables
    </p>
    <p>
      sourceMap.storage['mdhCleanMindmapPath'] = exportFilePath
    </p>
    <p>
      sourceMap.storage['mdhCleanMindmapExportDate'] = format(fileLastModifiedDate(exportFilePath), &quot;yyyy-MM-dd HH:mm:ss.SSSZ&quot;).toString()
    </p>
    <p>
      
    </p>
    <p>
      try{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;edofro.MapSavingOptions.MSO.saveMap(sourceMap)
    </p>
    <p>
      }
    </p>
    <p>
      catch(e){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;sourceMap.save(true)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      ui.informationMessage('Ready!\n\ncopy of mindmap without MDH exported')
    </p>
    <p>
      return 'ok!!!'
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // ----- Methods ---
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def continueDialog(msg, title){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ui.showConfirmDialog(null, msg, title, 2) == 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mapMustBeSaved(mapa){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(continueDialog( saveMapMessage, MDHTitle)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapa.save(true)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!mapa.saved){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getIfMindMapOpen(path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.openMaps.find{it.file?.canonicalPath == path}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// getting last modified date from file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def fileLastModifiedDate(filePath){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Path file&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Paths.get(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!file.toFile().isFile()) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BasicFileAttributes attr&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;&nbsp;&nbsp;Files.readAttributes(file, BasicFileAttributes.class)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;&nbsp;&nbsp;attr?.lastModifiedTime().toInstant().toDate()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def fileChooser(directory, proposedName, title){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def chooser = ui.newFileChooser(directory)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setFileFilter(new CaseSensitiveFileNameExtensionFilter('mm', textUtils.getText(&quot;mindmaps_desc&quot;)))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setAcceptAllFileFilterUsed(false)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setSelectedFile(new File(proposedName))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chooser.setDialogTitle(title)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def resp = chooser.showSaveDialog(ui.frame)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def selectedFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if( resp == JFileChooser.APPROVE_OPTION){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = chooser.selectedFile.path
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selectedFilePath = selectedFilePath.endsWith('.mm')? selectedFilePath : (selectedFilePath + '.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return selectedFilePath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def doProposeName(mapa){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def withMDH = '-MDH.'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mapName = mapa.file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return mapName.contains(withMDH)?mapName.replace(withMDH, '.'): mapName.replace('.mm','_MdhRemoved.mm')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def removeMDHfromNode(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def mdText = n.note?.plain
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.noteText = mdText
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.attributes.clear()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.style.name = null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.noteContentType = 'markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.children*.delete()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n.icons.add('emoji-1F4D5')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // region: --------------------------- help methods ------------------------
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getMapFromPath(filePath, withView){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(exists(filePath)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def m = c.mapLoader(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(withView) m.withView()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return m.getMindMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(String path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exists(new File(path))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(File file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.isFile()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      // end:
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Add it to add-on" STYLE_REF="completedTask" ID="ID_818309405" CREATED="1648496103737" MODIFIED="1651980861866"/>
<node TEXT="save copy maps without modification dates" STYLE_REF="completedTask" FOLDED="true" ID="ID_1142563521" CREATED="1651851472083" MODIFIED="1651852871921">
<attribute NAME="projectCode" VALUE="save.copy.maps.without.modi.date"/>
<node TEXT="I did it calling my addon for map saving options" ID="ID_251800918" CREATED="1651852672467" MODIFIED="1651852732650"/>
<node TEXT="test if it has problems when the library is not present" STYLE_REF="completedTask" FOLDED="true" ID="ID_1264356805" CREATED="1651852734681" MODIFIED="1651980923050">
<node TEXT="add the library to the addon?" ID="ID_1392403422" CREATED="1651852764219" MODIFIED="1651852778269"/>
</node>
</node>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_236547955" CREATED="1658705010307" MODIFIED="1658705505193">
<node TEXT="call it with dialog button" STYLE_REF="maybeTask" ID="ID_1208230392" CREATED="1651851441512" MODIFIED="1658112534393"/>
</node>
<node TEXT="put script into addon" ID="ID_185187764" CREATED="1651851339917" MODIFIED="1651980892323">
<node TEXT="add it to library" STYLE_REF="completedTask" ID="ID_1134490445" CREATED="1651851358039" MODIFIED="1651980876521"/>
<node TEXT="call it with menu command" STYLE_REF="completedTask" ID="ID_492843839" CREATED="1651851419232" MODIFIED="1651980881588"/>
</node>
</node>
<node TEXT="MDH v0.1.4" STYLE_REF="milestone" ID="ID_891028831" CREATED="1658704975010" MODIFIED="1658705505177"/>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_824707740" CREATED="1658705010307" MODIFIED="1658705505193"/>
<node TEXT="MDH F2" STYLE_REF="milestone" ID="ID_468069410" CREATED="1658705021227" MODIFIED="1658705505193"/>
<node TEXT="MDH F3" STYLE_REF="milestone" ID="ID_1588667640" CREATED="1658705027560" MODIFIED="1658705505193"/>
<node TEXT="MDH F4" STYLE_REF="milestone" ID="ID_1803691360" CREATED="1658705033445" MODIFIED="1658705505208"/>
<node TEXT="MDH F5" STYLE_REF="milestone" ID="ID_182292376" CREATED="1658705038637" MODIFIED="1658705505208"/>
</node>
</node>
<node TEXT="pseudofreeplaneapi" ID="ID_315810200" CREATED="1651938860205" MODIFIED="1651939237985"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      package
    </p>
  </body>
</html></richcontent>
<node TEXT="UserStyles.groovy" ID="ID_869547723" CREATED="1647518831571" MODIFIED="1678219438278" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/src/main/groovy/UserStyles.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:39" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:39-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="6.194" OBJECT="org.freeplane.features.format.FormattedNumber|6194|#,##0"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="build" STYLE_REF="missing" ID="ID_1140850939" CREATED="1616167740197" MODIFIED="1678218785334" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build">
<attribute NAME="lastModifiedTime" VALUE="15-04-21 17:29" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-15T17:29-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 18:30" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:30-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="18-03-21 15:26" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-18T15:26-0300|datetime"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="classes" STYLE_REF="missing" ID="ID_197939755" CREATED="1616167740197" MODIFIED="1678218785336" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build/classes">
<attribute NAME="lastModifiedTime" VALUE="15-04-21 17:29" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-15T17:29-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 18:30" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:30-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="15-04-21 17:29" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-15T17:29-0400|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="groovy" STYLE_REF="missing" ID="ID_906130126" CREATED="1651938857533" MODIFIED="1678218785339" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build/classes/groovy">
<attribute NAME="lastModifiedTime" VALUE="12-03-22 11:33" OBJECT="org.freeplane.features.format.FormattedDate|2022-03-12T11:33-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 18:30" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:30-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="15-04-21 17:29" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-15T17:29-0400|datetime"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="main" STYLE_REF="missing" ID="ID_750302356" CREATED="1651938857574" MODIFIED="1678219438287" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build/classes/groovy/main">
<attribute NAME="lastModifiedTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 18:30" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:30-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="12-03-22 11:33" OBJECT="org.freeplane.features.format.FormattedDate|2022-03-12T11:33-0300|datetime"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="edofro" STYLE_REF="missing" ID="ID_539808919" CREATED="1651938857589" MODIFIED="1678219438295" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build/classes/groovy/main/edofro">
<attribute NAME="lastModifiedTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 18:30" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:30-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="MarkDownHelper" STYLE_REF="missing" ID="ID_505096739" CREATED="1651938857643" MODIFIED="1678219438304" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build/classes/groovy/main/edofro/MarkDownHelper/">
<attribute NAME="lastModifiedTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="49.152" OBJECT="org.freeplane.features.format.FormattedNumber|49152|#,##0"/>
</node>
<node TEXT="pseudofreeplaneapi" STYLE_REF="missing" ID="ID_246653501" CREATED="1651938860205" MODIFIED="1678219438312" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build/classes/groovy/main/edofro/pseudofreeplaneapi/">
<attribute NAME="lastModifiedTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="tmp" STYLE_REF="missing" ID="ID_62072781" CREATED="1616167740197" MODIFIED="1678218785347" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build/tmp">
<attribute NAME="lastModifiedTime" VALUE="15-04-21 17:30" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-15T17:30-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 18:30" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:30-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="18-03-21 17:25" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-18T17:25-0300|datetime"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="jar" STYLE_REF="missing" ID="ID_1556013594" CREATED="1651938860314" MODIFIED="1678219425134" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build/tmp/jar/">
<attribute NAME="lastModifiedTime" VALUE="15-04-21 17:30" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-15T17:30-0400|datetime"/>
<attribute NAME="lastAccessTime" VALUE="06-08-22 16:29" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T16:29-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="15-04-21 17:30" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-15T17:30-0400|datetime"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
</node>
</node>
</node>
<node TEXT="lib" STYLE_REF="file_folder" ID="ID_1627739415" CREATED="1616167740197" MODIFIED="1678219438321" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/lib/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:40" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:40-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:40" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:40-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="MarkdownHelper.jar" ID="ID_1570772617" CREATED="1616167740197" MODIFIED="1678219425215" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/lib/MarkdownHelper.jar">
<attribute NAME="lastModifiedTime" VALUE="06-08-22 18:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:21-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:40" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:40-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="294.420" OBJECT="org.freeplane.features.format.FormattedNumber|294420|#,##0"/>
</node>
<node TEXT="jsoup-1.10.2.jar" ID="ID_1190794477" CREATED="1640358597634" MODIFIED="1678219425240" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/lib/jsoup-1.10.2.jar">
<attribute NAME="lastModifiedTime" VALUE="12-09-21 19:13" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-12T19:13-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:40" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:40-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="350.645" OBJECT="org.freeplane.features.format.FormattedNumber|350645|#,##0"/>
</node>
<node TEXT="markedj-1.0.16.jar" ID="ID_1904737866" CREATED="1640358597665" MODIFIED="1678219425265" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/lib/markedj-1.0.16.jar">
<attribute NAME="lastModifiedTime" VALUE="12-09-21 19:13" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-12T19:13-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:40" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:40-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="38.515" OBJECT="org.freeplane.features.format.FormattedNumber|38515|#,##0"/>
</node>
</node>
</node>
<node TEXT="scripts" STYLE_REF="file_folder" ID="ID_316909758" CREATED="1616167740197" MODIFIED="1678219438331" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/scripts/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<attribute NAME="projectCode" VALUE="scripts"/>
<node TEXT="pasar texto a nota e indicar formato Markdown" ID="ID_510793540" CREATED="1616167740197" MODIFIED="1678218951450">
<arrowlink DESTINATION="ID_159268536" MIDDLE_LABEL="lo usé acá"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // import org.freeplane.features.text.TextController
    </p>
    <p>
      import org.freeplane.features.note.NoteController
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def nodos = c.selecteds
    </p>
    <p>
      
    </p>
    <p>
      nodos.each{nodo -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.note = nodo.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;setNoteMarkdown(nodo)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def setNoteMarkdown(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return NoteController.getController().setNoteContentType(n.delegate, 'markdown')
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="showMarkdownHelperDialog.groovy" ID="ID_892952386" CREATED="1616167740197" MODIFIED="1678219438333" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/scripts/showMarkdownHelperDialog.groovy"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownDialog
    </p>
    <p>
      
    </p>
    <p>
      MarkdownDialog.showDialog()
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="74" OBJECT="org.freeplane.features.format.FormattedNumber|74|#,##0"/>
</node>
<node TEXT="rebuildMarkdownHelperDialog.groovy" ID="ID_966171318" CREATED="1616167740197" MODIFIED="1678219438341" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/scripts/rebuildMarkdownHelperDialog.groovy"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownDialog
    </p>
    <p>
      
    </p>
    <p>
      MarkdownDialog.showDialog(true)
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="78" OBJECT="org.freeplane.features.format.FormattedNumber|78|#,##0"/>
</node>
<node TEXT="showLinkedImageAsDetails.groovy" ID="ID_1209261530" CREATED="1616167740198" MODIFIED="1678219438348" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/scripts/showLinkedImageAsDetails.groovy"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      c.selecteds.findAll{it.link?true:false}.each{nodo -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.detailsText = '=&quot;![](${node.link.uri})&quot;'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.detailsContentType ='markdown'
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="149" OBJECT="org.freeplane.features.format.FormattedNumber|149|#,##0"/>
</node>
<node TEXT="showLinkedImageAsNote.groovy" ID="ID_1284250003" CREATED="1616167740198" MODIFIED="1678219438355" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/scripts/showLinkedImageAsNote.groovy"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      c.selecteds.each{nodo -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.noteText = '=&quot;![](${node.link.uri})&quot;'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.noteContentType ='markdown'
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="113" OBJECT="org.freeplane.features.format.FormattedNumber|113|#,##0"/>
</node>
<node TEXT="showPreviewPanel.groovy" ID="ID_82695335" CREATED="1640281396681" MODIFIED="1678219438364" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/scripts/showPreviewPanel.groovy"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="82" OBJECT="org.freeplane.features.format.FormattedNumber|82|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownPreview
    </p>
    <p>
      
    </p>
    <p>
      MarkdownPreview.showMDHPreview()
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="importMDHStyles.groovy" ID="ID_607208878" CREATED="1647518943993" MODIFIED="1678219438371" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/scripts/importMDHStyles.groovy">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.480" OBJECT="org.freeplane.features.format.FormattedNumber|1480|#,##0"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.pseudofreeplaneapi.UserStyles as us
    </p>
    <p>
      
    </p>
    <p>
      //region: opens template map
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def sep&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= File.separator
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def userDir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= c.userDirectory.path
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mapFileName = &quot;MarkdownHelper template.mm&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def pathName&nbsp;&nbsp;&nbsp;&nbsp;= userDir + sep + &quot;templates&quot; + sep + &quot;MarkdownHelper&quot; + sep + mapFileName
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def sourceMap&nbsp;&nbsp;&nbsp;= getMapFromPath(pathName, false) //usar mapa indicado (pero oculto)
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def targetMap = node.map&nbsp;&nbsp;// --&gt; active map
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;us.copyUserStyles(sourceMap, targetMap)
    </p>
    <p>
      
    </p>
    <p>
      //Other use case examples on how to use edofro.pseudofreeplaneapi.UserStyles.copyUserStyles
    </p>
    <p>
      /*
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def myString = 'ToM_goto'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def myList = 'ToM_nextPage,ToM_goto,ToM_showNode'.split(',')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def myClosure =&nbsp;&nbsp;{it.text.contains('u')}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def myClosure2 =&nbsp;&nbsp;{it.text.startsWith('ToM_')}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;us.copyUserStyles(sourceMap, targetMap, myString)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;us.copyUserStyles(sourceMap, targetMap, myList)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;us.copyUserStyles(sourceMap, targetMap, myClosure)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;us.copyUserStyles(sourceMap, targetMap, myClosure2)
    </p>
    <p>
      */
    </p>
    <p>
      
    </p>
    <p>
      // end:
    </p>
    <p>
      
    </p>
    <p>
      // region: --------------------------- help methods ------------------------
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def getMapFromPath(filePath, withView){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(exists(filePath)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def m = c.mapLoader(filePath)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(withView) m.withView()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return m.getMindMap()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(String path){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exists(new File(path))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def exists(File file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.isFile()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      // end:
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="saveAsMDHCleanMindmap.groovy" ID="ID_1236061268" CREATED="1651975144426" MODIFIED="1678219438378" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/scripts/saveAsMDHCleanMindmap.groovy"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="81" OBJECT="org.freeplane.features.format.FormattedNumber|81|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MdhCleaner as mc
    </p>
    <p>
      
    </p>
    <p>
      mc.saveAsMdhCleanMap(node.map)
    </p>
  </body>
</html></richcontent>
</node>
<node ID="ID_315206420" CONTENT_ID="ID_1494263781">
<node ID="ID_1616677812" CONTENT_ID="ID_957460396"/>
<node ID="ID_1632296009" CONTENT_ID="ID_1698925764"/>
</node>
<node TEXT="hacer que se pueda navegar por dialogo con flechas" STYLE_REF="completedTask" FOLDED="true" ID="ID_165815732" CREATED="1616458068413" MODIFIED="1623451212963">
<node TEXT="prueba navegar dialogo con flechas" ID="ID_1445422021" CREATED="1616458087834" MODIFIED="1616458502869"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      
    </p>
    <p>
      def dialogName = 'MarkDownHelperDialog'
    </p>
    <p>
      def dialogo = UITools.frame.ownedWindows.find{it.name == dialogName &amp;&amp; it.type.toString()=='NORMAL'}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // esta parte guardarla como variables del dialogo para que no deba recalcularlo todas las veces
    </p>
    <p>
      
    </p>
    <p>
      botones = []
    </p>
    <p>
      
    </p>
    <p>
      traerBotones(dialogo.contentPane)
    </p>
    <p>
      def traerBotones(c){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.components.each{comp -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(comp instanceof JButton){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;botones &lt;&lt; comp
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (comp.componentCount &gt;0){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;traerBotones(comp)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def Y =&nbsp;&nbsp;botones.locationOnScreen.y
    </p>
    <p>
      def X =&nbsp;&nbsp;botones.locationOnScreen.x
    </p>
    <p>
      
    </p>
    <p>
      //----- seleccionar siguiente botón hacia abajo ----
    </p>
    <p>
      
    </p>
    <p>
      def botonSeleccionado = dialogo.mostRecentFocusOwner
    </p>
    <p>
      def yS = botonSeleccionado.locationOnScreen.y
    </p>
    <p>
      def xS = botonSeleccionado.locationOnScreen.x
    </p>
    <p>
      
    </p>
    <p>
      def nextY = Y.findAll{it&gt;yS}.min()
    </p>
    <p>
      def botonesBajoSeleccionado = botones.findAll{ it.locationOnScreen.y == nextY}
    </p>
    <p>
      def botonAbajo = botonesBajoSeleccionado.sort{Math.abs(it.locationOnScreen.x - xS)}[0]
    </p>
    <p>
      
    </p>
    <p>
      botonAbajo?.requestFocus()
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="prueba navegar dialogo con flechas" ID="ID_1996874925" CREATED="1616458087834" MODIFIED="1616460194700"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      
    </p>
    <p>
      def dialogName = 'MarkDownHelperDialog'
    </p>
    <p>
      def dialogo = UITools.frame.ownedWindows.find{it.name == dialogName &amp;&amp; it.type.toString()=='NORMAL'}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // esta parte guardarla como variables del dialogo para que no deba recalcularlo todas las veces
    </p>
    <p>
      ArrayList X
    </p>
    <p>
      ArrayList Y
    </p>
    <p>
      ArrayList botones = []
    </p>
    <p>
      
    </p>
    <p>
      botones.addAll(traerBotones(dialogo.contentPane))
    </p>
    <p>
      
    </p>
    <p>
      def traerBotones(c){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def bots = []
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.components.each{comp -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(comp instanceof JButton){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bots &lt;&lt; comp
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (comp.componentCount &gt;0){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bots.addAll(traerBotones(comp))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return bots
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      Y =&nbsp;&nbsp;botones.locationOnScreen.y
    </p>
    <p>
      X =&nbsp;&nbsp;botones.locationOnScreen.x
    </p>
    <p>
      
    </p>
    <p>
      //----- seleccionar siguiente botón hacia abajo ----
    </p>
    <p>
      
    </p>
    <p>
      def botonSeleccionado = dialogo.mostRecentFocusOwner
    </p>
    <p>
      def yS = botonSeleccionado.locationOnScreen.y
    </p>
    <p>
      def xS = botonSeleccionado.locationOnScreen.x
    </p>
    <p>
      
    </p>
    <p>
      def nextY = Y.findAll{it&gt;yS}.min()
    </p>
    <p>
      // def nY = Y.count{it==nextY}
    </p>
    <p>
      
    </p>
    <p>
      def botonesBajoSeleccionado = botones.findAll{ it.locationOnScreen.y == nextY}
    </p>
    <p>
      def botonAbajo = botonesBajoSeleccionado.sort{Math.abs(it.locationOnScreen.x - xS)}[0]
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      botonAbajo?.requestFocus()
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="navegar dialogo con flechas y escape action" ID="ID_707569519" CREATED="1616502111862" MODIFIED="1616510246283"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.event.ActionEvent
    </p>
    <p>
      import java.awt.event.KeyEvent
    </p>
    <p>
      //import javax.swing.AbstractAction
    </p>
    <p>
      //import javax.swing.KeyStroke
    </p>
    <p>
      
    </p>
    <p>
      def dialogName = 'MarkDownHelperDialog'
    </p>
    <p>
      def myDialog = UITools.frame.ownedWindows.find{it.name == dialogName &amp;&amp; it.type.toString()=='NORMAL'}
    </p>
    <p>
      
    </p>
    <p>
      addArrowMoves(myDialog)
    </p>
    <p>
      addEscapeAction(myDialog)
    </p>
    <p>
      
    </p>
    <p>
      //---methods---
    </p>
    <p>
      
    </p>
    <p>
      def addArrowMoves(dialogo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// get all the dialog's buttons
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def buttons = getButtons(dialogo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// and their coordinates
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def Y =&nbsp;&nbsp;buttons.locationOnScreen.y
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def X =&nbsp;&nbsp;buttons.locationOnScreen.x
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//assign key stroke actions for each button in dialog
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;buttons.each{myButton -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//getting the coordinates of the button
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def yS = myButton.locationOnScreen.y
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def xS = myButton.locationOnScreen.x
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//getting the buttons next to it
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nextPos&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//--Up
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextPos = Y.findAll{ it &lt; yS }.max()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnUP&nbsp;&nbsp;&nbsp;&nbsp;= buttons.findAll{ it.locationOnScreen.y == nextPos}.sort{Math.abs(it.locationOnScreen.x - xS)}[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//--Right
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextPos = X.findAll{ it &gt; xS }.min()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnRIGHT = buttons.findAll{ it.locationOnScreen.x == nextPos}.sort{Math.abs(it.locationOnScreen.y - yS)}[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//--Down
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextPos = Y.findAll{ it &gt; yS }.min()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnDOWN&nbsp;&nbsp;= buttons.findAll{ it.locationOnScreen.y == nextPos}.sort{Math.abs(it.locationOnScreen.x - xS)}[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//--Left
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nextPos = X.findAll{ it &lt; xS }.max()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttnLEFT&nbsp;&nbsp;= buttons.findAll{ it.locationOnScreen.x == nextPos}.sort{Math.abs(it.locationOnScreen.y - yS)}[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//adding the arrow movements for the button
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMove( myButton, bttnUP&nbsp;&nbsp;&nbsp;&nbsp;, KeyEvent.VK_UP&nbsp;&nbsp;&nbsp;&nbsp;,'moveUp'&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMove( myButton, bttnRIGHT , KeyEvent.VK_RIGHT ,'moveRight')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMove( myButton, bttnDOWN&nbsp;&nbsp;, KeyEvent.VK_DOWN&nbsp;&nbsp;,'moveDown' )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;addArrowMove( myButton, bttnLEFT&nbsp;&nbsp;, KeyEvent.VK_LEFT&nbsp;&nbsp;,'moveLeft' )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      &nbsp;&nbsp;
    </p>
    <p>
      def addArrowMove(compFrom, compTo, keyStroke, actionName){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!compTo) return
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;compFrom.getInputMap().put(KeyStroke.getKeyStroke(keyStroke, 0), actionName);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;compFrom.getActionMap().put(actionName, new AbstractAction() {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override public void actionPerformed(ActionEvent e) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compTo.requestFocus();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;})
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //getting all the buttons of the dialog recursivelly&nbsp;
    </p>
    <p>
      def getButtons(c){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def bots = []
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.components.each{comp -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(comp instanceof JButton){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bots &lt;&lt; comp
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (comp.componentCount &gt;0){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bots.addAll(getButtons(comp))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return bots
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def addEscapeAction(dialogo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo.contentPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), &quot;escape&quot;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo.contentPane.getActionMap().put(&quot;escape&quot;, new AbstractAction() {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override public void actionPerformed(ActionEvent e) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogo.dispose();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;})
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="previewPanel" STYLE_REF="Organizador" FOLDED="true" ID="ID_624896888" CREATED="1640275192236" MODIFIED="1640275201167">
<node TEXT="apagar listeners MDH" ID="ID_1331143240" CREATED="1640293228975" MODIFIED="1640444421095"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.tutorialomatic.ToM_ui&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as tomui
    </p>
    <p>
      import edofro.tutorialomatic.ToM&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as tom
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.features.map.INodeSelectionListener;
    </p>
    <p>
      import org.freeplane.features.map.INodeChangeListener
    </p>
    <p>
      import org.freeplane.features.map.NodeChangeEvent
    </p>
    <p>
      import org.freeplane.features.map.NodeModel;
    </p>
    <p>
      import org.freeplane.features.mode.Controller;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools as ui;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mapController = Controller.currentModeController.mapController;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def listenerFound = false;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def chgListeners = mapController.nodeChangeListeners.findAll { it.class.name.endsWith('MDHNodeChangeListener') }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//return chgListeners
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;chgListeners.each {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapController.removeNodeChangeListener(it);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listenerFound = true;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.informationMessage(&quot;nodeChangeListeners found: $listenerFound&quot;.toString())
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;listenerFound = false;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;(mapController.nodeSelectionListeners.findAll { it.class.name.endsWith('MDHSelectionListener') }).each {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapController.removeNodeSelectionListener(it);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listenerFound = true;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.informationMessage(&quot;nodeSelectionListeners found: $listenerFound&quot;.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ui.informationMessage(&quot;listeners deactivated&quot;.toString())
    </p>
    <p>
      
    </p>
    <p>
      return
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="showPreviewPanel.groovy" ID="ID_1178803335" CREATED="1640281396681" MODIFIED="1640452636912"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownPreview
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      
    </p>
    <p>
      def MDHPreviewDialog = UITools.frame.ownedWindows.find{ it.name == MarkdownPreview.dialogName }
    </p>
    <p>
      
    </p>
    <p>
      //return MDHPreviewDialog
    </p>
    <p>
      
    </p>
    <p>
      def mdhpvw
    </p>
    <p>
      if (MDHPreviewDialog){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;MDHPreviewDialog.show()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;MDHPreviewDialog.bounds =&nbsp;&nbsp;MDHPreviewDialog.graphicsConfiguration.bounds
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return MDHPreviewDialog.graphicsConfiguration.properties
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;mdhpvw = new MarkdownPreview()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'build'
    </p>
    <p>
      }
    </p>
    <p>
      return mdhpvw
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_1808623557" CREATED="1658705010307" MODIFIED="1658705505193">
<node TEXT="crear comando openSampleMap.groovy." STYLE_REF="maybeTask" ID="ID_488887857" CREATED="1616167740206" MODIFIED="1658112524609"/>
</node>
</node>
<node TEXT="zips" STYLE_REF="file_folder" FOLDED="true" ID="ID_851356335" CREATED="1616167740198" MODIFIED="1678219438395" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/" VGAP_QUANTITY="2 px">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<attribute NAME="projectCode" VALUE="zips"/>
<node TEXT="doc" STYLE_REF="file_folder" FOLDED="true" ID="ID_706265861" CREATED="1616167740198" MODIFIED="1678219438397" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/doc/">
<attribute NAME="lastModifiedTime" VALUE="14-05-21 11:10" OBJECT="org.freeplane.features.format.FormattedDate|2021-05-14T11:10-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<attribute NAME="projectCode" VALUE="doc"/>
<node TEXT="MarkdownHelper" STYLE_REF="file_folder" ID="ID_359797027" CREATED="1616167740198" MODIFIED="1678219425742" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/doc/MarkdownHelper/">
<attribute NAME="lastModifiedTime" VALUE="18-03-21 17:31" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-18T17:31-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
</node>
</node>
<node TEXT="templates" STYLE_REF="file_folder" ID="ID_425520203" CREATED="1616616553828" MODIFIED="1678219438404" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/templates/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<attribute NAME="projectCode" VALUE="templates"/>
<node TEXT="MarkdownHelper" STYLE_REF="file_folder" ID="ID_421924887" CREATED="1616616590643" MODIFIED="1678219438412" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/templates/MarkdownHelper/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="MarkdownHelper template.mm" ID="ID_417393927" CREATED="1616167740190" MODIFIED="1678219438420" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/templates/MarkdownHelper/MarkdownHelper%20template.mm">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="5.067" OBJECT="org.freeplane.features.format.FormattedNumber|5067|#,##0"/>
<attribute NAME="projectCode" VALUE="Markdo.Helper.templa.mm"/>
<node TEXT="MDH F3" STYLE_REF="milestone" ID="ID_619336608" CREATED="1658705027560" MODIFIED="1658705505193">
<node TEXT="Agregar SVG de template" STYLE_REF="maybeTask" ID="ID_157778010" CREATED="1620224156879" MODIFIED="1658112509914"/>
</node>
</node>
</node>
</node>
<node TEXT="icons" STYLE_REF="file_folder" FOLDED="true" ID="ID_866035933" CREATED="1618265767118" MODIFIED="1678219438427" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/" VGAP_QUANTITY="2 px">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="8.192" OBJECT="org.freeplane.features.format.FormattedNumber|8192|#,##0"/>
<attribute NAME="projectCode" VALUE="icons"/>
<node TEXT="MarkdownHelper" STYLE_REF="file_folder" FOLDED="true" ID="ID_425231768" CREATED="1618285928985" MODIFIED="1678219438435" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="buletted.svg" ID="ID_463312880" CREATED="1618522409837" MODIFIED="1678219438443" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/buletted.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="296" OBJECT="org.freeplane.features.format.FormattedNumber|296|#,##0"/>
</node>
<node TEXT="centered.svg" ID="ID_1920546621" CREATED="1618522409845" MODIFIED="1678219438451" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/centered.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="317" OBJECT="org.freeplane.features.format.FormattedNumber|317|#,##0"/>
</node>
<node TEXT="completed.svg" ID="ID_1137531570" CREATED="1618522409853" MODIFIED="1678219438458" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/completed.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="511" OBJECT="org.freeplane.features.format.FormattedNumber|511|#,##0"/>
</node>
<node TEXT="copyPlain.svg" ID="ID_562555144" CREATED="1618522409861" MODIFIED="1678219438466" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/copyPlain.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.209" OBJECT="org.freeplane.features.format.FormattedNumber|2209|#,##0"/>
</node>
<node TEXT="doNotEnter.svg" ID="ID_444461999" CREATED="1618522409869" MODIFIED="1678219438473" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/doNotEnter.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="312" OBJECT="org.freeplane.features.format.FormattedNumber|312|#,##0"/>
</node>
<node TEXT="dontLook.svg" ID="ID_555678323" CREATED="1618522409877" MODIFIED="1678219438480" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/dontLook.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="5.513" OBJECT="org.freeplane.features.format.FormattedNumber|5513|#,##0"/>
</node>
<node TEXT="help.svg" ID="ID_1576721712" CREATED="1618522409886" MODIFIED="1678219438488" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/help.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="412" OBJECT="org.freeplane.features.format.FormattedNumber|412|#,##0"/>
</node>
<node TEXT="isTask.svg" ID="ID_1772425945" CREATED="1618522409894" MODIFIED="1678219438495" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/isTask.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="432" OBJECT="org.freeplane.features.format.FormattedNumber|432|#,##0"/>
</node>
<node TEXT="leaf.svg" ID="ID_1166657083" CREATED="1618522409904" MODIFIED="1678219438503" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/leaf.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.135" OBJECT="org.freeplane.features.format.FormattedNumber|1135|#,##0"/>
</node>
<node TEXT="linked.svg" ID="ID_444431978" CREATED="1618522409912" MODIFIED="1678219438511" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/linked.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="526" OBJECT="org.freeplane.features.format.FormattedNumber|526|#,##0"/>
</node>
<node TEXT="newLine.svg" ID="ID_899431366" CREATED="1618522409921" MODIFIED="1678219438519" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/newLine.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="375" OBJECT="org.freeplane.features.format.FormattedNumber|375|#,##0"/>
</node>
<node TEXT="numbered.svg" ID="ID_257099774" CREATED="1618522409930" MODIFIED="1678219438526" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/numbered.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.566" OBJECT="org.freeplane.features.format.FormattedNumber|1566|#,##0"/>
</node>
<node TEXT="pin.svg" ID="ID_155734215" CREATED="1618522409939" MODIFIED="1678219438534" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/pin.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="344" OBJECT="org.freeplane.features.format.FormattedNumber|344|#,##0"/>
</node>
<node TEXT="right.svg" ID="ID_1610323995" CREATED="1618522409948" MODIFIED="1678219438541" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/right.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="269" OBJECT="org.freeplane.features.format.FormattedNumber|269|#,##0"/>
</node>
<node TEXT="save.svg" ID="ID_1924253774" CREATED="1618522409957" MODIFIED="1678219438548" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/save.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="406" OBJECT="org.freeplane.features.format.FormattedNumber|406|#,##0"/>
</node>
<node TEXT="toDocAndBack.svg" ID="ID_1588121141" CREATED="1618522409965" MODIFIED="1678219438556" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/toDocAndBack.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.689" OBJECT="org.freeplane.features.format.FormattedNumber|1689|#,##0"/>
</node>
<node TEXT="patchAttributes.svg" ID="ID_64466256" CREATED="1618698721396" MODIFIED="1678219438563" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/patchAttributes.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.306" OBJECT="org.freeplane.features.format.FormattedNumber|1306|#,##0"/>
</node>
<node TEXT="textBlockParam.svg" ID="ID_973376776" CREATED="1619305739737" MODIFIED="1678219438570" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/textBlockParam.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.354" OBJECT="org.freeplane.features.format.FormattedNumber|1354|#,##0"/>
</node>
<node TEXT="wiki.svg" ID="ID_902336884" CREATED="1622039345666" MODIFIED="1678219438578" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/wiki.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.422" OBJECT="org.freeplane.features.format.FormattedNumber|1422|#,##0"/>
</node>
<node TEXT="MarkdownHelper-icon.svg" ID="ID_1170080312" CREATED="1640445494393" MODIFIED="1678219438586" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/MarkdownHelper/MarkdownHelper-icon.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.287" OBJECT="org.freeplane.features.format.FormattedNumber|2287|#,##0"/>
</node>
</node>
<node TEXT="xxx" FOLDED="true" ID="ID_1995867383" CREATED="1618266895651" MODIFIED="1638203692008"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import org.freeplane.core.util.MenuUtils
    </p>
    <p>
      
    </p>
    <p>
      def nodo=node
    </p>
    <p>
      
    </p>
    <p>
      ArrayList tbIcons&nbsp;&nbsp;&nbsp;= ['RemoveIcon_0_Action', 'RemoveIconAction', 'RemoveAllIconsAction', 'IconAction.emoji-1F343', 'IconAction.emoji-1F648', 'IconAction.emoji-26D4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-1F522', 'IconAction.emoji-1F537', 'IconAction.emoji-27A1', 'IconAction.emoji-2194', 'IconAction.emoji-21A9'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-2714', 'IconAction.emoji-1F532']
    </p>
    <p>
      
    </p>
    <p>
      def icono = MenuUtils.getMenuItemIcon(tbIcons[3])
    </p>
    <p>
      
    </p>
    <p>
      //return icono
    </p>
    <p>
      
    </p>
    <p>
      /*
    </p>
    <p>
      result =&nbsp;&nbsp;icono.class.methods*.name*.toString().unique().collect{limpiaMethod(it)}.join('\n')
    </p>
    <p>
      nodo.createChild('icono methods').note = result
    </p>
    <p>
      // */
    </p>
    <p>
      
    </p>
    <p>
      /*
    </p>
    <p>
      result =&nbsp;&nbsp;icono.imageIcon.class.methods*.name*.toString().unique().collect{limpiaMethod(it)}.join('\n')
    </p>
    <p>
      nodo.createChild('icono.imageIcon methods').note = result
    </p>
    <p>
      // */
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;/*
    </p>
    <p>
      result =&nbsp;&nbsp;icono.imageIcon.image.class.methods*.name*.toString().unique().collect{limpiaMethod(it)}.join('\n')
    </p>
    <p>
      nodo.createChild('icono.imageIcon.image methods').note = result
    </p>
    <p>
      // */
    </p>
    <p>
      &nbsp;/*
    </p>
    <p>
      result =&nbsp;&nbsp;icono.imageIcon.svgUniverse.class.methods*.name*.toString().unique().collect{limpiaMethod(it)}.join('\n')
    </p>
    <p>
      nodo.createChild('icono.imageIcon.svgUniverse methods').note = result
    </p>
    <p>
      // */
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def svgUri =&nbsp;&nbsp;icono.imageIcon.svgURI
    </p>
    <p>
      //return svgUri//.class
    </p>
    <p>
      
    </p>
    <p>
      def svgElement = icono.imageIcon.svgUniverse.getElement(svgUri)//.class
    </p>
    <p>
      //return svgElement//.class
    </p>
    <p>
      
    </p>
    <p>
      def svgDiagram = icono.imageIcon.svgUniverse.getDiagram(svgUri)//.class
    </p>
    <p>
      //return svgDiagram//.class
    </p>
    <p>
      
    </p>
    <p>
      svgElement.class.methods*.name
    </p>
    <p>
      
    </p>
    <p>
      def limpiaMethod(a){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return a
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def i = a.indexOf('(')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def j = a[0..i].lastIndexOf('.')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return a[j..-1]
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="result" ID="ID_1169169800" CREATED="1618267359030" MODIFIED="1618267386475"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .getImage()
    </p>
    <p>
      .setPreferredSize(java.awt.Dimension)
    </p>
    <p>
      .getIconHeight()
    </p>
    <p>
      .getIconWidth()
    </p>
    <p>
      .paintIcon(java.awt.Component,java.awt.Graphics,int,int)
    </p>
    <p>
      .getPreferredSize()
    </p>
    <p>
      .removePropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      .addPropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      .setAutosize(int)
    </p>
    <p>
      .setAntiAlias(boolean)
    </p>
    <p>
      .setSvgURI(java.net.URI)
    </p>
    <p>
      .isScaleToFit()
    </p>
    <p>
      .setClipToViewbox(boolean)
    </p>
    <p>
      .getAutosize()
    </p>
    <p>
      .setInterpolation(int)
    </p>
    <p>
      .getInterpolation()
    </p>
    <p>
      .isClipToViewbox()
    </p>
    <p>
      .setScaleToFit(boolean)
    </p>
    <p>
      .getSvgURI()
    </p>
    <p>
      .getUseAntiAlias()
    </p>
    <p>
      .getAntiAlias()
    </p>
    <p>
      .getSvgUniverse()
    </p>
    <p>
      .setSvgUniverse(com.kitfox.svg.SVGUniverse)
    </p>
    <p>
      .setUseAntiAlias(boolean)
    </p>
    <p>
      .getIconHeightIgnoreAutosize()
    </p>
    <p>
      .getIconWidthIgnoreAutosize()
    </p>
    <p>
      .setSvgResourcePath(java.lang.String)
    </p>
    <p>
      .toString()
    </p>
    <p>
      .getDescription()
    </p>
    <p>
      .setDescription(java.lang.String)
    </p>
    <p>
      .getAccessibleContext()
    </p>
    <p>
      .getImageLoadStatus()
    </p>
    <p>
      .getImageObserver()
    </p>
    <p>
      .setImage(java.awt.Image)
    </p>
    <p>
      .setImageObserver(java.awt.image.ImageObserver)
    </p>
    <p>
      .wait() throws java.lang.InterruptedException
    </p>
    <p>
      .wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      .wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      .equals(java.lang.Object)
    </p>
    <p>
      .hashCode()
    </p>
    <p>
      .getClass()
    </p>
    <p>
      .notify()
    </p>
    <p>
      .notifyAll()
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="result" ID="ID_726964092" CREATED="1618268781250" MODIFIED="1618268787783"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      public java.awt.Image com.kitfox.svg.app.beans.SVGIcon.getImage()
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setPreferredSize(java.awt.Dimension)
    </p>
    <p>
      public int com.kitfox.svg.app.beans.SVGIcon.getIconHeight()
    </p>
    <p>
      public int com.kitfox.svg.app.beans.SVGIcon.getIconWidth()
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.paintIcon(java.awt.Component,java.awt.Graphics,int,int)
    </p>
    <p>
      public java.awt.Dimension com.kitfox.svg.app.beans.SVGIcon.getPreferredSize()
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.removePropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.addPropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setAutosize(int)
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setAntiAlias(boolean)
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setSvgURI(java.net.URI)
    </p>
    <p>
      public boolean com.kitfox.svg.app.beans.SVGIcon.isScaleToFit()
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setClipToViewbox(boolean)
    </p>
    <p>
      public int com.kitfox.svg.app.beans.SVGIcon.getAutosize()
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setInterpolation(int)
    </p>
    <p>
      public int com.kitfox.svg.app.beans.SVGIcon.getInterpolation()
    </p>
    <p>
      public boolean com.kitfox.svg.app.beans.SVGIcon.isClipToViewbox()
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setScaleToFit(boolean)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.app.beans.SVGIcon.getSvgURI()
    </p>
    <p>
      public boolean com.kitfox.svg.app.beans.SVGIcon.getUseAntiAlias()
    </p>
    <p>
      public boolean com.kitfox.svg.app.beans.SVGIcon.getAntiAlias()
    </p>
    <p>
      public com.kitfox.svg.SVGUniverse com.kitfox.svg.app.beans.SVGIcon.getSvgUniverse()
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setSvgUniverse(com.kitfox.svg.SVGUniverse)
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setUseAntiAlias(boolean)
    </p>
    <p>
      public int com.kitfox.svg.app.beans.SVGIcon.getIconHeightIgnoreAutosize()
    </p>
    <p>
      public int com.kitfox.svg.app.beans.SVGIcon.getIconWidthIgnoreAutosize()
    </p>
    <p>
      public void com.kitfox.svg.app.beans.SVGIcon.setSvgResourcePath(java.lang.String)
    </p>
    <p>
      public java.lang.String javax.swing.ImageIcon.toString()
    </p>
    <p>
      public java.lang.String javax.swing.ImageIcon.getDescription()
    </p>
    <p>
      public void javax.swing.ImageIcon.setDescription(java.lang.String)
    </p>
    <p>
      public javax.accessibility.AccessibleContext javax.swing.ImageIcon.getAccessibleContext()
    </p>
    <p>
      public int javax.swing.ImageIcon.getImageLoadStatus()
    </p>
    <p>
      public java.awt.image.ImageObserver javax.swing.ImageIcon.getImageObserver()
    </p>
    <p>
      public void javax.swing.ImageIcon.setImage(java.awt.Image)
    </p>
    <p>
      public void javax.swing.ImageIcon.setImageObserver(java.awt.image.ImageObserver)
    </p>
    <p>
      public final void java.lang.Object.wait() throws java.lang.InterruptedException
    </p>
    <p>
      public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      public boolean java.lang.Object.equals(java.lang.Object)
    </p>
    <p>
      public native int java.lang.Object.hashCode()
    </p>
    <p>
      public final native java.lang.Class java.lang.Object.getClass()
    </p>
    <p>
      public final native void java.lang.Object.notify()
    </p>
    <p>
      public final native void java.lang.Object.notifyAll()
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="result" ID="ID_1067326846" CREATED="1618269044600" MODIFIED="1618269088287"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      public int org.freeplane.core.ui.svgicons.CachingIcon.getIconHeight()
    </p>
    <p>
      public int org.freeplane.core.ui.svgicons.CachingIcon.getIconWidth()
    </p>
    <p>
      public void org.freeplane.core.ui.svgicons.CachingIcon.paintIcon(java.awt.Component,java.awt.Graphics,int,int)
    </p>
    <p>
      public javax.swing.ImageIcon org.freeplane.core.ui.svgicons.CachingIcon.getImageIcon()
    </p>
    <p>
      public final void java.lang.Object.wait() throws java.lang.InterruptedException
    </p>
    <p>
      public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      public boolean java.lang.Object.equals(java.lang.Object)
    </p>
    <p>
      public java.lang.String java.lang.Object.toString()
    </p>
    <p>
      public native int java.lang.Object.hashCode()
    </p>
    <p>
      public final native java.lang.Class java.lang.Object.getClass()
    </p>
    <p>
      public final native void java.lang.Object.notify()
    </p>
    <p>
      public final native void java.lang.Object.notifyAll()
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="result" FOLDED="true" ID="ID_1161356170" CREATED="1618270062420" MODIFIED="1618270108764"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      public void com.kitfox.svg.SVGUniverse.clear()
    </p>
    <p>
      public com.kitfox.svg.SVGUniverse com.kitfox.svg.SVGUniverse.duplicate() throws java.io.IOException,java.lang.ClassNotFoundException
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.updateTime() throws com.kitfox.svg.SVGException
    </p>
    <p>
      public com.kitfox.svg.Font com.kitfox.svg.SVGUniverse.getFont(java.lang.String)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.removePropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.addPropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URI)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URI,boolean)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URL)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.net.URL)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.net.URL,boolean)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.Reader,java.lang.String,boolean)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.Reader,java.lang.String)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.InputStream,java.lang.String,boolean) throws java.io.IOException
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.InputStream,java.lang.String) throws java.io.IOException
    </p>
    <p>
      public com.kitfox.svg.SVGDiagram com.kitfox.svg.SVGUniverse.getDiagram(java.net.URI)
    </p>
    <p>
      public com.kitfox.svg.SVGDiagram com.kitfox.svg.SVGUniverse.getDiagram(java.net.URI,boolean)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.removeDocument(java.net.URI)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.getStreamBuiltURI(java.lang.String)
    </p>
    <p>
      public boolean com.kitfox.svg.SVGUniverse.isVerbose()
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.setCurTime(double)
    </p>
    <p>
      public double com.kitfox.svg.SVGUniverse.getCurTime()
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.setVerbose(boolean)
    </p>
    <p>
      public com.kitfox.svg.Font com.kitfox.svg.SVGUniverse.getDefaultFont()
    </p>
    <p>
      public java.util.ArrayList com.kitfox.svg.SVGUniverse.getLoadedDocumentURIs()
    </p>
    <p>
      public final void java.lang.Object.wait() throws java.lang.InterruptedException
    </p>
    <p>
      public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      public boolean java.lang.Object.equals(java.lang.Object)
    </p>
    <p>
      public java.lang.String java.lang.Object.toString()
    </p>
    <p>
      public native int java.lang.Object.hashCode()
    </p>
    <p>
      public final native java.lang.Class java.lang.Object.getClass()
    </p>
    <p>
      public final native void java.lang.Object.notify()
    </p>
    <p>
      public final native void java.lang.Object.notifyAll()
    </p>
  </body>
</html></richcontent>
<node TEXT="result" ID="ID_1327508578" CREATED="1618270180471" MODIFIED="1618270181314"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      public void com.kitfox.svg.SVGUniverse.clear()
    </p>
    <p>
      public com.kitfox.svg.SVGUniverse com.kitfox.svg.SVGUniverse.duplicate() throws java.io.IOException,java.lang.ClassNotFoundException
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.updateTime() throws com.kitfox.svg.SVGException
    </p>
    <p>
      public com.kitfox.svg.Font com.kitfox.svg.SVGUniverse.getFont(java.lang.String)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.removePropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.addPropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URI)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URI,boolean)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URL)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.net.URL)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.net.URL,boolean)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.Reader,java.lang.String,boolean)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.Reader,java.lang.String)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.InputStream,java.lang.String,boolean) throws java.io.IOException
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.InputStream,java.lang.String) throws java.io.IOException
    </p>
    <p>
      public com.kitfox.svg.SVGDiagram com.kitfox.svg.SVGUniverse.getDiagram(java.net.URI)
    </p>
    <p>
      public com.kitfox.svg.SVGDiagram com.kitfox.svg.SVGUniverse.getDiagram(java.net.URI,boolean)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.removeDocument(java.net.URI)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.getStreamBuiltURI(java.lang.String)
    </p>
    <p>
      public boolean com.kitfox.svg.SVGUniverse.isVerbose()
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.setCurTime(double)
    </p>
    <p>
      public double com.kitfox.svg.SVGUniverse.getCurTime()
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.setVerbose(boolean)
    </p>
    <p>
      public com.kitfox.svg.Font com.kitfox.svg.SVGUniverse.getDefaultFont()
    </p>
    <p>
      public java.util.ArrayList com.kitfox.svg.SVGUniverse.getLoadedDocumentURIs()
    </p>
    <p>
      public final void java.lang.Object.wait() throws java.lang.InterruptedException
    </p>
    <p>
      public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      public boolean java.lang.Object.equals(java.lang.Object)
    </p>
    <p>
      public java.lang.String java.lang.Object.toString()
    </p>
    <p>
      public native int java.lang.Object.hashCode()
    </p>
    <p>
      public final native java.lang.Class java.lang.Object.getClass()
    </p>
    <p>
      public final native void java.lang.Object.notify()
    </p>
    <p>
      public final native void java.lang.Object.notifyAll()
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="result" ID="ID_1476943246" CREATED="1638201972604" MODIFIED="1638202009734"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      public void com.kitfox.svg.SVGUniverse.clear()
    </p>
    <p>
      public com.kitfox.svg.SVGUniverse com.kitfox.svg.SVGUniverse.duplicate() throws java.io.IOException,java.lang.ClassNotFoundException
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.updateTime() throws com.kitfox.svg.SVGException
    </p>
    <p>
      public com.kitfox.svg.Font com.kitfox.svg.SVGUniverse.getFont(java.lang.String)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.removePropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.addPropertyChangeListener(java.beans.PropertyChangeListener)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URI)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URI,boolean)
    </p>
    <p>
      public com.kitfox.svg.SVGElement com.kitfox.svg.SVGUniverse.getElement(java.net.URL)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.net.URL)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.net.URL,boolean)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.Reader,java.lang.String,boolean)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.Reader,java.lang.String)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.InputStream,java.lang.String,boolean) throws java.io.IOException
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.loadSVG(java.io.InputStream,java.lang.String) throws java.io.IOException
    </p>
    <p>
      public com.kitfox.svg.SVGDiagram com.kitfox.svg.SVGUniverse.getDiagram(java.net.URI)
    </p>
    <p>
      public com.kitfox.svg.SVGDiagram com.kitfox.svg.SVGUniverse.getDiagram(java.net.URI,boolean)
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.removeDocument(java.net.URI)
    </p>
    <p>
      public java.net.URI com.kitfox.svg.SVGUniverse.getStreamBuiltURI(java.lang.String)
    </p>
    <p>
      public com.kitfox.svg.Font com.kitfox.svg.SVGUniverse.getDefaultFont()
    </p>
    <p>
      public java.util.ArrayList com.kitfox.svg.SVGUniverse.getLoadedDocumentURIs()
    </p>
    <p>
      public double com.kitfox.svg.SVGUniverse.getCurTime()
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.setCurTime(double)
    </p>
    <p>
      public boolean com.kitfox.svg.SVGUniverse.isVerbose()
    </p>
    <p>
      public void com.kitfox.svg.SVGUniverse.setVerbose(boolean)
    </p>
    <p>
      public final void java.lang.Object.wait() throws java.lang.InterruptedException
    </p>
    <p>
      public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      public boolean java.lang.Object.equals(java.lang.Object)
    </p>
    <p>
      public java.lang.String java.lang.Object.toString()
    </p>
    <p>
      public native int java.lang.Object.hashCode()
    </p>
    <p>
      public final native java.lang.Class java.lang.Object.getClass()
    </p>
    <p>
      public final native void java.lang.Object.notify()
    </p>
    <p>
      public final native void java.lang.Object.notifyAll()
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="icono methods" ID="ID_1112113733" CREATED="1638202527999" MODIFIED="1638202627584"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      getIconHeight
    </p>
    <p>
      getIconWidth
    </p>
    <p>
      paintIcon
    </p>
    <p>
      getImageIcon
    </p>
    <p>
      wait
    </p>
    <p>
      equals
    </p>
    <p>
      toString
    </p>
    <p>
      hashCode
    </p>
    <p>
      getClass
    </p>
    <p>
      notify
    </p>
    <p>
      notifyAll
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="icono.imageIcon methods" ID="ID_533221567" CREATED="1638202621523" MODIFIED="1638202631217"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      getPreferredSize
    </p>
    <p>
      setPreferredSize
    </p>
    <p>
      getImage
    </p>
    <p>
      getIconHeight
    </p>
    <p>
      getIconWidth
    </p>
    <p>
      paintIcon
    </p>
    <p>
      getIconWidthIgnoreAutosize
    </p>
    <p>
      getIconHeightIgnoreAutosize
    </p>
    <p>
      removePropertyChangeListener
    </p>
    <p>
      addPropertyChangeListener
    </p>
    <p>
      setAntiAlias
    </p>
    <p>
      setAutosize
    </p>
    <p>
      setSvgURI
    </p>
    <p>
      isClipToViewbox
    </p>
    <p>
      getAntiAlias
    </p>
    <p>
      getSvgUniverse
    </p>
    <p>
      isScaleToFit
    </p>
    <p>
      setInterpolation
    </p>
    <p>
      getAutosize
    </p>
    <p>
      getInterpolation
    </p>
    <p>
      setUseAntiAlias
    </p>
    <p>
      setSvgUniverse
    </p>
    <p>
      getUseAntiAlias
    </p>
    <p>
      setScaleToFit
    </p>
    <p>
      getSvgURI
    </p>
    <p>
      setClipToViewbox
    </p>
    <p>
      setSvgResourcePath
    </p>
    <p>
      toString
    </p>
    <p>
      getAccessibleContext
    </p>
    <p>
      getImageLoadStatus
    </p>
    <p>
      getImageObserver
    </p>
    <p>
      setImage
    </p>
    <p>
      setImageObserver
    </p>
    <p>
      getDescription
    </p>
    <p>
      setDescription
    </p>
    <p>
      wait
    </p>
    <p>
      equals
    </p>
    <p>
      hashCode
    </p>
    <p>
      getClass
    </p>
    <p>
      notify
    </p>
    <p>
      notifyAll
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="icono.imageIcon.image methods" ID="ID_373428495" CREATED="1638202841763" MODIFIED="1638202848338"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      getProperty
    </p>
    <p>
      toString
    </p>
    <p>
      getType
    </p>
    <p>
      getData
    </p>
    <p>
      getGraphics
    </p>
    <p>
      getSource
    </p>
    <p>
      getColorModel
    </p>
    <p>
      createGraphics
    </p>
    <p>
      getMinX
    </p>
    <p>
      getMinY
    </p>
    <p>
      getSampleModel
    </p>
    <p>
      setData
    </p>
    <p>
      getTileHeight
    </p>
    <p>
      getTileWidth
    </p>
    <p>
      addTileObserver
    </p>
    <p>
      copyData
    </p>
    <p>
      getMinTileX
    </p>
    <p>
      getMinTileY
    </p>
    <p>
      getNumXTiles
    </p>
    <p>
      getNumYTiles
    </p>
    <p>
      getPropertyNames
    </p>
    <p>
      getSources
    </p>
    <p>
      getSubimage
    </p>
    <p>
      getTile
    </p>
    <p>
      getTileGridXOffset
    </p>
    <p>
      getTileGridYOffset
    </p>
    <p>
      getWritableTile
    </p>
    <p>
      getWritableTileIndices
    </p>
    <p>
      hasTileWriters
    </p>
    <p>
      isTileWritable
    </p>
    <p>
      releaseWritableTile
    </p>
    <p>
      removeTileObserver
    </p>
    <p>
      getHeight
    </p>
    <p>
      getRaster
    </p>
    <p>
      getWidth
    </p>
    <p>
      getRGB
    </p>
    <p>
      getTransparency
    </p>
    <p>
      coerceData
    </p>
    <p>
      getAlphaRaster
    </p>
    <p>
      isAlphaPremultiplied
    </p>
    <p>
      setRGB
    </p>
    <p>
      flush
    </p>
    <p>
      setAccelerationPriority
    </p>
    <p>
      getScaledInstance
    </p>
    <p>
      getAccelerationPriority
    </p>
    <p>
      getCapabilities
    </p>
    <p>
      wait
    </p>
    <p>
      equals
    </p>
    <p>
      hashCode
    </p>
    <p>
      getClass
    </p>
    <p>
      notify
    </p>
    <p>
      notifyAll
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="icono.imageIcon.svgUniverse methods" ID="ID_1028678001" CREATED="1638202223951" MODIFIED="1638202225174"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      clear
    </p>
    <p>
      duplicate
    </p>
    <p>
      updateTime
    </p>
    <p>
      getFont
    </p>
    <p>
      removePropertyChangeListener
    </p>
    <p>
      addPropertyChangeListener
    </p>
    <p>
      getElement
    </p>
    <p>
      loadSVG
    </p>
    <p>
      getDiagram
    </p>
    <p>
      removeDocument
    </p>
    <p>
      getStreamBuiltURI
    </p>
    <p>
      getDefaultFont
    </p>
    <p>
      getLoadedDocumentURIs
    </p>
    <p>
      getCurTime
    </p>
    <p>
      setCurTime
    </p>
    <p>
      isVerbose
    </p>
    <p>
      setVerbose
    </p>
    <p>
      wait
    </p>
    <p>
      equals
    </p>
    <p>
      toString
    </p>
    <p>
      hashCode
    </p>
    <p>
      getClass
    </p>
    <p>
      notify
    </p>
    <p>
      notifyAll
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="arreglar nombres de iconos" ID="ID_1060746858" CREATED="1618284998603" MODIFIED="1618522275363"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      //había algunos con minúsculas entremedio que hacían que no funcionara
    </p>
    <p>
      
    </p>
    <p>
      //def nodo=node
    </p>
    <p>
      def nodos=c.selecteds
    </p>
    <p>
      
    </p>
    <p>
      nodos.each{nodo -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def t = nodo.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def newT = &quot;emoji-${t.takeAfter('-').takeBefore('.').toUpperCase()}.svg&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.text = newT
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="emoji-1F343.svg" FOLDED="true" ID="ID_182468522" CREATED="1618284139631" MODIFIED="1678219438593" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F343.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.724" OBJECT="org.freeplane.features.format.FormattedNumber|1724|#,##0"/>
<node TEXT="leaf            : &apos;emoji-1F343&apos; ," ID="ID_531604846" CREATED="1618265974755" MODIFIED="1618285370347">
<icon BUILTIN="emoji-1F343"/>
</node>
</node>
<node TEXT="emoji-1F4BE.svg" FOLDED="true" ID="ID_430633647" CREATED="1618285958771" MODIFIED="1678219438600" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F4BE.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="373" OBJECT="org.freeplane.features.format.FormattedNumber|373|#,##0"/>
<node TEXT="save            : &apos;emoji-1F4BE&apos; ," ID="ID_930984379" CREATED="1618265974808" MODIFIED="1618287957292">
<icon BUILTIN="emoji-1F4BE"/>
</node>
</node>
<node TEXT="emoji-1F4CD.svg" FOLDED="true" ID="ID_1900406563" CREATED="1618285958779" MODIFIED="1678219438608" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F4CD.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="277" OBJECT="org.freeplane.features.format.FormattedNumber|277|#,##0"/>
<node TEXT="rootFolder      : &apos;emoji-1F4CD&apos; ," ID="ID_609226707" CREATED="1618265974821" MODIFIED="1618287967827">
<icon BUILTIN="emoji-1F4CD"/>
</node>
</node>
<node TEXT="emoji-1F4DD.svg" FOLDED="true" ID="ID_1290213002" CREATED="1618285958788" MODIFIED="1678219438616" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F4DD.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.140" OBJECT="org.freeplane.features.format.FormattedNumber|2140|#,##0"/>
<node TEXT="toPlain         : &apos;emoji-1F4DD&apos; ," ID="ID_116164315" CREATED="1618265974816" MODIFIED="1618287977627">
<icon BUILTIN="emoji-1F4DD"/>
</node>
</node>
<node TEXT="emoji-1F517.svg" FOLDED="true" ID="ID_514746725" CREATED="1618285958797" MODIFIED="1678219438624" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F517.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="502" OBJECT="org.freeplane.features.format.FormattedNumber|502|#,##0"/>
<node TEXT="linked          : &apos;emoji-1F517&apos;" ID="ID_1569188980" CREATED="1618265974825" MODIFIED="1618287992538">
<icon BUILTIN="emoji-1F517"/>
</node>
</node>
<node TEXT="emoji-1F519.svg" FOLDED="true" ID="ID_1227638287" CREATED="1618285958806" MODIFIED="1678219438632" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F519.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.665" OBJECT="org.freeplane.features.format.FormattedNumber|1665|#,##0"/>
<node TEXT="gotoMD          : &apos;emoji-1F519&apos; ," ID="ID_1996376124" CREATED="1618265974812" MODIFIED="1618288019276">
<icon BUILTIN="emoji-1F519"/>
</node>
</node>
<node TEXT="emoji-1F522.svg" FOLDED="true" ID="ID_203189651" CREATED="1618285958815" MODIFIED="1678219438639" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F522.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.539" OBJECT="org.freeplane.features.format.FormattedNumber|1539|#,##0"/>
<node TEXT="number          : &apos;emoji-1F522&apos; ," ID="ID_427938231" CREATED="1618265974768" MODIFIED="1618285399940">
<icon BUILTIN="emoji-1F522"/>
</node>
</node>
<node TEXT="emoji-1F532.svg" FOLDED="true" ID="ID_1294187439" CREATED="1618285958823" MODIFIED="1678219438647" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F532.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="311" OBJECT="org.freeplane.features.format.FormattedNumber|311|#,##0"/>
<node TEXT="isTask          : &apos;emoji-1F532&apos; ," ID="ID_1553694515" CREATED="1618265974788" MODIFIED="1618285411525">
<icon BUILTIN="emoji-1F532"/>
</node>
</node>
<node TEXT="emoji-1F537.svg" FOLDED="true" ID="ID_1554848915" CREATED="1618285958831" MODIFIED="1678219438654" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F537.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="272" OBJECT="org.freeplane.features.format.FormattedNumber|272|#,##0"/>
<node TEXT="bullet          : &apos;emoji-1F537&apos; ," ID="ID_1938596688" CREATED="1618265974771" MODIFIED="1618285402516">
<icon BUILTIN="emoji-1F537"/>
</node>
</node>
<node TEXT="emoji-1F648.svg" FOLDED="true" ID="ID_230743866" CREATED="1618285958841" MODIFIED="1678219438662" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F648.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="5.419" OBJECT="org.freeplane.features.format.FormattedNumber|5419|#,##0"/>
<node TEXT="ignoreContent   : &apos;emoji-1F648&apos; ," ID="ID_1097741860" CREATED="1618265974760" MODIFIED="1618285378986">
<icon BUILTIN="emoji-1F648"/>
</node>
</node>
<node TEXT="emoji-2194.svg" FOLDED="true" ID="ID_1252709902" CREATED="1618284139754" MODIFIED="1678219438670" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-2194.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="284" OBJECT="org.freeplane.features.format.FormattedNumber|284|#,##0"/>
<node TEXT="centered        : &apos;emoji-2194&apos;  ," ID="ID_596354053" CREATED="1618265974775" MODIFIED="1618284536987">
<icon BUILTIN="emoji-2194"/>
</node>
</node>
<node TEXT="emoji-21A9.svg" FOLDED="true" ID="ID_967008407" CREATED="1618285958849" MODIFIED="1678219438677" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-21A9.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="348" OBJECT="org.freeplane.features.format.FormattedNumber|348|#,##0"/>
<node TEXT="newLine         : &apos;emoji-21A9&apos;  ," ID="ID_1935874741" CREATED="1618265974764" MODIFIED="1618285397413">
<icon BUILTIN="emoji-21A9"/>
</node>
</node>
<node TEXT="emoji-26D4.svg" FOLDED="true" ID="ID_1643332337" CREATED="1618285958857" MODIFIED="1678219438685" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-26D4.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="282" OBJECT="org.freeplane.features.format.FormattedNumber|282|#,##0"/>
<node TEXT="ignoreNode      : &apos;emoji-26D4&apos;  ," ID="ID_1131158290" CREATED="1618265974755" MODIFIED="1618285388922">
<icon BUILTIN="emoji-26D4"/>
</node>
</node>
<node TEXT="emoji-2714.svg" FOLDED="true" ID="ID_477810454" CREATED="1618284139782" MODIFIED="1678219438692" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-2714.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="361" OBJECT="org.freeplane.features.format.FormattedNumber|361|#,##0"/>
<node TEXT="completed       : &apos;emoji-2714&apos;  ," ID="ID_1172302022" CREATED="1618265974784" MODIFIED="1618284542964">
<icon BUILTIN="emoji-2714"/>
</node>
</node>
<node TEXT="emoji-2753.svg" FOLDED="true" ID="ID_1327816536" CREATED="1618284139791" MODIFIED="1678219438710" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-2753.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="388" OBJECT="org.freeplane.features.format.FormattedNumber|388|#,##0"/>
<node TEXT="help            : &apos;emoji-2753&apos;  ," ID="ID_1918211626" CREATED="1618265974803" MODIFIED="1618288030985">
<icon BUILTIN="emoji-2753"/>
</node>
</node>
<node TEXT="emoji-27A1.svg" FOLDED="true" ID="ID_1320306320" CREATED="1618285958866" MODIFIED="1678219438718" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-27A1.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="242" OBJECT="org.freeplane.features.format.FormattedNumber|242|#,##0"/>
<node TEXT="alignRight      : &apos;emoji-27A1&apos;  ," ID="ID_389625143" CREATED="1618265974780" MODIFIED="1618287004513">
<icon BUILTIN="emoji-27A1"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="emoji-1FA79.svg" FOLDED="true" ID="ID_579595846" CREATED="1618698721407" MODIFIED="1678219438725" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1FA79.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.146" OBJECT="org.freeplane.features.format.FormattedNumber|1146|#,##0"/>
<node TEXT="addMissingAttr" ID="ID_1553357775" CREATED="1618697235459" MODIFIED="1618698845712">
<icon BUILTIN="emoji-1FA79"/>
</node>
</node>
<node TEXT="emoji-1F524.svg" FOLDED="true" ID="ID_252549464" CREATED="1619305739747" MODIFIED="1678219438732" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F524.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.324" OBJECT="org.freeplane.features.format.FormattedNumber|1324|#,##0"/>
<node TEXT="param" ID="ID_897463486" CREATED="1619305797397" MODIFIED="1619305817739">
<icon BUILTIN="emoji-1F524"/>
</node>
</node>
<node TEXT="removeAll       : &apos;RemoveAllIconsAction&apos;," ID="ID_1184194602" CREATED="1618265974799" MODIFIED="1618265974799"/>
<node TEXT="removeFirst     : &apos;RemoveIcon_0_Action&apos;," ID="ID_856064629" CREATED="1618265974792" MODIFIED="1618265974792"/>
<node TEXT="removeLast      : &apos;RemoveIconAction&apos;," ID="ID_962223443" CREATED="1618265974795" MODIFIED="1618265974795"/>
<node TEXT="ver iconos" ID="ID_1847096247" CREATED="1618265974780" MODIFIED="1619459778489">
<icon BUILTIN="emoji-1F4DA"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="emoji-1F4DA.svg" ID="ID_310486013" CREATED="1622039345677" MODIFIED="1678219438739" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/zips/icons/emoji-1F4DA.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.335" OBJECT="org.freeplane.features.format.FormattedNumber|1335|#,##0"/>
</node>
</node>
</node>
<node TEXT="images" FOLDED="true" ID="ID_675020084" CREATED="1616167740198" MODIFIED="1678219438756" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<attribute NAME="projectCode" VALUE="images"/>
<node TEXT="MarkdownHelper-icon.svg" ID="ID_1198993765" CREATED="1616167740198" MODIFIED="1678219438758" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/MarkdownHelper-icon.svg"><richcontent CONTENT-TYPE="xml/markdown" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.287" OBJECT="org.freeplane.features.format.FormattedNumber|2287|#,##0"/>
</node>
<node TEXT="MarkdownHelper-screenshot-1.png" ID="ID_119136224" CREATED="1616167740198" MODIFIED="1678219438765" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/MarkdownHelper-screenshot-1.png"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.837" OBJECT="org.freeplane.features.format.FormattedNumber|3837|#,##0"/>
</node>
<node TEXT="MarkdownHelper.png" ID="ID_90678998" CREATED="1616167740198" MODIFIED="1678219438772" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/MarkdownHelper.png"><richcontent CONTENT-TYPE="xml/markdown" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.003" OBJECT="org.freeplane.features.format.FormattedNumber|1003|#,##0"/>
</node>
<node TEXT="MarkdownHelper-icon-text.png" ID="ID_1733930395" CREATED="1623804839585" MODIFIED="1678219438779" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/MarkdownHelper-icon-text.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="6.090" OBJECT="org.freeplane.features.format.FormattedNumber|6090|#,##0"/>
<richcontent CONTENT-TYPE="xml/markdown" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="MarkdownHelper-icon-text.svg" ID="ID_423962102" CREATED="1623804839596" MODIFIED="1678219438786" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/MarkdownHelper-icon-text.svg">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.876" OBJECT="org.freeplane.features.format.FormattedNumber|4876|#,##0"/>
</node>
<node TEXT="MarkdownHelper100x63.png" ID="ID_621301511" CREATED="1623804839605" MODIFIED="1678219438793" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/MarkdownHelper100x63.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.840" OBJECT="org.freeplane.features.format.FormattedNumber|1840|#,##0"/>
<richcontent CONTENT-TYPE="xml/markdown" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="translations" FOLDED="true" ID="ID_240864948" CREATED="1646062264973" MODIFIED="1678219438810" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/translations/" VGAP_QUANTITY="2 px">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<attribute NAME="projectCode" VALUE="translati"/>
<node TEXT="en.properties" ID="ID_627743455" CREATED="1646062265004" MODIFIED="1678219438812" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/translations/en.properties">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.198" OBJECT="org.freeplane.features.format.FormattedNumber|3198|#,##0"/>
</node>
</node>
<node TEXT="MarkdownHelper.mm" ID="ID_1025119673" CREATED="1616167740198" MODIFIED="1678219438829" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper.mm">
<attribute NAME="lastModifiedTime" VALUE="06-08-22 19:02" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T19:02-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="49.700" OBJECT="org.freeplane.features.format.FormattedNumber|49700|#,##0"/>
</node>
<node TEXT="generados automáticamente" STYLE_REF="Organizador" FOLDED="true" ID="ID_925898118" CREATED="1616167740198" MODIFIED="1616167740198">
<node TEXT="MarkdownHelper-v0.1.3.addon.mm" ID="ID_627071432" CREATED="1658512854067" MODIFIED="1678219438831" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.3.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="06-08-22 18:49" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:49-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.080.853" OBJECT="org.freeplane.features.format.FormattedNumber|1080853|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.2.addon.mm" ID="ID_1664348479" CREATED="1647515875865" MODIFIED="1678219428170" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.2.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="09-05-22 21:26" OBJECT="org.freeplane.features.format.FormattedDate|2022-05-09T21:26-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.074.061" OBJECT="org.freeplane.features.format.FormattedNumber|1074061|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.1.addon.mm" ID="ID_1310574918" CREATED="1641303888850" MODIFIED="1678219428216" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.1.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="12-03-22 16:07" OBJECT="org.freeplane.features.format.FormattedDate|2022-03-12T16:07-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.003.742" OBJECT="org.freeplane.features.format.FormattedNumber|1003742|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.0-alpha-07.addon.mm" ID="ID_1281942574" CREATED="1640359030355" MODIFIED="1678219428245" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.0-alpha-07.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="27-12-21 13:14" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-27T13:14-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="982.529" OBJECT="org.freeplane.features.format.FormattedNumber|982529|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.0-alpha-06.addon.mm" ID="ID_1318504983" CREATED="1631712099539" MODIFIED="1678219428283" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.0-alpha-06.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="07-12-21 21:30" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-07T21:30-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="361.769" OBJECT="org.freeplane.features.format.FormattedNumber|361769|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.0-alpha-05.addon.mm" ID="ID_89081790" CREATED="1620345231112" MODIFIED="1678219428317" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.0-alpha-05.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="15-09-21 10:02" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-15T10:02-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="354.742" OBJECT="org.freeplane.features.format.FormattedNumber|354742|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.0-alpha-04.addon.mm" ID="ID_1649537439" CREATED="1619302580865" MODIFIED="1678219428342" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.0-alpha-04.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="15-09-21 09:56" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-15T09:56-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="350.079" OBJECT="org.freeplane.features.format.FormattedNumber|350079|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.0-alpha-03.addon.mm" ID="ID_1603484616" CREATED="1618522918854" MODIFIED="1678219428367" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.0-alpha-03.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="15-09-21 09:56" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-15T09:56-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="360.141" OBJECT="org.freeplane.features.format.FormattedNumber|360141|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.0-alpha-02.addon.mm" ID="ID_1839368858" CREATED="1618284139809" MODIFIED="1678219428390" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.0-alpha-02.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="15-09-21 09:56" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-15T09:56-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="300.572" OBJECT="org.freeplane.features.format.FormattedNumber|300572|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.0-alpha.addon.mm" ID="ID_1432185247" CREATED="1618185423324" MODIFIED="1678219428415" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.0-alpha.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="15-09-21 09:56" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-15T09:56-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="284.111" OBJECT="org.freeplane.features.format.FormattedNumber|284111|#,##0"/>
</node>
<node TEXT="MarkdownHelper-v0.1.0.addon.mm" ID="ID_660220240" CREATED="1616167740198" MODIFIED="1678219428441" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper-v0.1.0.addon.mm">
<attribute NAME="lastModifiedTime" VALUE="11-04-21 19:36" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-11T19:36-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:42" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="283.262" OBJECT="org.freeplane.features.format.FormattedNumber|283262|#,##0"/>
</node>
<node TEXT="history.md" ID="ID_506560780" CREATED="1647096710317" MODIFIED="1678219438838" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/history.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.523" OBJECT="org.freeplane.features.format.FormattedNumber|2523|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      # History
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.3
    </p>
    <p>
      
    </p>
    <p>
      * selecting contiguos nodes inserts MDNode as parent
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.2
    </p>
    <p>
      
    </p>
    <p>
      * add / remove icons
    </p>
    <p>
      * added import MDH Styles
    </p>
    <p>
      * &quot;save note to file&quot; shows allways the filechooser dialog, so the user can change the target file if she/he wants to.
    </p>
    <p>
      * Added &quot;Save as MDH_clean mindmap&quot; command
    </p>
    <p>
      * MDH List node modified to accept also task items
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.1
    </p>
    <p>
      
    </p>
    <p>
      * - Preview Panel format now is taken from the MarkdownHelperPreview Style node
    </p>
    <p>
      * using devtools v0.9.31
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.0-alpha-07
    </p>
    <p>
      
    </p>
    <p>
      * - added MDH preview panel
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.0-alpha-06
    </p>
    <p>
      
    </p>
    <p>
      * added library WSE_redux
    </p>
    <p>
      * added error message when a scripts needs a baseFolder node and it can't be found
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.0-alpha-05
    </p>
    <p>
      
    </p>
    <p>
      * Optimized SVG icons
    </p>
    <p>
      * corrected bug in button &quot;path to MD root folder&quot;
    </p>
    <p>
      * don't show formulas content in nodes when building tables
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.0-alpha-04
    </p>
    <p>
      
    </p>
    <p>
      * Added button to extract selected text in notepanel as a parmeter to be used with the textBlock node
    </p>
    <p>
      * Improved 'to be linked' node and&nbsp;&nbsp;linkToFile nodes to follow a chain of links to get to the actual link to a file
    </p>
    <p>
      * When inserting a new 'to be linked' node, if the selected node has a link, then the new node gets automatically linked to that node
    </p>
    <p>
      * Added new MDH nodes to be used when building a wiki (in github)
    </p>
    <p>
      * Added a button to show/hide the panel with this new wiki buttons
    </p>
    <p>
      * internal: changed the code for getting the buttons of the dialog when asigning the arrow moves, because it had conflicts with the scrollbars from scrollPanels
    </p>
    <p>
      * Added externalObject images to &quot;local file&quot; nodes and &quot;to be linked&quot; nodes
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.0-alpha-03
    </p>
    <p>
      
    </p>
    <p>
      * cleaning duplicated constants
    </p>
    <p>
      * building iconActions from icons names
    </p>
    <p>
      * Added special AddOns icons and a preference to activate them.
    </p>
    <p>
      * Added defaults as preferences
    </p>
    <p>
      * Added new parameters in MDH doc nodes and preferences
    </p>
    <p>
      * Added dialog button that adds missing Attributes to MDH nodes (to easy update mindmaps created with previous AddOn versions)
    </p>
    <p>
      The button is only visible when using command &quot;rebuild Dialog&quot;
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.0-alpha-02
    </p>
    <p>
      
    </p>
    <p>
      * Adding icons
    </p>
    <p>
      
    </p>
    <p>
      ## v0.1.0-alpha
    </p>
    <p>
      
    </p>
    <p>
      * alpha release
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="version.properties" ID="ID_155217910" CREATED="1616167740198" MODIFIED="1678219438845" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/version.properties">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="266" OBJECT="org.freeplane.features.format.FormattedNumber|266|#,##0"/>
</node>
<node TEXT="MarkdownHelper.mm.bak" ID="ID_621110449" CREATED="1616167740198" MODIFIED="1678219438853" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/MarkdownHelper.mm.bak">
<attribute NAME="lastModifiedTime" VALUE="06-08-22 18:49" OBJECT="org.freeplane.features.format.FormattedDate|2022-08-06T18:49-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:38" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:38-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="49.658" OBJECT="org.freeplane.features.format.FormattedNumber|49658|#,##0"/>
</node>
</node>
<node TEXT="build.gradle" ID="ID_1199837343" CREATED="1616167740198" MODIFIED="1678219438870" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build.gradle">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.657" OBJECT="org.freeplane.features.format.FormattedNumber|3657|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      //MarkdownHelper
    </p>
    <p>
      
    </p>
    <p>
      apply plugin: 'groovy'
    </p>
    <p>
      
    </p>
    <p>
      targetCompatibility='1.8'
    </p>
    <p>
      
    </p>
    <p>
      // 1. I have to define which freeplane version is going to be used to look at the libreries (freeplane and groovy)
    </p>
    <p>
      def FPversion = 'v10_1'
    </p>
    <p>
      def freeplaneDirs = [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instaled&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: &quot;C:/Program Files/Freeplane&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protableApps : &quot;C:/PortableApps/FreeplanePortable/App/Freeplane&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v9_15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: &quot;C:/Freeplane/freeplane-1.9.15-pre01&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v10_1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: &quot;C:/Freeplane/freeplane-1.10.1-pre05&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;]
    </p>
    <p>
      def freeplaneDir = freeplaneDirs[FPversion]
    </p>
    <p>
      
    </p>
    <p>
      def groovyGroupId = FPversion.startsWith('v10')?'org.apache.groovy':'org.codehaus.groovy'
    </p>
    <p>
      def groovyVersion = FPversion.startsWith('v10')?'4.0.1':'3.0.8'
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      libsDirName = &quot;${rootDir}/lib&quot;
    </p>
    <p>
      //clean.doFirst { delete &quot;${rootDir}/lib&quot; } // para eliminar todas las .jar
    </p>
    <p>
      clean.doFirst { delete &quot;${rootDir}/lib/MarkdownHelper.jar&quot; } //para eliminar sólo una de las .jar y que no me borrara markedj ni jsoup
    </p>
    <p>
      
    </p>
    <p>
      repositories {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;mavenCentral()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;flatDir name: 'localGitDepsRepository',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dirs: [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;${freeplaneDir}&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;${freeplaneDir}/core/org.freeplane.core/lib&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;${freeplaneDir}/plugins/org.freeplane.plugin.script/lib&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &quot;${freeplaneDir}/plugins/org.freeplane.plugin.markdown/lib&quot;, // para incluir markedj.jar
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;${rootDir}/lib&quot; //ahí puse markedj y jsoup
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;]
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // I had this error:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// Could not find method compile() for arguments [{name=freeplanelauncher}] on object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler
    </p>
    <p>
      // answer:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// https://stackoverflow.com/questions/69733508/couldnt-find-compile-for-arguments-directory-libs-on-object-of-type-org-g
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      dependencies {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation name : 'freeplanelauncher'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation name : 'freeplaneviewer'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation group: 'org.freeplane.core',&nbsp;&nbsp;&nbsp;name: 'freeplaneeditor', version:&quot;+&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation group: 'org.freeplane.script', name: 'plugin', version: '+'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation name : 'markedj', version: '+' //&lt;---- para markedj
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation name : 'jsoup'&nbsp;&nbsp;, version: '+' //&lt;---- para jsoup
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//Freeplane now comes with groovy 3.0.8
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(FPversion.startsWith('v10')){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;implementation platform (&quot;${groovyGroupId}:groovy-all:${groovyVersion}&quot;.toString()) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-test'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-test-junit5'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-testng'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-ant'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-docgenerator'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-groovydoc'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-cli-commons'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-cli-picocli'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;implementation (&quot;${groovyGroupId}:groovy-all:${groovyVersion}&quot;.toString()) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-test'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-test-junit5'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-testng'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-ant'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-docgenerator'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-groovydoc'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-cli-commons'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:groovyGroupId, module:'groovy-cli-picocli'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation &quot;${groovyGroupId}:groovy-dateutil:${groovyVersion}&quot;.toString()
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<node TEXT="ver Github/lilive&#xa;ahí muestra un resumen" FOLDED="true" ID="ID_313864533" CREATED="1616167740199" MODIFIED="1619978986672">
<node TEXT="Install Freeplane (of course !)" ID="ID_656939693" CREATED="1616167740199" MODIFIED="1616167740199"/>
<node TEXT="Download the source" ID="ID_682496519" CREATED="1616167740199" MODIFIED="1616167740199"/>
<node TEXT="Install gradle" ID="ID_835702920" CREATED="1616167740199" MODIFIED="1616167740199"/>
<node TEXT="Open build.gradle with a text editor and modify the paths in repositories.dirs[] to point to your Freeplane installation" ID="ID_1930542723" CREATED="1616167740199" MODIFIED="1616167740199"/>
<node TEXT="Get a command prompt at the root of the sources folder" ID="ID_676314136" CREATED="1616167740199" MODIFIED="1616167740199"/>
<node TEXT="gradle build will create the file lib/bookmarks.jar" ID="ID_980507086" CREATED="1616167740199" MODIFIED="1616167740199"/>
</node>
</node>
<node TEXT="build - copia.gradle" ID="ID_1109705755" CREATED="1651855451578" MODIFIED="1678219438880" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/build%20-%20copia.gradle"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      //MarkdownHelper
    </p>
    <p>
      
    </p>
    <p>
      apply plugin: 'groovy'
    </p>
    <p>
      
    </p>
    <p>
      targetCompatibility='1.8'
    </p>
    <p>
      
    </p>
    <p>
      libsDirName = &quot;${rootDir}/lib&quot;
    </p>
    <p>
      //clean.doFirst { delete &quot;${rootDir}/lib&quot; } // para eliminar todas las .jar
    </p>
    <p>
      clean.doFirst { delete &quot;${rootDir}/lib/MarkdownHelper.jar&quot; } //para eliminar sólo una de las .jar y que no me borrara markedj ni jsoup
    </p>
    <p>
      
    </p>
    <p>
      repositories {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;mavenCentral()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;flatDir name: 'localGitDepsRepository',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dirs: [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;C:/Program Files/Freeplane&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;C:/Program Files/Freeplane/core/org.freeplane.core/lib&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;C:/Program Files/Freeplane/plugins/org.freeplane.plugin.script/lib&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;${rootDir}/lib&quot; //ahí puse markedj y jsoup
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;]
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// Así para cuando Freeplane está en Portable Apps
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// dirs: [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &quot;C:/PortableApps/FreeplanePortable/App/Freeplane&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &quot;C:/PortableApps/FreeplanePortable/App/Freeplane/core/org.freeplane.core/lib&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &quot;C:/PortableApps/FreeplanePortable/App/Freeplane/plugins/org.freeplane.plugin.script/lib&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// &quot;${rootDir}/lib&quot; //así lo usé en wikdshellext, porque ahí puse WikdShell.jar
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// ]
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // I had this error:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// Could not find method compile() for arguments [{name=freeplanelauncher}] on object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler
    </p>
    <p>
      // answer:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// https://stackoverflow.com/questions/69733508/couldnt-find-compile-for-arguments-directory-libs-on-object-of-type-org-g
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      dependencies {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation name : 'freeplanelauncher'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation name : 'freeplaneviewer'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation group: 'org.freeplane.core',&nbsp;&nbsp;&nbsp;name: 'freeplaneeditor', version:&quot;+&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation group: 'org.freeplane.script', name: 'plugin', version: '+'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation name : 'markedj', version: '+' //&lt;---- para markedj
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation name : 'jsoup'&nbsp;&nbsp;, version: '+' //&lt;---- para jsoup
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//Freeplane now comes with groovy 3.0.8
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation ('org.codehaus.groovy:groovy-all:3.0.8') {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:'org.codehaus.groovy', module:'groovy-test'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:'org.codehaus.groovy', module:'groovy-test-junit5'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:'org.codehaus.groovy', module:'groovy-testng'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:'org.codehaus.groovy', module:'groovy-ant'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:'org.codehaus.groovy', module:'groovy-docgenerator'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:'org.codehaus.groovy', module:'groovy-groovydoc'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:'org.codehaus.groovy', module:'groovy-cli-commons'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exclude group:'org.codehaus.groovy', module:'groovy-cli-picocli'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;implementation 'org.codehaus.groovy:groovy-dateutil:3.0.8'
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:48" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:48-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.635" OBJECT="org.freeplane.features.format.FormattedNumber|2635|#,##0"/>
</node>
<node TEXT=".gitignore" ID="ID_1589601982" CREATED="1616167740199" MODIFIED="1678219438888" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/.gitignore">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:48" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:48-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="428" OBJECT="org.freeplane.features.format.FormattedNumber|428|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .gradle
    </p>
    <p>
      **/build/
    </p>
    <p>
      !src/**/build/
    </p>
    <p>
      
    </p>
    <p>
      # Ignore Gradle GUI config
    </p>
    <p>
      gradle-app.setting
    </p>
    <p>
      
    </p>
    <p>
      # Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
    </p>
    <p>
      !gradle-wrapper.jar
    </p>
    <p>
      
    </p>
    <p>
      # Cache of project
    </p>
    <p>
      .gradletasknamecache
    </p>
    <p>
      
    </p>
    <p>
      # # Work around https://youtrack.jetbrains.com/issue/IDEA-116898
    </p>
    <p>
      # gradle/wrapper/gradle-wrapper.properties
    </p>
    <p>
      
    </p>
    <p>
      # Addon maps
    </p>
    <p>
      *.addon.mm
    </p>
    <p>
      *.mm.bak
    </p>
    <p>
      # version.properties
    </p>
    <p>
      
    </p>
    <p>
      # ignore .jar files
    </p>
    <p>
      *.jar
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="resources" FOLDED="true" ID="ID_52417536" CREATED="1616167740185" MODIFIED="1678219438897" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/" VGAP_QUANTITY="2 px">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="MarkdownHelper (inkscape).svg" ID="ID_290067759" CREATED="1616167740191" MODIFIED="1678219438898" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/MarkdownHelper%20(inkscape).svg"><richcontent CONTENT-TYPE="xml/markdown" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="5.221" OBJECT="org.freeplane.features.format.FormattedNumber|5221|#,##0"/>
</node>
<node TEXT="icons" FOLDED="true" ID="ID_1672744425" CREATED="1616687441133" MODIFIED="1678219438905" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="8.192" OBJECT="org.freeplane.features.format.FormattedNumber|8192|#,##0"/>
<node TEXT="FP Icon 001.png" ID="ID_1688744261" CREATED="1616687441239" MODIFIED="1678219438911" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.874" OBJECT="org.freeplane.features.format.FormattedNumber|3874|#,##0"/>
</node>
<node TEXT="FP Icon 002.png" ID="ID_1633308365" CREATED="1616687441354" MODIFIED="1678219438918" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.899" OBJECT="org.freeplane.features.format.FormattedNumber|3899|#,##0"/>
</node>
<node TEXT="FP Icon 003.png" ID="ID_880028453" CREATED="1616687441456" MODIFIED="1678219438924" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20003.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.997" OBJECT="org.freeplane.features.format.FormattedNumber|4997|#,##0"/>
</node>
<node TEXT="FP Icon 004.png" ID="ID_1140085270" CREATED="1616687441562" MODIFIED="1678219438931" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20004.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.183" OBJECT="org.freeplane.features.format.FormattedNumber|3183|#,##0"/>
</node>
<node TEXT="FP Icon 005.png" ID="ID_1041901195" CREATED="1616687441663" MODIFIED="1678219438938" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20005.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.520" OBJECT="org.freeplane.features.format.FormattedNumber|1520|#,##0"/>
</node>
<node TEXT="FP Icon 006.png" ID="ID_678282782" CREATED="1616687441769" MODIFIED="1678219438945" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20006.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.359" OBJECT="org.freeplane.features.format.FormattedNumber|3359|#,##0"/>
</node>
<node TEXT="FP Icon 007.png" ID="ID_1263398186" CREATED="1616687441882" MODIFIED="1678219438952" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20007.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.061" OBJECT="org.freeplane.features.format.FormattedNumber|2061|#,##0"/>
</node>
<node TEXT="FP Icon 008.png" ID="ID_334735608" CREATED="1616687441985" MODIFIED="1678219438959" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20008.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.058" OBJECT="org.freeplane.features.format.FormattedNumber|1058|#,##0"/>
</node>
<node TEXT="FP Icon 009.png" ID="ID_1504451702" CREATED="1616687442087" MODIFIED="1678219438967" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20009.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.349" OBJECT="org.freeplane.features.format.FormattedNumber|1349|#,##0"/>
</node>
<node TEXT="FP Icon 010.png" ID="ID_275933156" CREATED="1616687442192" MODIFIED="1678219438975" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20010.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.230" OBJECT="org.freeplane.features.format.FormattedNumber|1230|#,##0"/>
</node>
<node TEXT="FP Icon 011.png" ID="ID_1729603722" CREATED="1616687442311" MODIFIED="1678219438981" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20011.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.528" OBJECT="org.freeplane.features.format.FormattedNumber|1528|#,##0"/>
</node>
<node TEXT="FP Icon 012.png" ID="ID_1912860122" CREATED="1616687442412" MODIFIED="1678219438989" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20012.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="823" OBJECT="org.freeplane.features.format.FormattedNumber|823|#,##0"/>
</node>
<node TEXT="FP Icon 013.png" ID="ID_242982225" CREATED="1616687442516" MODIFIED="1678219438996" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20013.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.876" OBJECT="org.freeplane.features.format.FormattedNumber|1876|#,##0"/>
</node>
<node TEXT="FP Icon 015.png" ID="ID_235214037" CREATED="1617023958012" MODIFIED="1678219439003" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20015.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.249" OBJECT="org.freeplane.features.format.FormattedNumber|2249|#,##0"/>
</node>
<node TEXT="FP Icon 016.png" ID="ID_480312230" CREATED="1617023958028" MODIFIED="1678219439010" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20016.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.116" OBJECT="org.freeplane.features.format.FormattedNumber|1116|#,##0"/>
</node>
<node TEXT="FP Icon 017.png" ID="ID_237539890" CREATED="1617023958044" MODIFIED="1678219439018" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20017.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.511" OBJECT="org.freeplane.features.format.FormattedNumber|1511|#,##0"/>
</node>
<node TEXT="FP Icon 018.png" ID="ID_1017260066" CREATED="1617023958069" MODIFIED="1678219439026" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20018.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.085" OBJECT="org.freeplane.features.format.FormattedNumber|2085|#,##0"/>
</node>
<node TEXT="FP Icon 019.png" ID="ID_1485682255" CREATED="1617023958085" MODIFIED="1678219439033" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20019.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.633" OBJECT="org.freeplane.features.format.FormattedNumber|1633|#,##0"/>
</node>
<node TEXT="FP Icon 020.png" ID="ID_1545819400" CREATED="1617637290867" MODIFIED="1678219439040" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20020.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.339" OBJECT="org.freeplane.features.format.FormattedNumber|2339|#,##0"/>
</node>
<node TEXT="FP Icon 021.png" ID="ID_1683282530" CREATED="1622039345933" MODIFIED="1678219439048" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20021.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.561" OBJECT="org.freeplane.features.format.FormattedNumber|1561|#,##0"/>
</node>
<node TEXT="FP Icon 022.png" ID="ID_376601735" CREATED="1622039345943" MODIFIED="1678219439055" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20022.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.843" OBJECT="org.freeplane.features.format.FormattedNumber|1843|#,##0"/>
</node>
<node TEXT="FP Icon 023.png" ID="ID_1718570880" CREATED="1622039345952" MODIFIED="1678219439062" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/icons/FP%20Icon%20023.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.570" OBJECT="org.freeplane.features.format.FormattedNumber|1570|#,##0"/>
</node>
</node>
<node TEXT="Dialog" FOLDED="true" ID="ID_1968509859" CREATED="1617023957856" MODIFIED="1678219439069" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Dialog/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="Dialog 1 2 3.png" ID="ID_857997563" CREATED="1617023957872" MODIFIED="1678219439077" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Dialog/Dialog%201%202%203.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="30.069" OBJECT="org.freeplane.features.format.FormattedNumber|30069|#,##0"/>
</node>
<node TEXT="Dialog panel 001.png" ID="ID_1503871523" CREATED="1617023957888" MODIFIED="1678219439084" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Dialog/Dialog%20panel%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="7.366" OBJECT="org.freeplane.features.format.FormattedNumber|7366|#,##0"/>
</node>
<node TEXT="Dialog panel 002.png" ID="ID_1667107886" CREATED="1617023957919" MODIFIED="1678219439091" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Dialog/Dialog%20panel%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.003" OBJECT="org.freeplane.features.format.FormattedNumber|4003|#,##0"/>
</node>
<node TEXT="Dialog panel 003.png" ID="ID_1903887235" CREATED="1617023957934" MODIFIED="1678219439098" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Dialog/Dialog%20panel%20003.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.409" OBJECT="org.freeplane.features.format.FormattedNumber|4409|#,##0"/>
</node>
<node TEXT="MD Dialog.png" ID="ID_1688351714" CREATED="1617023957966" MODIFIED="1678219439105" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Dialog/MD%20Dialog.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="17.316" OBJECT="org.freeplane.features.format.FormattedNumber|17316|#,##0"/>
</node>
<node TEXT="Dialog panel 003b.png" ID="ID_1070887281" CREATED="1622039345725" MODIFIED="1678219439112" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Dialog/Dialog%20panel%20003b.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.905" OBJECT="org.freeplane.features.format.FormattedNumber|4905|#,##0"/>
</node>
<node TEXT="Dialog panel 004.png" ID="ID_1725185510" CREATED="1622039345733" MODIFIED="1678219439119" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Dialog/Dialog%20panel%20004.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.947" OBJECT="org.freeplane.features.format.FormattedNumber|2947|#,##0"/>
</node>
</node>
<node TEXT="Examples" FOLDED="true" ID="ID_62920052" CREATED="1617209269531" MODIFIED="1678219439126" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/" VGAP_QUANTITY="2 px">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="28.672" OBJECT="org.freeplane.features.format.FormattedNumber|28672|#,##0"/>
<node TEXT="web link 001.png" ID="ID_1122094077" CREATED="1617209269546" MODIFIED="1678219439133" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/web%20link%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="9.367" OBJECT="org.freeplane.features.format.FormattedNumber|9367|#,##0"/>
</node>
<node TEXT="web link 002.png" ID="ID_1709227167" CREATED="1617209269561" MODIFIED="1678219439140" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/web%20link%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="10.394" OBJECT="org.freeplane.features.format.FormattedNumber|10394|#,##0"/>
</node>
<node TEXT="web link 003.png" ID="ID_701074012" CREATED="1617209269577" MODIFIED="1678219439147" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/web%20link%20003.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="8.556" OBJECT="org.freeplane.features.format.FormattedNumber|8556|#,##0"/>
</node>
<node TEXT="MDDoc 02.gif" ID="ID_1369676258" CREATED="1617323968961" MODIFIED="1678219439154" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDDoc%2002.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="467.763" OBJECT="org.freeplane.features.format.FormattedNumber|467763|#,##0"/>
</node>
<node TEXT="MDDoc 03.gif" ID="ID_1957393995" CREATED="1617323968972" MODIFIED="1678219439161" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDDoc%2003.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="495.685" OBJECT="org.freeplane.features.format.FormattedNumber|495685|#,##0"/>
</node>
<node TEXT="MDDoc 04.gif" ID="ID_1555830179" CREATED="1617323968981" MODIFIED="1678219439168" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDDoc%2004.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="592.666" OBJECT="org.freeplane.features.format.FormattedNumber|592666|#,##0"/>
</node>
<node TEXT="MDDoc 05.gif" ID="ID_165182912" CREATED="1617323968991" MODIFIED="1678219439174" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDDoc%2005.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="610.072" OBJECT="org.freeplane.features.format.FormattedNumber|610072|#,##0"/>
</node>
<node TEXT="MDDoc 06.gif" ID="ID_1287175642" CREATED="1617323969003" MODIFIED="1678219439181" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDDoc%2006.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="691.727" OBJECT="org.freeplane.features.format.FormattedNumber|691727|#,##0"/>
</node>
<node TEXT="MDDoc 07.gif" ID="ID_292339462" CREATED="1617323969013" MODIFIED="1678219439188" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDDoc%2007.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="643.526" OBJECT="org.freeplane.features.format.FormattedNumber|643526|#,##0"/>
</node>
<node TEXT="MDHnodes-TOC.gif" ID="ID_1933805794" CREATED="1617323969024" MODIFIED="1678219439195" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-TOC.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="821.965" OBJECT="org.freeplane.features.format.FormattedNumber|821965|#,##0"/>
</node>
<node TEXT="MDHnodes-WebImage.gif" ID="ID_523949725" CREATED="1617323969035" MODIFIED="1678219439202" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-WebImage.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.083.680" OBJECT="org.freeplane.features.format.FormattedNumber|2083680|#,##0"/>
</node>
<node TEXT="MDHnodes-WebLink.gif" ID="ID_1941344985" CREATED="1617323969045" MODIFIED="1678219439209" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-WebLink.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="603.459" OBJECT="org.freeplane.features.format.FormattedNumber|603459|#,##0"/>
</node>
<node TEXT="MDdoc 01.gif" ID="ID_561579821" CREATED="1617323969056" MODIFIED="1678219439216" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDdoc%2001.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="634.866" OBJECT="org.freeplane.features.format.FormattedNumber|634866|#,##0"/>
</node>
<node TEXT="markdownDocument example 001.png" ID="ID_1789245002" CREATED="1617323969065" MODIFIED="1678219439223" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/markdownDocument%20example%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="44.201" OBJECT="org.freeplane.features.format.FormattedNumber|44201|#,##0"/>
</node>
<node TEXT="markdownDocument example 002.png" ID="ID_1057753812" CREATED="1617323969075" MODIFIED="1678219439229" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/markdownDocument%20example%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="45.170" OBJECT="org.freeplane.features.format.FormattedNumber|45170|#,##0"/>
</node>
<node TEXT="markdownDocument example 003.png" ID="ID_823328770" CREATED="1617323969085" MODIFIED="1678219439237" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/markdownDocument%20example%20003.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="12.175" OBJECT="org.freeplane.features.format.FormattedNumber|12175|#,##0"/>
</node>
<node TEXT="MDHnodes-CodeBlock.gif" ID="ID_109848989" CREATED="1617637290753" MODIFIED="1678219439244" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-CodeBlock.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="544.032" OBJECT="org.freeplane.features.format.FormattedNumber|544032|#,##0"/>
</node>
<node TEXT="MDHnodes-LinkToFile.gif" ID="ID_273087448" CREATED="1617637290762" MODIFIED="1678219439251" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-LinkToFile.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="989.906" OBJECT="org.freeplane.features.format.FormattedNumber|989906|#,##0"/>
</node>
<node TEXT="MDHnodes-LinkToImage.gif" ID="ID_513661940" CREATED="1617637290771" MODIFIED="1678219439257" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-LinkToImage.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.053.256" OBJECT="org.freeplane.features.format.FormattedNumber|1053256|#,##0"/>
</node>
<node TEXT="MDHnodes-Lists.gif" ID="ID_367567662" CREATED="1617637290780" MODIFIED="1678219439264" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-Lists.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.802.037" OBJECT="org.freeplane.features.format.FormattedNumber|1802037|#,##0"/>
</node>
<node TEXT="MDHnodes-Table.gif" ID="ID_835895425" CREATED="1617637290788" MODIFIED="1678219439271" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-Table.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.157.933" OBJECT="org.freeplane.features.format.FormattedNumber|1157933|#,##0"/>
</node>
<node TEXT="MDHnodes-comment.gif" ID="ID_943993590" CREATED="1617637290796" MODIFIED="1678219439278" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-comment.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="849.788" OBJECT="org.freeplane.features.format.FormattedNumber|849788|#,##0"/>
</node>
<node TEXT="MDHnodes-numberedList.gif" ID="ID_1378264429" CREATED="1617637290814" MODIFIED="1678219439285" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-numberedList.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="196.012" OBJECT="org.freeplane.features.format.FormattedNumber|196012|#,##0"/>
</node>
<node TEXT="MDHnodes-numberedList2.gif" ID="ID_1839319462" CREATED="1617637290824" MODIFIED="1678219439292" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-numberedList2.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="248.071" OBJECT="org.freeplane.features.format.FormattedNumber|248071|#,##0"/>
</node>
<node TEXT="MDHnodes-plainTasks.gif" ID="ID_1442415486" CREATED="1617637290833" MODIFIED="1678219439297" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-plainTasks.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="881.400" OBJECT="org.freeplane.features.format.FormattedNumber|881400|#,##0"/>
</node>
<node TEXT="MDHnodes-structuredTasks.gif" ID="ID_225737929" CREATED="1617637290842" MODIFIED="1678219439304" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-structuredTasks.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="879.924" OBJECT="org.freeplane.features.format.FormattedNumber|879924|#,##0"/>
</node>
<node TEXT="MDHnodes-textBlock.gif" ID="ID_1506951140" CREATED="1617637290850" MODIFIED="1678219439312" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/MDHnodes-textBlock.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.246.092" OBJECT="org.freeplane.features.format.FormattedNumber|1246092|#,##0"/>
</node>
<node TEXT="Extras-Back.gif" ID="ID_1855495022" CREATED="1617664883982" MODIFIED="1678219439319" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Extras-Back.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="520.528" OBJECT="org.freeplane.features.format.FormattedNumber|520528|#,##0"/>
</node>
<node TEXT="Extras-ExportToNode.gif" ID="ID_1303219203" CREATED="1617664884002" MODIFIED="1678219439325" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Extras-ExportToNode.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="360.762" OBJECT="org.freeplane.features.format.FormattedNumber|360762|#,##0"/>
</node>
<node TEXT="Extras-ExportToNode02.gif" ID="ID_1957649849" CREATED="1617664884023" MODIFIED="1678219439332" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Extras-ExportToNode02.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="776.118" OBJECT="org.freeplane.features.format.FormattedNumber|776118|#,##0"/>
</node>
<node TEXT="Extras-save.gif" ID="ID_1241969980" CREATED="1617664884043" MODIFIED="1678219439339" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Extras-save.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="504.933" OBJECT="org.freeplane.features.format.FormattedNumber|504933|#,##0"/>
</node>
<node TEXT="Links-HowTo.gif" ID="ID_520852722" CREATED="1617664884066" MODIFIED="1678219439346" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Links-HowTo.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.016.482" OBJECT="org.freeplane.features.format.FormattedNumber|1016482|#,##0"/>
</node>
<node TEXT="Links-toBeLinkedNode.gif" ID="ID_1649619161" CREATED="1617664884086" MODIFIED="1678219439353" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Links-toBeLinkedNode.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="400.849" OBJECT="org.freeplane.features.format.FormattedNumber|400849|#,##0"/>
</node>
<node TEXT="WaysToAssignLink.png" ID="ID_1709791579" CREATED="1617664884109" MODIFIED="1678219439361" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/WaysToAssignLink.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="48.310" OBJECT="org.freeplane.features.format.FormattedNumber|48310|#,##0"/>
</node>
<node TEXT="Calvin01.png" ID="ID_211083002" CREATED="1618094526269" MODIFIED="1678219439368" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Calvin01.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="208.956" OBJECT="org.freeplane.features.format.FormattedNumber|208956|#,##0"/>
</node>
<node TEXT="Calvin02.png" ID="ID_1772893474" CREATED="1618094526279" MODIFIED="1678219439376" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Calvin02.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="183.792" OBJECT="org.freeplane.features.format.FormattedNumber|183792|#,##0"/>
</node>
<node TEXT="Npp Ex.png" ID="ID_1749932959" CREATED="1618094526279" MODIFIED="1678219439383" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Npp%20Ex.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="121.827" OBJECT="org.freeplane.features.format.FormattedNumber|121827|#,##0"/>
</node>
<node TEXT="NppCalvin.png" ID="ID_151191258" CREATED="1618094526295" MODIFIED="1678219439390" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/NppCalvin.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="237.762" OBJECT="org.freeplane.features.format.FormattedNumber|237762|#,##0"/>
</node>
<node TEXT="VSCode Calvin.png" ID="ID_423610239" CREATED="1618094526295" MODIFIED="1678219439397" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/VSCode%20Calvin.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="722.932" OBJECT="org.freeplane.features.format.FormattedNumber|722932|#,##0"/>
</node>
<node TEXT="textBlock  01.png" ID="ID_1706547008" CREATED="1618094526310" MODIFIED="1678219439404" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/textBlock%20%2001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="36.422" OBJECT="org.freeplane.features.format.FormattedNumber|36422|#,##0"/>
</node>
<node TEXT="Patch01.gif" ID="ID_940901255" CREATED="1622039345750" MODIFIED="1678219439411" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/Patch01.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="396.013" OBJECT="org.freeplane.features.format.FormattedNumber|396013|#,##0"/>
</node>
<node TEXT="WaysToAssignLink-cascade.png" ID="ID_674390298" CREATED="1622039345759" MODIFIED="1678219439418" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/WaysToAssignLink-cascade.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="43.959" OBJECT="org.freeplane.features.format.FormattedNumber|43959|#,##0"/>
</node>
<node TEXT="fileLinksRelative 001.png" ID="ID_230020925" CREATED="1622039345769" MODIFIED="1678219439425" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/fileLinksRelative%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="16.729" OBJECT="org.freeplane.features.format.FormattedNumber|16729|#,##0"/>
</node>
<node TEXT="fileLinksRelative 002.png" ID="ID_1085313170" CREATED="1622039345778" MODIFIED="1678219439432" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/fileLinksRelative%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="18.295" OBJECT="org.freeplane.features.format.FormattedNumber|18295|#,##0"/>
</node>
<node TEXT="fileLinksRelative 003.png" ID="ID_291941538" CREATED="1622039345787" MODIFIED="1678219439440" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/fileLinksRelative%20003.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="20.515" OBJECT="org.freeplane.features.format.FormattedNumber|20515|#,##0"/>
</node>
<node TEXT="fileLinksRelative 004.png" ID="ID_633351777" CREATED="1622039345798" MODIFIED="1678219439447" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/fileLinksRelative%20004.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="22.219" OBJECT="org.freeplane.features.format.FormattedNumber|22219|#,##0"/>
</node>
<node TEXT="fileLinksRelative 005.png" ID="ID_1579257123" CREATED="1622039345807" MODIFIED="1678219439454" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/fileLinksRelative%20005.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="19.198" OBJECT="org.freeplane.features.format.FormattedNumber|19198|#,##0"/>
</node>
<node TEXT="fileLinksRelative 006.png" ID="ID_512818838" CREATED="1622039345816" MODIFIED="1678219439461" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/fileLinksRelative%20006.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="18.087" OBJECT="org.freeplane.features.format.FormattedNumber|18087|#,##0"/>
</node>
<node TEXT="ignoreHeaderDetails 001.png" ID="ID_1217361095" CREATED="1622039345824" MODIFIED="1678219439468" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ignoreHeaderDetails%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="37.433" OBJECT="org.freeplane.features.format.FormattedNumber|37433|#,##0"/>
</node>
<node TEXT="ignoreHeaderDetails 002.png" ID="ID_1759172451" CREATED="1622039345833" MODIFIED="1678219439476" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ignoreHeaderDetails%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="37.844" OBJECT="org.freeplane.features.format.FormattedNumber|37844|#,##0"/>
</node>
<node TEXT="ignoreHeaderImageObjects false.png" ID="ID_1757192512" CREATED="1622039345842" MODIFIED="1678219439483" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ignoreHeaderImageObjects%20false.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="66.342" OBJECT="org.freeplane.features.format.FormattedNumber|66342|#,##0"/>
</node>
<node TEXT="ignoreHeaderImageObjects true.png" ID="ID_1497849804" CREATED="1622039345852" MODIFIED="1678219439490" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ignoreHeaderImageObjects%20true.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="58.555" OBJECT="org.freeplane.features.format.FormattedNumber|58555|#,##0"/>
</node>
<node TEXT="ignoreHeaderNotes 001.png" ID="ID_1170844298" CREATED="1622039345860" MODIFIED="1678219439497" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ignoreHeaderNotes%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="39.284" OBJECT="org.freeplane.features.format.FormattedNumber|39284|#,##0"/>
</node>
<node TEXT="ignoreHeaderNotes 002.png" ID="ID_1945216753" CREATED="1622039345869" MODIFIED="1678219439504" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ignoreHeaderNotes%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="40.944" OBJECT="org.freeplane.features.format.FormattedNumber|40944|#,##0"/>
</node>
<node TEXT="ignoreLeafDetails 001.png" ID="ID_429578238" CREATED="1622039345878" MODIFIED="1678219439512" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ignoreLeafDetails%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="44.000" OBJECT="org.freeplane.features.format.FormattedNumber|44000|#,##0"/>
</node>
<node TEXT="ignoreLeafDetails 002.png" ID="ID_721573663" CREATED="1622039345887" MODIFIED="1678219439538" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ignoreLeafDetails%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="43.212" OBJECT="org.freeplane.features.format.FormattedNumber|43212|#,##0"/>
</node>
<node TEXT="lineOverHeader.gif" ID="ID_119191897" CREATED="1622039345897" MODIFIED="1678219439548" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/lineOverHeader.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="684.506" OBJECT="org.freeplane.features.format.FormattedNumber|684506|#,##0"/>
</node>
<node TEXT="showHideWikiButtons.gif" ID="ID_525160409" CREATED="1622039345906" MODIFIED="1678219439557" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/showHideWikiButtons.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="37.099" OBJECT="org.freeplane.features.format.FormattedNumber|37099|#,##0"/>
</node>
<node TEXT="textBlockParameterExample.gif" ID="ID_1576747232" CREATED="1622039345915" MODIFIED="1678219439566" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/textBlockParameterExample.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.308.208" OBJECT="org.freeplane.features.format.FormattedNumber|1308208|#,##0"/>
</node>
<node TEXT="ToolPanel-ContentTypes.png" ID="ID_676150237" CREATED="1623804839635" MODIFIED="1678219439575" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Examples/ToolPanel-ContentTypes.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="17.565" OBJECT="org.freeplane.features.format.FormattedNumber|17565|#,##0"/>
</node>
</node>
<node TEXT="Menu" FOLDED="true" ID="ID_1162793771" CREATED="1617664884132" MODIFIED="1678219439584" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Menu/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="Menu01.png" ID="ID_1249642288" CREATED="1617664884154" MODIFIED="1678219439594" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Menu/Menu01.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.553" OBJECT="org.freeplane.features.format.FormattedNumber|2553|#,##0"/>
</node>
<node TEXT="Menu02.gif" ID="ID_119266243" CREATED="1617664884176" MODIFIED="1678219439603" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Menu/Menu02.gif">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="326.808" OBJECT="org.freeplane.features.format.FormattedNumber|326808|#,##0"/>
</node>
</node>
<node TEXT="Instalation" FOLDED="true" ID="ID_635627299" CREATED="1618094526310" MODIFIED="1678219439613" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Instalation/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="FilesOfType.png" ID="ID_1157772714" CREATED="1618094526326" MODIFIED="1678219439622" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Instalation/FilesOfType.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.910" OBJECT="org.freeplane.features.format.FormattedNumber|3910|#,##0"/>
</node>
<node TEXT="Install 001.png" ID="ID_184862431" CREATED="1618094526326" MODIFIED="1678219439632" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Instalation/Install%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.728" OBJECT="org.freeplane.features.format.FormattedNumber|4728|#,##0"/>
</node>
<node TEXT="Install 002.png" ID="ID_1550817513" CREATED="1618094526341" MODIFIED="1678219439642" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Instalation/Install%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="29.312" OBJECT="org.freeplane.features.format.FormattedNumber|29312|#,##0"/>
</node>
</node>
<node TEXT="MarkdownHelper_footer.png" ID="ID_445251451" CREATED="1617209269591" MODIFIED="1678219439652" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/MarkdownHelper_footer.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.840" OBJECT="org.freeplane.features.format.FormattedNumber|1840|#,##0"/>
</node>
<node TEXT="Wiki" FOLDED="true" ID="ID_1724394273" CREATED="1618443061326" MODIFIED="1678219439661" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Wiki/" VGAP_QUANTITY="2 px">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="WikiExample 001.png" ID="ID_918850650" CREATED="1618443061335" MODIFIED="1678219439671" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Wiki/WikiExample%20001.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="154.198" OBJECT="org.freeplane.features.format.FormattedNumber|154198|#,##0"/>
</node>
<node TEXT="WikiExample 002.png" ID="ID_1354636819" CREATED="1618443061345" MODIFIED="1678219439681" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Wiki/WikiExample%20002.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="64.087" OBJECT="org.freeplane.features.format.FormattedNumber|64087|#,##0"/>
</node>
<node TEXT="WikiExample 003.png" ID="ID_992397455" CREATED="1618443061354" MODIFIED="1678219439690" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Wiki/WikiExample%20003.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="55.340" OBJECT="org.freeplane.features.format.FormattedNumber|55340|#,##0"/>
</node>
<node TEXT="WikiExample 004.png" ID="ID_592165787" CREATED="1618443061362" MODIFIED="1678219439700" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Wiki/WikiExample%20004.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="42.297" OBJECT="org.freeplane.features.format.FormattedNumber|42297|#,##0"/>
</node>
<node TEXT="WikiExample 005.png" ID="ID_345728051" CREATED="1618443061371" MODIFIED="1678219439709" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Wiki/WikiExample%20005.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="24.893" OBJECT="org.freeplane.features.format.FormattedNumber|24893|#,##0"/>
</node>
<node TEXT="WikiExample 006.png" ID="ID_1391329520" CREATED="1618443061379" MODIFIED="1678219439720" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Wiki/WikiExample%20006.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="33.087" OBJECT="org.freeplane.features.format.FormattedNumber|33087|#,##0"/>
</node>
<node TEXT="WikiExample 007.png" ID="ID_288825875" CREATED="1618443061387" MODIFIED="1678219439735" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/resources/Wiki/WikiExample%20007.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="76.239" OBJECT="org.freeplane.features.format.FormattedNumber|76239|#,##0"/>
</node>
</node>
</node>
<node TEXT="tests - examples" STYLE_REF="file_folder" ID="ID_14539801" CREATED="1616167740177" MODIFIED="1678219439769" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/" VGAP_QUANTITY="2 px">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="dinosaur-5995333_100.png" ID="ID_1398211418" CREATED="1616167740177" MODIFIED="1678219433445" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/dinosaur-5995333_100.png"><richcontent CONTENT-TYPE="xml/markdown" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =&quot;![](${node.link.uri})&quot;
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="5.022" OBJECT="org.freeplane.features.format.FormattedNumber|5022|#,##0"/>
</node>
<node TEXT="plain task list.md" ID="ID_42131784" CREATED="1616167740177" MODIFIED="1678219433460" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/plain%20task%20list.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="77" OBJECT="org.freeplane.features.format.FormattedNumber|77|#,##0"/>
</node>
<node TEXT="example 01.md" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1355209245" CREATED="1616167740177" MODIFIED="1678219439771" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/example%2001.md" VGAP_QUANTITY="2 px">
<attribute_layout NAME_WIDTH="124.5 pt" VALUE_WIDTH="81.75 pt"/>
<attribute NAME="headersToUnderline" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="true"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<attribute NAME="topHeaderStartingNumber" VALUE="1" OBJECT="org.freeplane.features.format.FormattedNumber|1"/>
<attribute NAME="fileLinksRelative" VALUE="true"/>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="8.610" OBJECT="org.freeplane.features.format.FormattedNumber|8610|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>= edofro.MarkDownHelper.MDH.document(node)
</text>
</richcontent>
<node TEXT="esto es una prueba" STYLE_REF="locked" FOLDED="true" ID="ID_1915817537" CREATED="1616167740177" MODIFIED="1618267885258">
<icon BUILTIN="emoji-1F648"/>
<node TEXT="Documento de prueba" FOLDED="true" ID="ID_1790850809" CREATED="1616167740177" MODIFIED="1616167740177">
<node TEXT="Introducción&lt;br&gt;es muy importante" FOLDED="true" ID="ID_732129727" CREATED="1616167740177" MODIFIED="1616167740177">
<node TEXT="que es?" ID="ID_144401518" CREATED="1616167740177" MODIFIED="1617023776161"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      El presente documento es una **prueba** para ver si todo esto **funciona**
    </p>
    <p>
      
    </p>
    <p>
      &gt; ¿realmente funciona?
    </p>
    <p>
      
    </p>
    <p>
      no sé, lo veremos
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Tabla de contenidos" FOLDED="true" ID="ID_783426530" CREATED="1616167740177" MODIFIED="1616167740177">
<node TEXT="ToC" STYLE_REF="MarkdownHelperNode" ID="ID_211596432" CREATED="1616167740177" MODIFIED="1616415932988">
<attribute NAME="TOClevels" VALUE="3" OBJECT="org.freeplane.features.format.FormattedNumber|3|#0.####"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.TOC(node)
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Funcionalidades" FOLDED="true" ID="ID_291705167" CREATED="1616167740177" MODIFIED="1616167740177">
<node TEXT="párrafo introductorio" ID="ID_60545443" CREATED="1616167740177" MODIFIED="1616167740177"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      A continuación revisaremos cada una de las funcionalidades de este addOn.
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="Bótones de Iconos" FOLDED="true" ID="ID_342381033" CREATED="1616167740177" MODIFIED="1616167740177">
<node TEXT="OK" ID="ID_315221725" CREATED="1616167740177" MODIFIED="1617023760290"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Revisé los diferentes botónes y todos agregan o quitan íconos según su función.
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Text block" FOLDED="true" ID="ID_280189208" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="xxxx" ID="ID_186103280" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="Links" FOLDED="true" ID="ID_321075377" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="En el siguiente párrafo veremos si la funcionalidad funciona según lo esperado" ID="ID_571722459" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="text block" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1750828631" CREATED="1616167740178" MODIFIED="1616415933019"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.textBlock(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="parrafo de muestra" FOLDED="true" ID="ID_1618897570" CREATED="1616167740178" MODIFIED="1616167740178"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Aquí podemos ver como el web link $1 se intercaló en este párrafo.
    </p>
    <p>
      
    </p>
    <p>
      Aquí en cambio $2 intercalamos una imagen Web, ademas de un texto: $3.
    </p>
    <p>
      
    </p>
    <p>
      Finalmente también podemos linkear links locales como esta imagen $4 y este archivo $5.
    </p>
    <p>
      
    </p>
    <p>
      Se completa así una prueba exitosa (respecto a links)
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
<node TEXT="web link" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1465410948" CREATED="1616167740178" MODIFIED="1616415933050"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.webLink(node)</text>
</richcontent>
<node TEXT="Freeplane API: MenuUtils" ID="ID_1865695584" CREATED="1616167740178" MODIFIED="1616167740178" LINK="http://www.freeplane.org/doc/api/index.html?org/freeplane/core/util/MenuUtils.html"/>
</node>
<node TEXT="web Image" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1892185753" CREATED="1616167740178" MODIFIED="1616415933082"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.webImageLink(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="Freeplane Icon" ID="ID_434045122" CREATED="1616167740178" MODIFIED="1616167740178" LINK="https://a.fsdn.com/allura/p/freeplane/icon?1513717476&amp;w=90"/>
</node>
<node TEXT="el texto" ID="ID_1299630279" CREATED="1616167740178" MODIFIED="1616167740178"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ESTE TEXTO
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="local image" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_682647027" CREATED="1616167740178" MODIFIED="1616620620610"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.imageLink(node)  </text>
</richcontent>
<node ID="ID_396572563" TREE_ID="ID_1398211418"/>
</node>
<node TEXT="link to local file" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_324046906" CREATED="1616167740178" MODIFIED="1616620632064"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.fileLink(node)  </text>
</richcontent>
<node ID="ID_1308974276" TREE_ID="ID_42131784"/>
</node>
</node>
</node>
</node>
<node TEXT="Listas" FOLDED="true" ID="ID_1670203645" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="Las listas pueden ser de los siguientes tipos:" ID="ID_985388234" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_403323531" CREATED="1616167740178" MODIFIED="1616415933207">
<icon BUILTIN="emoji-1F522"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node)
  // </text>
</richcontent>
<node TEXT="listas planas" ID="ID_209165063" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="listas planas numeradas" ID="ID_850286431" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="ítemes multilíneas&#xa;son parte de un mismo punto" ID="ID_652765574" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="listas estructuradas" ID="ID_852212478" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="listas estructuradas numeradas" ID="ID_417847973" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="listas estructuradas mixtas" ID="ID_476951989" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="La lista anterior es un ejemplo de lista plana." ID="ID_120904748" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="Pasemos al ejemplo de lista plana numerada usando la misma lista." ID="ID_812713503" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1898612967" CREATED="1616167740178" MODIFIED="1616415933222">
<icon BUILTIN="emoji-1F522"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="listas planas" ID="ID_1862827028" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="listas planas numeradas" ID="ID_1221105575" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="listas estructuradas" ID="ID_1218490102" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="listas estructuradas numeradas" ID="ID_1385579209" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="listas estructuradas mixtas" ID="ID_1847721457" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="y ahora el ejemplo de lista estructurada:" ID="ID_509371705" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1571831279" CREATED="1616167740178" MODIFIED="1616415933238"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node)
//v</text>
</richcontent>
<node TEXT="listas planas" FOLDED="true" ID="ID_1725687973" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="bullet" ID="ID_237241111" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="numeradas" ID="ID_977044286" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="listas estructuradas" FOLDED="true" ID="ID_1456901328" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="bullet" ID="ID_931902386" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="numeradas" ID="ID_854744708" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="mixtas" ID="ID_1303695922" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="ítemes" FOLDED="true" ID="ID_1183426796" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="multilíneas&#xa;se muestran como parte del mismo punto&#xa;en un mismo párrafo" ID="ID_1716338234" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="lineas simples" ID="ID_1223983686" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
</node>
<node TEXT="lista estructurada numerada:" ID="ID_1294941217" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_463611406" CREATED="1616167740178" MODIFIED="1616415933253">
<icon BUILTIN="emoji-1F522"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node)
//</text>
</richcontent>
<node TEXT="listas planas" FOLDED="true" ID="ID_1353726025" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="bullet" ID="ID_1041249831" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="numeradas" ID="ID_1705311854" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="listas estructuradas" FOLDED="true" ID="ID_1510915362" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="bullet" ID="ID_1338573363" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="numeradas" ID="ID_1264124918" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="mixtas" ID="ID_342988491" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="ítemes" FOLDED="true" ID="ID_1237954433" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="multilíneas&#xa;se muestran como parte del mismo punto&#xa;en un mismo párrafo" ID="ID_1505913759" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="lineas simples" ID="ID_318042286" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
</node>
<node TEXT="lista estructurada mixta:" ID="ID_1777514304" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1700596257" CREATED="1616167740178" MODIFIED="1616415933285">
<icon BUILTIN="emoji-1F522"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node)
//</text>
</richcontent>
<node TEXT="listas planas" FOLDED="true" ID="ID_1385607011" CREATED="1616167740178" MODIFIED="1616167740178">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="bullet" ID="ID_1359115655" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="numeradas" ID="ID_657329415" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="listas estructuradas" FOLDED="true" ID="ID_930295488" CREATED="1616167740178" MODIFIED="1616167740178">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="bullet" ID="ID_1743658573" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="numeradas" ID="ID_1785360979" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="mixtas" ID="ID_1613063323" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
<node TEXT="ítemes" FOLDED="true" ID="ID_434185018" CREATED="1616167740178" MODIFIED="1616167740178">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="multilíneas&#xa;se muestran como parte del mismo punto&#xa;en un mismo párrafo" ID="ID_1816202283" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="lineas simples" ID="ID_1210711554" CREATED="1616167740178" MODIFIED="1616167740178"/>
</node>
</node>
</node>
<node TEXT="Listas de Tareas" FOLDED="true" ID="ID_406817597" CREATED="1616167740178" MODIFIED="1616167740178">
<node TEXT="existen dos funcionalidades para agregar listas de tareas:" ID="ID_907194224" CREATED="1616167740178" MODIFIED="1616167740178"/>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_617819201" CREATED="1616167740178" MODIFIED="1616415933316"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="listas de tareas planas" ID="ID_1175221462" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="listas de tareas estructuradas" ID="ID_1992846781" CREATED="1616167740179" MODIFIED="1616167740179"/>
</node>
<node TEXT="la diferencia entre ambas es que la primera sólo considera las tareas de primer nivel, permitiendo que el usuario agregue muchos más apuntes en ellas que no se publicarán en el documento." ID="ID_1576554539" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Esto es útil si las tareas son clonadas de otra parte del documento donde realmente son administradas. De esa forma reflejan el estado actual de ellas" ID="ID_638664913" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Ejemplo de listado de tareas plana:" ID="ID_1515817529" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="plain task list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_684213789" CREATED="1616167740179" MODIFIED="1616415933332"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.plainTaskList(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="Escribir rutinas de cada tipo de nodo" ID="ID_853612649" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<icon BUILTIN="emoji-2714"/>
</node>
<node TEXT="Llevar a librería" ID="ID_1166733980" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<icon BUILTIN="emoji-2714"/>
</node>
<node TEXT="Generar Diálogo" ID="ID_748596118" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<icon BUILTIN="emoji-2714"/>
</node>
<node TEXT="Llevar a librería" FOLDED="true" ID="ID_361787218" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<node TEXT="llevar a librería temporal" ID="ID_1760858763" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<icon BUILTIN="emoji-2714"/>
</node>
<node TEXT="hacer pruebas" ID="ID_279170181" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
</node>
<node TEXT="Escribir mapa de ejemplo / prueba" ID="ID_1248106100" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
<node TEXT="Escribir mapa guía" ID="ID_1863905134" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
<node TEXT="sólo incluir tareas que sean de interés" ID="ID_800316570" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="otras tareas privadas" FOLDED="true" ID="ID_1965843473" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="comprar pan" ID="ID_1320141904" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
<node TEXT="lavar la loza" ID="ID_1669065243" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
</node>
</node>
<node TEXT="Las listas de tareas estructuradas muestran en cambio una estructura de tareas y subtareas. Sin embargo, al igual que en el caso anterior, sólo muestran los textos de los nodos indicados como tareas y sus descendientes en esa misma condición." ID="ID_1450594116" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="De esta forma si hay tareas que dependen de un nodo que no está indicado como tarea, ellas quedan aisladas y no son mostradas." ID="ID_830642676" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Eso permite al usuario administrar el nivel de detalle que desea sea mostrado en el documento" ID="ID_1972973077" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="nested task list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1956266922" CREATED="1616167740179" MODIFIED="1616415933347"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.nestedTaskList(node)</text>
</richcontent>
<node TEXT="Escribir rutinas de cada tipo de nodo" ID="ID_1756109307" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<icon BUILTIN="emoji-2714"/>
</node>
<node TEXT="Llevar a librería" ID="ID_1002062106" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<icon BUILTIN="emoji-2714"/>
</node>
<node TEXT="Generar Diálogo" ID="ID_705991802" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<icon BUILTIN="emoji-2714"/>
</node>
<node TEXT="Llevar a librería" FOLDED="true" ID="ID_1333142317" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<node TEXT="llevar a librería temporal" ID="ID_494333055" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
<icon BUILTIN="emoji-2714"/>
</node>
<node TEXT="hacer pruebas" ID="ID_1329089634" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
</node>
<node TEXT="Escribir mapa de ejemplo / prueba" ID="ID_1817690876" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
<node TEXT="Escribir mapa guía" ID="ID_1402370506" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
<node TEXT="sólo incluir tareas que sean de interés" ID="ID_1262166738" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="otras tareas privadas" FOLDED="true" ID="ID_1819440689" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="comprar pan" ID="ID_1071160591" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
<node TEXT="lavar la loza" ID="ID_1342438552" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-1F532"/>
</node>
</node>
</node>
</node>
<node TEXT="Tablas" FOLDED="true" ID="ID_1051417250" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="También está la funcionalidad para agregar **tablas**" ID="ID_1797061475" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Podemos tener una tabla sencilla come ésta, por ejemplo:" ID="ID_1103123204" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="table" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1012337530" CREATED="1616167740179" MODIFIED="1616415933363"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.table(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="r" FOLDED="true" ID="ID_1788789695" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Nombre" ID="ID_904088823" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Apellido" ID="ID_1954663725" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Edad" ID="ID_1963539248" CREATED="1616167740179" MODIFIED="1616167740179"/>
</node>
<node TEXT="r" FOLDED="true" ID="ID_887572010" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Pedro" ID="ID_949621608" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="López" ID="ID_680633707" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="43" OBJECT="java.lang.Long|43" ID="ID_1395953946" CREATED="1616167740179" MODIFIED="1616167740179"/>
</node>
<node TEXT="r" FOLDED="true" ID="ID_1150870403" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Joe" ID="ID_1467064684" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Murphy" ID="ID_1072688981" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="35" OBJECT="java.lang.Long|35" ID="ID_717977882" CREATED="1616167740179" MODIFIED="1616167740179"/>
</node>
<node TEXT="r" FOLDED="true" ID="ID_1607916906" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Anne" ID="ID_1624411824" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Kind" ID="ID_1021229468" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="48" OBJECT="java.lang.Long|48" ID="ID_220818006" CREATED="1616167740179" MODIFIED="1616167740179"/>
</node>
<node TEXT="r" FOLDED="true" ID="ID_533450867" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Hans" ID="ID_261571962" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Sauer" ID="ID_953030914" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="67" OBJECT="java.lang.Long|67" ID="ID_1097267094" CREATED="1616167740179" MODIFIED="1616167740179"/>
</node>
</node>
<node TEXT="La cual se puede formatear para que la última columna se alinie a la derecha. Y podemos ademá reordenar las filas para, por ejemplo, ponerlas en orden de edad." ID="ID_1140897171" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="table" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_716859809" CREATED="1616167740179" MODIFIED="1616415933378"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.table(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="r" FOLDED="true" ID="ID_783466170" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Nombre" ID="ID_1463057176" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Apellido" ID="ID_1645025567" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Edad" ID="ID_1126738786" CREATED="1616167740179" MODIFIED="1616167740179">
<icon BUILTIN="emoji-27A1"/>
</node>
</node>
<node TEXT="r" FOLDED="true" ID="ID_1844521301" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Hans" ID="ID_309692738" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Sauer" ID="ID_1157528519" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="67" OBJECT="java.lang.Long|67" ID="ID_205544567" CREATED="1616167740179" MODIFIED="1616167740179"/>
</node>
<node TEXT="r" FOLDED="true" ID="ID_473722876" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Anne" ID="ID_1442190860" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="Kind" ID="ID_647567852" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="48" OBJECT="java.lang.Long|48" ID="ID_922724552" CREATED="1616167740179" MODIFIED="1616167740179"/>
</node>
<node TEXT="r" FOLDED="true" ID="ID_1676183910" CREATED="1616167740179" MODIFIED="1616167740179">
<node TEXT="Pedro" ID="ID_1421059807" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="López" ID="ID_1063552875" CREATED="1616167740179" MODIFIED="1616167740179"/>
<node TEXT="43" OBJECT="java.lang.Long|43" ID="ID_1607090028" CREATED="1616167740180" MODIFIED="1616167740180"/>
</node>
<node TEXT="r" FOLDED="true" ID="ID_1922261464" CREATED="1616167740180" MODIFIED="1616167740180">
<node TEXT="Joe" ID="ID_1537961174" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="Murphy" ID="ID_145879734" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="35" OBJECT="java.lang.Long|35" ID="ID_651937071" CREATED="1616167740180" MODIFIED="1616167740180"/>
</node>
</node>
<node TEXT="Las tablas pueden además contener links y otros tipos de objetos" ID="ID_558282554" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="table" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_211784699" CREATED="1616167740180" MODIFIED="1616415933394"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.table(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="r" FOLDED="true" ID="ID_1808772119" CREATED="1616167740180" MODIFIED="1616167740180">
<node TEXT="Nombre" ID="ID_966399588" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="Apellido" ID="ID_1403884763" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="Edad" ID="ID_1840098168" CREATED="1616167740180" MODIFIED="1616167740180">
<icon BUILTIN="emoji-27A1"/>
</node>
<node TEXT="Comentario / Otro" ID="ID_1282214558" CREATED="1616167740180" MODIFIED="1616167740180">
<icon BUILTIN="emoji-2194"/>
</node>
</node>
<node TEXT="r" FOLDED="true" ID="ID_1515332223" CREATED="1616167740180" MODIFIED="1616167740180">
<node TEXT="Hans" ID="ID_532739804" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="Sauer" ID="ID_1628090279" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="67" OBJECT="java.lang.Long|67" ID="ID_242064229" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="text block" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_208981262" CREATED="1616167740180" MODIFIED="1616415933425"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.textBlock(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="parrafo de muestra" FOLDED="true" ID="ID_1106450133" CREATED="1616167740180" MODIFIED="1616167740180"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      &nbsp;el web link $1 y&nbsp;este archivo $2.
    </p>
  </body>
</html></richcontent>
<node TEXT="web link" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_980244221" CREATED="1616167740180" MODIFIED="1616415933472"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.webLink(node)</text>
</richcontent>
<node TEXT="Freeplane API: MenuUtils" ID="ID_575959831" CREATED="1616167740180" MODIFIED="1616167740180" LINK="http://www.freeplane.org/doc/api/index.html?org/freeplane/core/util/MenuUtils.html"/>
</node>
<node TEXT="link to local file" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1837022851" CREATED="1616167740180" MODIFIED="1616415933519"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.fileLink(node)

</text>
</richcontent>
<node ID="ID_1886805646" CONTENT_ID="ID_42131784"/>
</node>
</node>
</node>
</node>
<node TEXT="r" FOLDED="true" ID="ID_47845685" CREATED="1616167740180" MODIFIED="1616167740180">
<node TEXT="Anne" ID="ID_285511867" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="Kind" ID="ID_1089983553" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="48" OBJECT="java.lang.Long|48" ID="ID_584337749" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="web Image" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1118725551" CREATED="1616167740180" MODIFIED="1616415933550"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.webImageLink(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="Freeplane Icon" ID="ID_537190657" CREATED="1616167740180" MODIFIED="1616167740180" LINK="https://a.fsdn.com/allura/p/freeplane/icon?1513717476&amp;w=90"/>
</node>
</node>
<node TEXT="r" FOLDED="true" ID="ID_550904083" CREATED="1616167740180" MODIFIED="1616167740180">
<node TEXT="Pedro" ID="ID_1005881045" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="López" ID="ID_315983055" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="43" OBJECT="java.lang.Long|43" ID="ID_1277153430" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="local image" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_597714335" CREATED="1616167740180" MODIFIED="1616415933582"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.imageLink(node)

 </text>
</richcontent>
<node ID="ID_284961278" CONTENT_ID="ID_1398211418"/>
</node>
</node>
<node TEXT="r" FOLDED="true" ID="ID_1228973089" CREATED="1616167740180" MODIFIED="1616167740180">
<node TEXT="Joe" ID="ID_293580965" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="Murphy" ID="ID_70047152" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="35" OBJECT="java.lang.Long|35" ID="ID_183598475" CREATED="1616167740180" MODIFIED="1616167740180"/>
<node TEXT="Image by &lt;a href=&quot;https://pixabay.com/users/prawny-162579/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=5995333&quot;&gt;Prawny&lt;/a&gt; from &lt;a href=&quot;https://pixabay.com/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=5995333&quot;&gt;Pixabay&lt;/a&gt;" ID="ID_991244703" CREATED="1616167740180" MODIFIED="1616167740180" LINK="https://pixabay.com/users/prawny-162579/?utm_source=link-attribution&amp;amp;utm_medium=referral&amp;amp;utm_campaign=image&amp;amp;utm_content=5995333"/>
</node>
</node>
</node>
<node TEXT="Bloques de código" FOLDED="true" ID="ID_1970342789" CREATED="1616167740181" MODIFIED="1616167740181">
<node TEXT="Por otra parte podemos necesitar publicar bloques de algún código, como por ejemplo" ID="ID_1949337799" CREATED="1616167740181" MODIFIED="1616167740181"/>
<node TEXT="code block" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1206341254" CREATED="1616167740181" MODIFIED="1616415933628"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.codeBlock(node)
    </p>
  </body>
</html></richcontent>
<node TEXT="example code" ID="ID_877303177" CREATED="1616167740181" MODIFIED="1616167740181"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // getting list of icons:
    </p>
    <p>
      msg = &quot;The icons of the selected node are: ${node.icons.icons}&quot;
    </p>
    <p>
      ui.informationMessage(msg.toString())
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="Comentarios" FOLDED="true" ID="ID_1120831717" CREATED="1616167740181" MODIFIED="1616167740181">
<node TEXT="También tenemos la posibilidad de agregar párrafos comentados" ID="ID_955550710" CREATED="1616167740181" MODIFIED="1616167740181"/>
<node TEXT="Comment" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1659502652" CREATED="1616167740181" MODIFIED="1616415933644"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.comment(node)
//xcxc</text>
</richcontent>
<node ID="ID_426699846" TREE_ID="ID_1750828631">
<node ID="ID_1457742867" TREE_ID="ID_1618897570">
<node ID="ID_199735114" TREE_ID="ID_1465410948">
<node ID="ID_116205590" TREE_ID="ID_1865695584"/>
</node>
<node ID="ID_1289720191" TREE_ID="ID_1892185753">
<node ID="ID_510534965" TREE_ID="ID_434045122"/>
</node>
<node ID="ID_306151453" TREE_ID="ID_1299630279"/>
<node ID="ID_1549933542" TREE_ID="ID_682647027">
<node ID="ID_820605124" CONTENT_ID="ID_1398211418"/>
</node>
<node ID="ID_884313191" TREE_ID="ID_324046906">
<node ID="ID_1991412351" CONTENT_ID="ID_42131784"/>
</node>
</node>
</node>
</node>
<node TEXT="Inclusive podemos agregar listas y otros objetos:" ID="ID_92771719" CREATED="1616167740181" MODIFIED="1616167740181"/>
<node TEXT="Comment" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_189657045" CREATED="1616167740181" MODIFIED="1616415933660"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.comment(node) // x</text>
</richcontent>
<node ID="ID_1862836013" TREE_ID="ID_1294941217"/>
<node ID="ID_649171401" TREE_ID="ID_463611406">
<node ID="ID_1469516115" TREE_ID="ID_1353726025">
<node ID="ID_891205301" TREE_ID="ID_1041249831"/>
<node ID="ID_1360491208" TREE_ID="ID_1705311854"/>
</node>
<node ID="ID_333685637" TREE_ID="ID_1510915362">
<node ID="ID_902087646" TREE_ID="ID_1338573363"/>
<node ID="ID_510240662" TREE_ID="ID_1264124918"/>
<node ID="ID_74324863" TREE_ID="ID_342988491"/>
</node>
<node ID="ID_1582253109" TREE_ID="ID_1237954433">
<node ID="ID_1096517540" TREE_ID="ID_1505913759"/>
<node ID="ID_1695321135" TREE_ID="ID_318042286"/>
</node>
</node>
<node ID="ID_100050627" TREE_ID="ID_1777514304"/>
<node ID="ID_340567265" TREE_ID="ID_1700596257">
<node ID="ID_169945662" TREE_ID="ID_1385607011">
<node ID="ID_380060106" TREE_ID="ID_1359115655"/>
<node ID="ID_1089573568" TREE_ID="ID_657329415"/>
</node>
<node ID="ID_1159732715" TREE_ID="ID_930295488">
<node ID="ID_1854128212" TREE_ID="ID_1743658573"/>
<node ID="ID_1061010814" TREE_ID="ID_1785360979"/>
<node ID="ID_1050722569" TREE_ID="ID_1613063323"/>
</node>
<node ID="ID_79843898" TREE_ID="ID_434185018">
<node ID="ID_733963101" TREE_ID="ID_1816202283"/>
<node ID="ID_136461430" TREE_ID="ID_1210711554"/>
</node>
</node>
<node ID="ID_119251623" TREE_ID="ID_558282554"/>
<node ID="ID_1629085506" TREE_ID="ID_211784699">
<node ID="ID_620940777" TREE_ID="ID_1808772119">
<node ID="ID_1791081357" TREE_ID="ID_966399588"/>
<node ID="ID_1907486433" TREE_ID="ID_1403884763"/>
<node ID="ID_1967637028" TREE_ID="ID_1840098168"/>
<node ID="ID_386009193" TREE_ID="ID_1282214558"/>
</node>
<node ID="ID_892257162" TREE_ID="ID_1515332223">
<node ID="ID_723793390" TREE_ID="ID_532739804"/>
<node ID="ID_435193318" TREE_ID="ID_1628090279"/>
<node ID="ID_898774902" TREE_ID="ID_242064229"/>
<node ID="ID_422291732" TREE_ID="ID_208981262">
<node ID="ID_377354981" TREE_ID="ID_1106450133">
<node ID="ID_1670704097" TREE_ID="ID_980244221">
<node ID="ID_1844163421" TREE_ID="ID_575959831"/>
</node>
<node ID="ID_1858532539" TREE_ID="ID_1837022851">
<node ID="ID_209530284" CONTENT_ID="ID_42131784"/>
</node>
</node>
</node>
</node>
<node ID="ID_1113341984" TREE_ID="ID_47845685">
<node ID="ID_773353983" TREE_ID="ID_285511867"/>
<node ID="ID_362857178" TREE_ID="ID_1089983553"/>
<node ID="ID_1005974109" TREE_ID="ID_584337749"/>
<node ID="ID_1444648080" TREE_ID="ID_1118725551">
<node ID="ID_1588154536" TREE_ID="ID_537190657"/>
</node>
</node>
<node ID="ID_324233392" TREE_ID="ID_550904083">
<node ID="ID_1777211666" TREE_ID="ID_1005881045"/>
<node ID="ID_601550921" TREE_ID="ID_315983055"/>
<node ID="ID_1180012260" TREE_ID="ID_1277153430"/>
<node ID="ID_400620977" TREE_ID="ID_597714335">
<node ID="ID_1507821581" CONTENT_ID="ID_1398211418"/>
</node>
</node>
<node ID="ID_1493738925" TREE_ID="ID_1228973089">
<node ID="ID_272902849" TREE_ID="ID_293580965"/>
<node ID="ID_494229458" TREE_ID="ID_70047152"/>
<node ID="ID_849414549" TREE_ID="ID_183598475"/>
<node ID="ID_1195550300" TREE_ID="ID_991244703"/>
</node>
</node>
</node>
<node TEXT="Inclusive se podría agregar un documento com comentario dentro de otro:" ID="ID_1914298323" CREATED="1616167740181" MODIFIED="1616167740181"/>
<node TEXT="Comment" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1854433793" CREATED="1616167740181" MODIFIED="1616415933675"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.comment(node) //xz</text>
</richcontent>
<node TEXT="Markdown document.md" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_357320271" CREATED="1616167740181" MODIFIED="1617023639434">
<attribute NAME="headersToUnderline" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="true"/>
<attribute NAME="topHeadersNumbered" VALUE="true"/>
<attribute NAME="topHeaderStartingNumber" VALUE="8" OBJECT="org.freeplane.features.format.FormattedNumber|8|#0.####"/>
<attribute NAME="fileLinksRelative" VALUE="false"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.document(node)  </text>
</richcontent>
<node TEXT="Capitulo Final" FOLDED="true" ID="ID_1178185070" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="El encuentro" FOLDED="true" ID="ID_457310406" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="Cuando Anja llegó al refugio pudo ver que salía humo por la chimenea." ID="ID_1321038310" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="Pedro preparaba té caliente para ambos y había extendido el mapa sobre la mesa." ID="ID_1041072917" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="..." ID="ID_1932146927" CREATED="1616167740182" MODIFIED="1616167740182"/>
</node>
<node TEXT="El regreso" FOLDED="true" ID="ID_1534781717" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="Al amanecer el dinosario seguía allí, junto a las llaves del auto." ID="ID_71252379" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="Tomaron cajas y maletas y las subieron al auto. Nadie decía palabra alguna." ID="ID_784924609" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="Lo que había pasado estos días había cambiado para siempre su relación." ID="ID_978240611" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="Ya en la ciudad se despidieron sonriendo y nunca más se volvieron a contactar." ID="ID_84337103" CREATED="1616167740182" MODIFIED="1616167740182"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="Conclusiones" FOLDED="true" ID="ID_49752540" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="párrafo introductorio" ID="ID_111875638" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="listado de conclusiones" ID="ID_1964525631" CREATED="1616167740182" MODIFIED="1616167740182"/>
</node>
</node>
</node>
</node>
<node TEXT="Markdown document.md" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1081890191" CREATED="1616167740182" MODIFIED="1647097097774" VSHIFT_QUANTITY="-0.75 pt">
<attribute_layout NAME_WIDTH="124.5 pt" VALUE_WIDTH="57 pt"/>
<attribute NAME="headersToUnderline" VALUE="2" OBJECT="org.freeplane.features.format.FormattedNumber|2"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="true"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<attribute NAME="topHeaderStartingNumber" VALUE="1" OBJECT="org.freeplane.features.format.FormattedNumber|1"/>
<attribute NAME="fileLinksRelative" VALUE="false"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>= edofro.MarkDownHelper.MDH.document(node)  </text>
</richcontent>
<node TEXT="Prueba Markdown" FOLDED="true" ID="ID_325335559" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="Introducción" FOLDED="true" ID="ID_48193939" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="Este es el documento de prueba, donde quiero ver si los diferentes tipos de nodosMD funcionan" ID="ID_185780882" CREATED="1616167740182" MODIFIED="1616167740182"/>
</node>
<node TEXT="Tabla de contenidos" FOLDED="true" ID="ID_1984428182" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="TOC(n)" STYLE_REF="MarkdownHelperNode" ID="ID_35689706" CREATED="1616167740182" MODIFIED="1616416081586"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.TOC(node) //</text>
</richcontent>
<attribute NAME="TOClevels" VALUE="2" OBJECT="org.freeplane.features.format.FormattedNumber|2|#0.####"/>
</node>
</node>
<node TEXT="Demostraciones" FOLDED="true" ID="ID_1237606809" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="webLink(n) (absolute)" FOLDED="true" ID="ID_766860446" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="webLink(n) (absolute)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_64250548" CREATED="1616167740182" MODIFIED="1616415933707">
<icon BUILTIN="emoji-21A9"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.webLink(node)</text>
</richcontent>
<node TEXT="Groovy Switch statement" ID="ID_1421334078" CREATED="1616167740182" MODIFIED="1616167740182" LINK="https://www.tutorialspoint.com/groovy/groovy_switch_statement.htm"><richcontent CONTENT-TYPE="plain/" TYPE="DETAILS"/>
</node>
</node>
</node>
<node TEXT="webimageLink(n) (absolute)" FOLDED="true" ID="ID_673024087" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="webimageLink(n) (absolute)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_463534554" CREATED="1616167740182" MODIFIED="1616415933722">
<icon BUILTIN="emoji-21A9"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.webImageLink(node) </text>
</richcontent>
<node TEXT="https://github.com/EdoFro/hello-world/raw/master/testFormulaNodeChange.gif" ID="ID_920507341" CREATED="1616167740182" MODIFIED="1616167740182" LINK="https://github.com/EdoFro/hello-world/raw/master/testFormulaNodeChange.gif"/>
</node>
</node>
<node TEXT="fileLink(nodo)" FOLDED="true" ID="ID_906823867" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="fileLink(nodo)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1542257455" CREATED="1616167740182" MODIFIED="1616415933738">
<icon BUILTIN="emoji-21A9"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.fileLink(node)&#xd;
</text>
</richcontent>
<node TEXT="readme.txt" ID="ID_1571178531" CREATED="1616167740182" MODIFIED="1678219439786" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/readme.txt">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="295" OBJECT="org.freeplane.features.format.FormattedNumber|295|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      This directory contains the latest preview versions of Freeplane created for testing purposes almost every week.
    </p>
    <p>
      The data format of the maps saved and read by preview versions can be changed without any notice.
    </p>
    <p>
      
    </p>
    <p>
      The software is distributed under General Public License version 2 or later.
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="imageLink(n)" FOLDED="true" ID="ID_1531222812" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="imageLink(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_162668419" CREATED="1616167740182" MODIFIED="1616415933753">
<icon BUILTIN="emoji-21A9"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.imageLink(node)</text>
</richcontent>
<node TEXT="heros-journey.png" ID="ID_896569813" CREATED="1616167740182" MODIFIED="1678219439797" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/heros-journey.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="34.338" OBJECT="org.freeplane.features.format.FormattedNumber|34338|#,##0"/>
</node>
</node>
</node>
<node TEXT="list(n)" FOLDED="true" ID="ID_1302121005" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="list(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1457056100" CREATED="1616167740182" MODIFIED="1616415933769"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node)
</text>
</richcontent>
<node TEXT="item 1" FOLDED="true" ID="ID_274989668" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="item 3" ID="ID_646041722" CREATED="1616167740182" MODIFIED="1616167740182">
<icon BUILTIN="emoji-1F537"/>
</node>
<node TEXT="item 3a" ID="ID_1744472768" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="item 3b" ID="ID_630163681" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="item 2" ID="ID_1072554123" CREATED="1616167740182" MODIFIED="1616167740182"/>
</node>
<node TEXT="item 4" FOLDED="true" ID="ID_1175490303" CREATED="1616167740182" MODIFIED="1616167740182">
<icon BUILTIN="emoji-1F522"/>
<node TEXT="item 1" ID="ID_1367238225" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="item 2" ID="ID_486445758" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="item 4" ID="ID_1238724840" CREATED="1616167740182" MODIFIED="1616167740182"/>
</node>
<node TEXT="item 3" FOLDED="true" ID="ID_448468850" CREATED="1616167740182" MODIFIED="1616167740182">
<icon BUILTIN="emoji-1F537"/>
<node TEXT="item 3a" ID="ID_916311990" CREATED="1616167740182" MODIFIED="1616167740182"/>
<node TEXT="item 3b" ID="ID_533274962" CREATED="1616167740182" MODIFIED="1616167740182"/>
</node>
</node>
</node>
<node TEXT="plainTaskList(n)" FOLDED="true" ID="ID_1027533014" CREATED="1616167740182" MODIFIED="1616167740182">
<node TEXT="plainTaskList(n)" ID="ID_211136068" CREATED="1618240006550" MODIFIED="1618240006579">
<icon BUILTIN="emoji-1F343"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      - [ ] pending task
    </p>
    <p>
      - [ ] pending task
    </p>
    <p>
      - [x] finished task
    </p>
    <p>
      - [ ] **next task**
    </p>
    <p>
      - [ ] *&lt;del&gt;discarded task&lt;/del&gt;*
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="nestedTaskList(n)" FOLDED="true" ID="ID_739474205" CREATED="1616167740183" MODIFIED="1616167740183">
<node TEXT="nestedTaskList(n)" ID="ID_1766633078" CREATED="1618239979676" MODIFIED="1618239979725">
<icon BUILTIN="emoji-1F343"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      - [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] **next task**
    </p>
    <p>
      - [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] *&lt;del&gt;discarded task&lt;/del&gt;*
    </p>
    <p>
      - [ ] **next task**
    </p>
    <p>
      - [ ] *&lt;del&gt;discarded task&lt;/del&gt;*
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="codeBlock(n)" FOLDED="true" ID="ID_451735636" CREATED="1616167740183" MODIFIED="1616167740183">
<node TEXT="codeBlock(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_478801560" CREATED="1616167740183" MODIFIED="1616416081633"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.codeBlock(node)
</text>
</richcontent>
<node TEXT="pasar texto a nota e indicar formato Markdown" ID="ID_1028958767" CREATED="1616167740183" MODIFIED="1616167740183"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // import org.freeplane.features.text.TextController
    </p>
    <p>
      import org.freeplane.features.note.NoteController
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def nodos = c.selecteds
    </p>
    <p>
      
    </p>
    <p>
      nodos.each{nodo -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.note = nodo.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;setNoteMarkdown(nodo)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def setNoteMarkdown(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return NoteController.getController().setNoteContentType(n.delegate, 'markdown')
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="text block" FOLDED="true" ID="ID_389760061" CREATED="1616167740183" MODIFIED="1616167740183">
<node TEXT="textBlock(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1751472257" CREATED="1616167740183" MODIFIED="1616416081664"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.textBlock(node)
//</text>
</richcontent>
<node TEXT="texto de ejemplo" FOLDED="true" ID="ID_1030676156" CREATED="1616167740183" MODIFIED="1617035232457"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      En este texto quiero intercalar la imagen $1, el link al archivo $2 y el link a la página web $3
    </p>
    <p>
      
    </p>
    <p>
      y de nuevo $2 es el link al archivo
    </p>
  </body>
</html></richcontent>
<node TEXT="imageLink(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1217877496" CREATED="1616167740183" MODIFIED="1616415933816"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.imageLink(node)
</text>
</richcontent>
<node TEXT="heros-journey.png" ID="ID_1067257698" CREATED="1616167740183" MODIFIED="1678219439807" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/heros-journey.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="34.338" OBJECT="org.freeplane.features.format.FormattedNumber|34338|#,##0"/>
</node>
</node>
<node TEXT="fileLink(nodo)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_6480592" CREATED="1616167740183" MODIFIED="1616415933832"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.fileLink(node)&#xd;
 </text>
</richcontent>
<node TEXT="readme.txt" ID="ID_537393367" CREATED="1616167740183" MODIFIED="1678219439817" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/readme.txt">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="295" OBJECT="org.freeplane.features.format.FormattedNumber|295|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      This directory contains the latest preview versions of Freeplane created for testing purposes almost every week.
    </p>
    <p>
      The data format of the maps saved and read by preview versions can be changed without any notice.
    </p>
    <p>
      
    </p>
    <p>
      The software is distributed under General Public License version 2 or later.
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="webLink(n) (absolute)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1999338487" CREATED="1616167740183" MODIFIED="1616415933847"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.webLink(node)</text>
</richcontent>
<node TEXT="Groovy Switch statement" ID="ID_1895243875" CREATED="1616167740183" MODIFIED="1616167740183" LINK="https://www.tutorialspoint.com/groovy/groovy_switch_statement.htm"><richcontent CONTENT-TYPE="plain/" TYPE="DETAILS"/>
</node>
</node>
</node>
</node>
<node TEXT="textBlock(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_668398324" CREATED="1616167740183" MODIFIED="1616416081695"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.textBlock(node)
//</text>
</richcontent>
<node TEXT="texto" FOLDED="true" ID="ID_426626846" CREATED="1616167740183" MODIFIED="1616167740183"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      es una prueba:
    </p>
    <p>
      
    </p>
    <p>
      había una vez $1, $2 y $3
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
<node TEXT="cabra" ID="ID_901524578" CREATED="1616167740183" MODIFIED="1616167740183"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      una cabra
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="cerdo" ID="ID_988342887" CREATED="1616167740183" MODIFIED="1616167740183"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      un cerdo
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="perro" ID="ID_1601155780" CREATED="1616167740183" MODIFIED="1616167740183"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      un perro
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="vaca" ID="ID_852466843" CREATED="1616167740183" MODIFIED="1616167740183"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      una vaca
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="y este no debería salir" FOLDED="true" ID="ID_138678841" CREATED="1616167740183" MODIFIED="1616167740183"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      no debería salir
    </p>
    <p>
      
    </p>
    <p>
      $1
    </p>
    <p>
      
    </p>
    <p>
      $2
    </p>
    <p>
      
    </p>
    <p>
      $3
    </p>
    <p>
      
    </p>
    <p>
      $4
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
<node TEXT="cabra" ID="ID_1292688626" CREATED="1616167740184" MODIFIED="1616167740184"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      una cabra
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="vaca" ID="ID_1209683920" CREATED="1616167740184" MODIFIED="1616167740184"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      una vaca
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="cerdo" ID="ID_45977040" CREATED="1616167740184" MODIFIED="1616167740184"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      un cerdo
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="perro" ID="ID_228212147" CREATED="1616167740184" MODIFIED="1616167740184"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      un perro
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="textBlock(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1150590316" CREATED="1616167740184" MODIFIED="1616416081742"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.textBlock(node)
//</text>
</richcontent>
<node TEXT="texto" ID="ID_175181520" CREATED="1616167740184" MODIFIED="1616167740184"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      hola
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="table(n)" FOLDED="true" ID="ID_239171038" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="table(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_477328729" CREATED="1616167740184" MODIFIED="1616416201992"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.table(node)

</text>
</richcontent>
<node TEXT="Row" FOLDED="true" ID="ID_1763937005" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="Nombre" ID="ID_1278044739" CREATED="1616167740184" MODIFIED="1616167740184"/>
<node TEXT="Apellido" ID="ID_400235849" CREATED="1616167740184" MODIFIED="1616167740184">
<icon BUILTIN="emoji-2194"/>
</node>
<node TEXT="Edad" ID="ID_904880309" CREATED="1616167740184" MODIFIED="1616167740184">
<icon BUILTIN="emoji-27A1"/>
</node>
</node>
<node TEXT="Row" FOLDED="true" ID="ID_139607916" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="Gustav" ID="ID_1378385543" CREATED="1616167740184" MODIFIED="1616167740184"/>
<node TEXT="Perez" ID="ID_1148889777" CREATED="1616167740184" MODIFIED="1616167740184"/>
<node TEXT="45" OBJECT="java.lang.Long|45" ID="ID_1262160513" CREATED="1616167740184" MODIFIED="1616167740184"/>
</node>
<node TEXT="Row" FOLDED="true" ID="ID_1973144868" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="Pedro" ID="ID_1555678449" CREATED="1616167740184" MODIFIED="1616167740184"/>
<node TEXT="fileLink(nodo)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_931483776" CREATED="1616167740184" MODIFIED="1616415933863"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.fileLink(node)&#xd;
 </text>
</richcontent>
<node TEXT="readme.txt" ID="ID_1699887681" CREATED="1616167740184" MODIFIED="1678219439826" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/readme.txt">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="295" OBJECT="org.freeplane.features.format.FormattedNumber|295|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      This directory contains the latest preview versions of Freeplane created for testing purposes almost every week.
    </p>
    <p>
      The data format of the maps saved and read by preview versions can be changed without any notice.
    </p>
    <p>
      
    </p>
    <p>
      The software is distributed under General Public License version 2 or later.
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="33" OBJECT="java.lang.Long|33" ID="ID_1973581617" CREATED="1616167740184" MODIFIED="1616167740184"/>
</node>
<node TEXT="Row" FOLDED="true" ID="ID_578122404" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="John" ID="ID_338459303" CREATED="1616167740184" MODIFIED="1616167740184"/>
<node TEXT="webLink(n) (absolute)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_426280659" CREATED="1616167740184" MODIFIED="1616415933878"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text>= edofro.MarkDownHelper.MDH.webLink(node)</text>
</richcontent>
<node TEXT="Groovy Switch statement" ID="ID_803476615" CREATED="1616167740184" MODIFIED="1616167740184" LINK="https://www.tutorialspoint.com/groovy/groovy_switch_statement.htm"><richcontent CONTENT-TYPE="plain/" TYPE="DETAILS"/>
</node>
</node>
<node TEXT="imageLink(n)" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_1970852729" CREATED="1616167740184" MODIFIED="1616415933894"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.imageLink(node)
</text>
</richcontent>
<node TEXT="heros-journey.png" ID="ID_1109300051" CREATED="1616167740184" MODIFIED="1678219439836" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/heros-journey.png">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="34.338" OBJECT="org.freeplane.features.format.FormattedNumber|34338|#,##0"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="TOC(n)" FOLDED="true" ID="ID_1534400916" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="TOC(n)" STYLE_REF="MarkdownHelperNode" ID="ID_169882884" CREATED="1616167740184" MODIFIED="1616416081774"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.TOC(node) //</text>
</richcontent>
<attribute NAME="TOClevels" VALUE="2" OBJECT="org.freeplane.features.format.FormattedNumber|2|#0.####"/>
</node>
</node>
<node TEXT="horizontal rule" FOLDED="true" ID="ID_1885858895" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="horizontal rule" STYLE_REF="MarkdownHelperNode" ID="ID_814893794" CREATED="1616167740184" MODIFIED="1616167740184"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ----
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Comments" FOLDED="true" ID="ID_528197545" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="aún no implementado" ID="ID_384314624" CREATED="1616167740184" MODIFIED="1616167740184"/>
</node>
</node>
<node TEXT="Final" FOLDED="true" ID="ID_1808911184" CREATED="1616167740184" MODIFIED="1616167740184">
<node TEXT="Conclusiones" ID="ID_1037250541" CREATED="1616167740184" MODIFIED="1617024238222"/>
<node TEXT="Agradecimientos" ID="ID_93355449" CREATED="1616167740184" MODIFIED="1616167740184"/>
<node TEXT="ToC" STYLE_REF="MarkdownHelperNode" ID="ID_347124863" CREATED="1616167740184" MODIFIED="1616415933925">
<attribute NAME="TOClevels" VALUE="2" OBJECT="org.freeplane.features.format.FormattedNumber|2"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.TOC(node)
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node TEXT="Markdown document.md" ID="ID_376511677" CREATED="1616167740185" MODIFIED="1678219439846" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/Markdown%20document.md">
<icon BUILTIN="emoji-1F343"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      # Prueba Markdown
    </p>
    <p>
      
    </p>
    <p>
      -----
    </p>
    <p>
      
    </p>
    <p>
      ## 1. Introducción
    </p>
    <p>
      
    </p>
    <p>
      -----
    </p>
    <p>
      
    </p>
    <p>
      Este es el documento de prueba, donde quiero ver si los diferentes tipos de nodosMD funcionan
    </p>
    <p>
      
    </p>
    <p>
      ## 2. Tabla de contenidos
    </p>
    <p>
      
    </p>
    <p>
      -----
    </p>
    <p>
      
    </p>
    <p>
      [Prueba Markdown](#Prueba-Markdown)
    </p>
    <p>
      
    </p>
    <p>
      [1. Introducción](#1-Introducción)
    </p>
    <p>
      
    </p>
    <p>
      [2. Tabla de contenidos](#2-Tabla-de-contenidos)
    </p>
    <p>
      
    </p>
    <p>
      [3. Demostraciones](#3-Demostraciones)
    </p>
    <p>
      
    </p>
    <p>
      [4. Final](#4-Final)
    </p>
    <p>
      
    </p>
    <p>
      ## 3. Demostraciones
    </p>
    <p>
      
    </p>
    <p>
      -----
    </p>
    <p>
      
    </p>
    <p>
      ### 3.1. webLink(n) (absolute)
    </p>
    <p>
      
    </p>
    <p>
      [Groovy Switch statement](https://www.tutorialspoint.com/groovy/groovy_switch_statement.htm)
    </p>
    <p>
      
    </p>
    <p>
      ### 3.2. webimageLink(n) (absolute)
    </p>
    <p>
      
    </p>
    <p>
      ![https://github.com/EdoFro/hello-world/raw/master/testFormulaNodeChange.gif](https://github.com/EdoFro/hello-world/raw/master/testFormulaNodeChange.gif)
    </p>
    <p>
      
    </p>
    <p>
      ### 3.3. fileLink(nodo)
    </p>
    <p>
      
    </p>
    <p>
      [readme.txt](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignore/readme.txt)
    </p>
    <p>
      
    </p>
    <p>
      ### 3.4. imageLink(n)
    </p>
    <p>
      
    </p>
    <p>
      ![heros-journey.png](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignore/heros-journey.png)
    </p>
    <p>
      
    </p>
    <p>
      ### 3.5. list(n)
    </p>
    <p>
      
    </p>
    <p>
      * item 1
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* item 3
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* item 3a
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* item 3b
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* item 2
    </p>
    <p>
      * item 4
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;1. item 1
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;1. item 2
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;1. item 4
    </p>
    <p>
      * item 3
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* item 3a
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;* item 3b
    </p>
    <p>
      
    </p>
    <p>
      ### 3.6. plainTaskList(n)
    </p>
    <p>
      
    </p>
    <p>
      - [ ] pending task
    </p>
    <p>
      - [ ] pending task
    </p>
    <p>
      - [x] finished task
    </p>
    <p>
      - [ ] **next task**
    </p>
    <p>
      - [ ] *&lt;del&gt;discarded task&lt;/del&gt;*
    </p>
    <p>
      
    </p>
    <p>
      ### 3.7. nestedTaskList(n)
    </p>
    <p>
      
    </p>
    <p>
      - [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] pending task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] **next task**
    </p>
    <p>
      - [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- [x] finished task
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;- [ ] *&lt;del&gt;discarded task&lt;/del&gt;*
    </p>
    <p>
      - [ ] **next task**
    </p>
    <p>
      - [ ] *&lt;del&gt;discarded task&lt;/del&gt;*
    </p>
    <p>
      
    </p>
    <p>
      ### 3.8. codeBlock(n)
    </p>
    <p>
      
    </p>
    <p>
      Code: **'pasar texto a nota e indicar formato Markdown'**
    </p>
    <p>
      
    </p>
    <p>
      ```groovy
    </p>
    <p>
      // import org.freeplane.features.text.TextController
    </p>
    <p>
      import org.freeplane.features.note.NoteController
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def nodos = c.selecteds
    </p>
    <p>
      
    </p>
    <p>
      nodos.each{nodo -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nodo.note = nodo.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;setNoteMarkdown(nodo)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def setNoteMarkdown(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return NoteController.getController().setNoteContentType(n.delegate, 'markdown')
    </p>
    <p>
      }
    </p>
    <p>
      ```
    </p>
    <p>
      
    </p>
    <p>
      ### 3.9. text block
    </p>
    <p>
      
    </p>
    <p>
      En este texto quiero intercalar la imagen ![heros-journey.png](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignore/heros-journey.png), el link al archivo [readme.txt](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignore/readme.txt) y el link a la página web [Groovy Switch statement](https://www.tutorialspoint.com/groovy/groovy_switch_statement.htm)
    </p>
    <p>
      
    </p>
    <p>
      y de nuevo [readme.txt](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignore/readme.txt) es el link al archivo
    </p>
    <p>
      
    </p>
    <p>
      es una prueba:
    </p>
    <p>
      
    </p>
    <p>
      había una vez una cabra, un cerdo y un perro
    </p>
    <p>
      
    </p>
    <p>
      hola
    </p>
    <p>
      
    </p>
    <p>
      ### 3.10. table(n)
    </p>
    <p>
      
    </p>
    <p>
      |Nombre|Apellido|Edad|
    </p>
    <p>
      |----|:----:|----:|
    </p>
    <p>
      |Gustav|Perez|45|
    </p>
    <p>
      |Pedro|[readme.txt](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignore/readme.txt)|33|
    </p>
    <p>
      |John|[Groovy Switch statement](https://www.tutorialspoint.com/groovy/groovy_switch_statement.htm)|![heros-journey.png](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignore/heros-journey.png)|
    </p>
    <p>
      
    </p>
    <p>
      ### 3.11. TOC(n)
    </p>
    <p>
      
    </p>
    <p>
      [Prueba Markdown](#Prueba-Markdown)
    </p>
    <p>
      
    </p>
    <p>
      [1. Introducción](#1-Introducción)
    </p>
    <p>
      
    </p>
    <p>
      [2. Tabla de contenidos](#2-Tabla-de-contenidos)
    </p>
    <p>
      
    </p>
    <p>
      [3. Demostraciones](#3-Demostraciones)
    </p>
    <p>
      
    </p>
    <p>
      [4. Final](#4-Final)
    </p>
    <p>
      
    </p>
    <p>
      ### 3.12. horizontal rule
    </p>
    <p>
      
    </p>
    <p>
      ----
    </p>
    <p>
      
    </p>
    <p>
      ### 3.13. Comments
    </p>
    <p>
      
    </p>
    <p>
      aún no implementado
    </p>
    <p>
      
    </p>
    <p>
      ## 4. Final
    </p>
    <p>
      
    </p>
    <p>
      -----
    </p>
    <p>
      
    </p>
    <p>
      Conlusiones
    </p>
    <p>
      
    </p>
    <p>
      Agradecimientos
    </p>
    <p>
      
    </p>
    <p>
      ToC
    </p>
    <p>
      
    </p>
    <p>
      [Prueba Markdown](#Prueba-Markdown)
    </p>
    <p>
      
    </p>
    <p>
      [1. Introducción](#1-Introducción)
    </p>
    <p>
      
    </p>
    <p>
      [2. Tabla de contenidos](#2-Tabla-de-contenidos)
    </p>
    <p>
      
    </p>
    <p>
      [3. Demostraciones](#3-Demostraciones)
    </p>
    <p>
      
    </p>
    <p>
      [4. Final](#4-Final)
    </p>
  </body>
</html></richcontent>
<attribute_layout NAME_WIDTH="87 pt" VALUE_WIDTH="87 pt"/>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.835" OBJECT="org.freeplane.features.format.FormattedNumber|3835|#,##0"/>
</node>
<node TEXT="Calvin and Hobbes Example.mm" ID="ID_1013615012" CREATED="1617024381124" MODIFIED="1678219439870" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/Calvin%20and%20Hobbes%20Example.mm">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="60.181" OBJECT="org.freeplane.features.format.FormattedNumber|60181|#,##0"/>
</node>
<node TEXT="Calvin and Hobbes.md" ID="ID_841030946" CREATED="1617209269620" MODIFIED="1678219439881" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/Calvin%20and%20Hobbes.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="11.308" OBJECT="org.freeplane.features.format.FormattedNumber|11308|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text># Calvin and Hobbes

-----

## 1. Preface

-----

I made this markdown document and its source mindmap as an example to show how the **Markdown Helper AddOn** works and to show some of its features.

This document isn&apos;t an official source of information about the **Calvin and Hobbes** comic strip. I made this document about it because I like **Mr. Watterson** work very much and I think that any extra showroom for it is well deserved.

All information in this document comes from the [&apos;Calvin and Hobbes&apos; wiki page available in FANDOM.com](https://calvinandhobbes.fandom.com/wiki/Main_Page)

Please look in there if you want to know more about **Calvin and Hobbes**.

## 2. Content

-----

[Calvin and Hobbes](#Calvin-and-Hobbes)

[1. Preface](#1-Preface)

[2. Content](#2-Content)

[3. Story Arcs](#3-Story-Arcs)

[4. Characters](#4-Characters)

[5. Watterson](#5-Watterson)

[6. Books](#6-Books)

## 3. Story Arcs

-----

In [Calvin and Hobbes](https://calvinandhobbes.fandom.com/wiki/Calvin_and_Hobbes), story arcs are a theme or plotline that lasts longer than a day. They can range from a few days to a month, such as the arc with [Calvin](https://calvinandhobbes.fandom.com/wiki/Calvin) accidentally pushing [his parents&apos; car](https://calvinandhobbes.fandom.com/wiki/Car) into a ditch.

Generally, the strip had week-long story arcs for the first couple of years and had its longest arcs in the middle of the its life. Later on, the arcs became fewer and farther between as [Bill Watterson](https://calvinandhobbes.fandom.com/wiki/Bill_Watterson) focused more on [Sunday strips](https://calvinandhobbes.fandom.com/wiki/Sunday_comics).

Story arcs are used mainly to develop characters, introduce new devices, or investigate new artistic directions.

## 4. Characters

-----

The principal characters of this strip are the followings:

|Name|Image|Link|Description|
|----|:----:|:----:|----|
|Calvin|![https://static.wikia.nocookie.net/candh/images/7/78/Image.jpg/revision/latest/scale-to-width-down/139?cb=20130902154949](https://static.wikia.nocookie.net/candh/images/7/78/Image.jpg/revision/latest/scale-to-width-down/139?cb=20130902154949)|[Calvin](https://calvinandhobbes.fandom.com/wiki/Calvin)|
|Hobbes|![https://static.wikia.nocookie.net/candh/images/3/36/61D_hobbes.jpg/revision/latest/scale-to-width-down/133?cb=20121112232636](https://static.wikia.nocookie.net/candh/images/3/36/61D_hobbes.jpg/revision/latest/scale-to-width-down/133?cb=20121112232636)|[Hobbes](https://calvinandhobbes.fandom.com/wiki/Hobbes)|
|Susie Derkins|![https://static.wikia.nocookie.net/candh/images/a/a4/Susie_lalal.jpg/revision/latest/scale-to-width-down/140?cb=20130902161428](https://static.wikia.nocookie.net/candh/images/a/a4/Susie_lalal.jpg/revision/latest/scale-to-width-down/140?cb=20130902161428)|[Susie Derkins](https://calvinandhobbes.fandom.com/wiki/Susie_Derkins)|
|Calvin&apos;s mother|![https://static.wikia.nocookie.net/candh/images/3/32/Cmom_mainpage.jpeg/revision/latest/scale-to-width-down/150?cb=20170703031759](https://static.wikia.nocookie.net/candh/images/3/32/Cmom_mainpage.jpeg/revision/latest/scale-to-width-down/150?cb=20170703031759)|[Calvin&apos;s mother](https://calvinandhobbes.fandom.com/wiki/Calvin%27s_mother)|
|Calvin&apos;s father|![https://static.wikia.nocookie.net/candh/images/c/ca/Dad.jpg/revision/latest/scale-to-width-down/150?cb=20200108212915](https://static.wikia.nocookie.net/candh/images/c/ca/Dad.jpg/revision/latest/scale-to-width-down/150?cb=20200108212915)|[Calvin&apos;s father](https://calvinandhobbes.fandom.com/wiki/Calvin%27s_father)|
|Rosalyn|![https://static.wikia.nocookie.net/candh/images/2/20/Rosalyn.png/revision/latest/scale-to-width-down/49?cb=20200108212824](https://static.wikia.nocookie.net/candh/images/2/20/Rosalyn.png/revision/latest/scale-to-width-down/49?cb=20200108212824)|[Rosalyn](https://calvinandhobbes.fandom.com/wiki/Rosalyn)|
|Moe|![https://static.wikia.nocookie.net/candh/images/8/81/Moe.jpg/revision/latest/scale-to-width-down/150?cb=20090401050911](https://static.wikia.nocookie.net/candh/images/8/81/Moe.jpg/revision/latest/scale-to-width-down/150?cb=20090401050911)|[Moe](https://calvinandhobbes.fandom.com/wiki/Moe)|
|Miss Wormwood|![https://static.wikia.nocookie.net/candh/images/7/79/Wormwoodmainpagepic.png/revision/latest/scale-to-width-down/121?cb=20170713194559](https://static.wikia.nocookie.net/candh/images/7/79/Wormwoodmainpagepic.png/revision/latest/scale-to-width-down/121?cb=20170713194559)|[Miss Wormwood](https://calvinandhobbes.fandom.com/wiki/Miss_Wormwood)|
|Alter Egos|![https://static.wikia.nocookie.net/candh/images/e/e7/Unknown-5.jpeg/revision/latest/scale-to-width-down/111?cb=20110320025133](https://static.wikia.nocookie.net/candh/images/e/e7/Unknown-5.jpeg/revision/latest/scale-to-width-down/111?cb=20110320025133)|[Alter Egos](https://calvinandhobbes.fandom.com/wiki/Category:Alter_egos)|

## 5. Watterson

-----

William Boyd &quot;Bill&quot; Watterson II (born July 5, 1958) is the author of [Calvin and Hobbes](https://calvinandhobbes.fandom.com/wiki/Calvin_and_Hobbes). He was author and artist during the strip&apos;s decade-long run. Calvin and Hobbes abruptly ceased publication in 1995, when Watterson decided to retire. He is now removed completely from the public eye, and is reluctant to take interviews, preferring to let his work speak for itself. He drew Calvin&apos;s father to look exactly like himself, for symbolism. Bill is currently 62 years old.

## 6. Books

-----

Despite [ Bill Watterson](https://calvinandhobbes.fandom.com/wiki/Bill_Watterson)&apos;s reluctance to sell [merchandise](https://calvinandhobbes.fandom.com/wiki/Licensing) based on [merchandise](https://calvinandhobbes.fandom.com/wiki/Licensing) or its characters, he still allowed some merchandise to reach the public, one of the few was books. There have so far been eighteen books (including one three-volume set) published in the United States.

The books, referred to as &quot;Collections&quot;, form a complete archive of the newspaper strips, except for a [single daily strip](https://calvinandhobbes.fandom.com/wiki/Alternate_strip) from November 28, 1985 (The collections do contain a strip for this date, but it is not the same strip that appeared in some newspapers). &quot;Treasuries&quot; combine the two preceding collections with bonus material and include color reprints of Sunday comics, and irregular printed collections reprint already published comics with a particular intent, such as providing original sketches or commentary.

A complete collection of Calvin and Hobbes strips, in three hardcover volumes, with a total 1440 pages, was released on October 4, 2005, by [Andrews &amp; McMeel](https://calvinandhobbes.fandom.com/wiki/Andrews_%26_McMeel) Publishing. It also includes color prints of the art used on paperback covers, the Treasuries&apos; extra illustrated stories and poems, and an original 14-page introduction by Bill Watterson. Unfortunately, the alternate 1985 strip is still omitted, and two other strips (January 7, 1987, and November 25, 1988) have altered dialogue.

To celebrate the release, Calvin and Hobbes reruns were made available to newspapers from Sunday, September 4, 2005, through Saturday, December 31, 2005, and Bill Watterson answered a select dozen questions submitted by readers. ([[1]](http://www.amuniversal.com/ups/features/thereturn/) [[2]](http://www.andrewsmcmeel.com/calvinandhobbes/returning.html)) Like current contemporary strips, weekday Calvin and Hobbes strips now appear in color print when available, instead of black and white as in their first run.

|Title|Cover|Date|ISBN|Notes|
|----|----|:----:|----|----|
|[Calvin and Hobbes](https://calvinandhobbes.fandom.com/wiki/Calvin_and_Hobbes_(book))|![https://static.wikia.nocookie.net/candh/images/b/b2/Calvin_and_Hobbes_Original.png/revision/latest/scale-to-width-down/100?cb=20060314024407](https://static.wikia.nocookie.net/candh/images/b/b2/Calvin_and_Hobbes_Original.png/revision/latest/scale-to-width-down/100?cb=20060314024407)|April 1987|ISBN 0836220889|Collection covering strips from first strip on Nov 18, 1985 to Aug 17, 1986. Original content: Foreword by [Garry Trudeau](http://en.wikipedia.org/wiki/Garry_Trudeau).|
|[Something Under the Bed Is Drooling](https://calvinandhobbes.fandom.com/wiki/Something_Under_the_Bed_Is_Drooling)|![https://static.wikia.nocookie.net/candh/images/2/24/Something_Under_the_Bed_Is_Drooling.jpg/revision/latest/scale-to-width-down/100?cb=20060316165419](https://static.wikia.nocookie.net/candh/images/2/24/Something_Under_the_Bed_Is_Drooling.jpg/revision/latest/scale-to-width-down/100?cb=20060316165419)|April 1988|ISBN 0836218256|Collection covering strips from Aug 18, 1986 to May 22, 1987. Original content: Foreword by [Pat Oliphant](http://en.wikipedia.org/wiki/Pat_Oliphant).|
|[The Essential Calvin and Hobbes: A Calvin and Hobbes Treasury](https://calvinandhobbes.fandom.com/wiki/The_Essential_Calvin_and_Hobbes)|![https://static.wikia.nocookie.net/candh/images/d/dd/The_Essential_Calvin_and_Hobbes.png/revision/latest/scale-to-width-down/100?cb=20060316165656](https://static.wikia.nocookie.net/candh/images/d/dd/The_Essential_Calvin_and_Hobbes.png/revision/latest/scale-to-width-down/100?cb=20060316165656)|September 1988|ISBN 0836218051|Treasury including cartoons from Calvin and Hobbes, Something Under the Bed is Drooling, &amp; a strip from May 23, 1987 not published in Drooling. Original content: Foreword by [Charles M. Schulz](http://en.wikipedia.org/wiki/Charles_M._Schulz), original illustrated poem &quot;[A Nauseous Nocturne](https://calvinandhobbes.fandom.com/wiki/A_Nauseous_Nocturne)&quot; and artwork on back cover of a giant rampaging Calvin.|
|....|....|....|....|....|
|....|....|....|

Early books were printed in a smaller format, and the Sunday strips appeared in black and white. They were then reprinted, in color for the Sundays, in the three &quot;Treasuries&quot; (Essential, Authoritative, and Indispensable). The contents of Attack of the Deranged Mutant Killer Monster Snow Goons were not reprinted, and its Sunday comics were in black and white. As a result, those Sunday strips were never reprinted in color until the Complete collection was published in 2005. Every book since Snow Goons had been printed in a larger format with Sundays in color and weekday and Saturday strips larger than they appeared in most newspapers.

Remaining books do contain some additional content; for instance, The Calvin and Hobbes Lazy Sunday Book contains a long watercolor Spaceman Spiff epic not seen elsewhere until Complete, and The Calvin and Hobbes Tenth Anniversary Book contains much original commentary from Watterson. Calvin and Hobbes: Sunday Pages 1985-1995 contains 36 Sunday strips in color alongside Watterson&apos;s original sketches, prepared for an exhibition at The Ohio State University Cartoon Research Library.

An officially licensed children&apos;s textbook entitled [Teaching with Calvin and Hobbes](https://calvinandhobbes.fandom.com/wiki/Teaching_with_Calvin_and_Hobbes) ([ISBN 1878849158](https://calvinandhobbes.fandom.com/wiki/ISBN_1878849158?action=edit&amp;redlink=1)) was published in 1993. It reprints 57 comic strips comprising 5 [story arcs](https://calvinandhobbes.fandom.com/wiki/Story_arcs).</text>
</richcontent>
</node>
<node TEXT="Markdown Helper example 01.mm" ID="ID_325948084" CREATED="1617229921450" MODIFIED="1678219439893" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/Markdown%20Helper%20example%2001.mm">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="95.148" OBJECT="org.freeplane.features.format.FormattedNumber|95148|#,##0"/>
</node>
<node TEXT="MD-ex01_01.md" ID="ID_353105734" CREATED="1617637290884" MODIFIED="1678219439904" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/MD-ex01_01.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="803" OBJECT="org.freeplane.features.format.FormattedNumber|803|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      # My Document
    </p>
    <p>
      
    </p>
    <p>
      ## Introduction
    </p>
    <p>
      
    </p>
    <p>
      This is just a test
    </p>
    <p>
      
    </p>
    <p>
      I don`t have much more to say
    </p>
    <p>
      
    </p>
    <p>
      ## Chapter 1
    </p>
    <p>
      
    </p>
    <p>
      In this chapter we are going to blabla bla bla bla ..
    </p>
    <p>
      
    </p>
    <p>
      Blablah&nbsp;&nbsp;blablablah blah **blablablablah**, Blah&nbsp;&nbsp;blablablah blablablablah blah blablah.
    </p>
    <p>
      Blablah&nbsp;&nbsp;blablablah blablablah. Blablablablah&nbsp;&nbsp;blah blah **blablah** blablah blablah blablablah blah.
    </p>
    <p>
      
    </p>
    <p>
      ## Chapter 2
    </p>
    <p>
      
    </p>
    <p>
      Blah&nbsp;&nbsp;blah blah blablah blablablah blah blablah, Blablablah&nbsp;&nbsp;blablablah blablablah **blablah** blablah **blablablablah**.
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;Blablablah&nbsp;&nbsp;blablah blablah **blablah** blablah blablablah blablablablah.
    </p>
    <p>
      
    </p>
    <p>
      ## Conclusions
    </p>
    <p>
      
    </p>
    <p>
      Blah&nbsp;&nbsp;**blablablah** blablah. Blablablah&nbsp;&nbsp;blah **blablablah** blablablah, Blablah&nbsp;&nbsp;blah, Blah&nbsp;&nbsp;blah blablah blablablah blablah. Blablah&nbsp;&nbsp;blablah blablablah blah blablah blablablah blablablah blablablah.
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="MD-ex01_02.md" ID="ID_657557541" CREATED="1617637290892" MODIFIED="1678219439912" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/MD-ex01_02.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="711" OBJECT="org.freeplane.features.format.FormattedNumber|711|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      # My Document
    </p>
    <p>
      
    </p>
    <p>
      ## Introduction
    </p>
    <p>
      
    </p>
    <p>
      This is just a test
    </p>
    <p>
      
    </p>
    <p>
      I don`t have much more to say
    </p>
    <p>
      
    </p>
    <p>
      ## Chapter 1
    </p>
    <p>
      
    </p>
    <p>
      The details of this node are included as first paragraph under the header.
    </p>
    <p>
      
    </p>
    <p>
      This header node has a note and it will be included in the final document after the details of this node and before the text in the children nodes.
    </p>
    <p>
      
    </p>
    <p>
      ... and the final sentence of this chapter.
    </p>
    <p>
      
    </p>
    <p>
      ## Chapter 2
    </p>
    <p>
      
    </p>
    <p>
      Blah&nbsp;&nbsp;blah blah blablah blablablah blah blablah, Blablablah&nbsp;&nbsp;blablablah blablablah **blablah** blablah **blablablablah**.
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;Blablablah&nbsp;&nbsp;blablah blablah **blablah** blablah blablablah blablablablah.
    </p>
    <p>
      
    </p>
    <p>
      ## Conclussions
    </p>
    <p>
      
    </p>
    <p>
      This is the text that is written in the note of the last node in this example branch.
    </p>
    <p>
      
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="MD-ex01_03.md" ID="ID_1964914703" CREATED="1617637290901" MODIFIED="1678219439920" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/MD-ex01_03.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.665" OBJECT="org.freeplane.features.format.FormattedNumber|4665|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown">
    <text># My Document

## Introduction

This is just a test

I don`t have much more to say

## List examples

### Simple list

1. apples
1. bananas
1. oranges
1. lettuce
1. cucumber
1. tomatos
1. carrots

1. apples
1. bananas
1. oranges
1. lettuce
1. cucumber
1. tomatos
1. carrots

### Structured list

1. fruits
   1. apples
   1. bananas
   1. oranges
   1. tomatoes
1. salats
   * lettuce
   * cucumber
   * tomatoes
   * carrots

### List with links

* links
   * [Freeplane Homepage](https://www.freeplane.org/wiki/index.php/Home)
   * [MarkdownHelper-icon.svg](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/MarkdownHelper-icon.svg)
* images
   * ![What is Mindmapping (thumb)](https://www.freeplane.org/wiki/images/thumb/7/7b/WhatIsMindMapping.jpg/300px-WhatIsMindMapping.jpg)
   * ![MarkdownHelper.png](file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper/images/MarkdownHelper.png)

## My plain task list

- [x] walk the dog
- [x] do the dishes
- [ ] cancer cure
- [ ] laundry

## Structured tasks lists

They work the same as plain tasks lists, but they can see subtasks inside of tasks.

- [ ] task 1
- [ ] task 2
   - [x] task 2.1
   - [ ] task 2.2
- [x] task 3
   - [x] subtask 3.1

## Table example

|Name|this is the Age column|Badge|
|----|:----:|----|
|Piotr|25|![Corgi.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Corgi.png)|
|Maria|33|![Deer.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Deer.png)|
|Alex|45|![Bear.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Bear.png)|

## Code block

Code: **&apos;example code&apos;**

```groovy
// example code
// the node&apos;s details must start with a dot and then the language of the code

def text = node.text

def msg = &quot;the text of the selected node is ${text}&quot;

ui.informationMessage(msg.toString())
```

## Text block

The ![Bear.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Bear.png), the ![Corgi.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Corgi.png) and the ![Deer.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Deer.png) are from **[Graphic Burger](https://graphicburger.com/)** and can be found [here](https://graphicburger.com/71-free-animal-icons/).

## Comment

&gt; Anything inside this node gets commented
&gt;
&gt; The ![Bear.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Bear.png), the ![Corgi.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Corgi.png) and the ![Deer.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Deer.png) are from **[Graphic Burger](https://graphicburger.com/)** and can be found [here](https://graphicburger.com/71-free-animal-icons/).
&gt;
&gt;
&gt;
&gt; |Name|this is the Age column|Badge|
&gt; |----|:----:|----|
&gt; |Piotr|25|![Corgi.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Corgi.png)|
&gt; |Maria|33|![Deer.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Deer.png)|
&gt; |Alex|45|![Bear.png](file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Bear.png)|
&gt;
&gt;

## Conclusions

Blah  **blablablah** blablah. Blablablah  blah **blablablah** blablablah, Blablah  blah, Blah  blah blablah blablablah blablah. Blablah  blablah blablablah blah blablah blablablah blablablah blablablah.</text>
</richcontent>
</node>
<node TEXT="newTasksBucketList.md" STYLE_REF="freshNew" ID="ID_388494531" CREATED="1652131773810" MODIFIED="1678219439928" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/tests%20-%20examples/newTasksBucketList.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="2.404" OBJECT="org.freeplane.features.format.FormattedNumber|2404|#,##0"/>
</node>
</node>
<node TEXT="wiki" STYLE_REF="file_folder" FOLDED="true" ID="ID_1940883193" CREATED="1616639255748" MODIFIED="1678219439948" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/wiki/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="Markdown Helper Wiki.mm" ID="ID_1051614714" CREATED="1616639511981" MODIFIED="1678219439948" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/wiki/Markdown%20Helper%20Wiki.mm">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="487.341" OBJECT="org.freeplane.features.format.FormattedNumber|487341|#,##0"/>
</node>
</node>
<node TEXT="README.md" FOLDED="true" ID="ID_410031382" CREATED="1616167740191" MODIFIED="1678219439966" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/README.md" STYLE="bubble">
<edge COLOR="#ff0000"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/markdown"/>
<attribute_layout NAME_WIDTH="93 pt" VALUE_WIDTH="56.25 pt"/>
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="3.025" OBJECT="org.freeplane.features.format.FormattedNumber|3025|#,##0"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Documento lo trabajé en Markdown Helper Wiki.mm
    </p>
    <p>
      Cambios hacerlos allá!!
    </p>
  </body>
</html></richcontent>
<node TEXT="readme en Markdown Helper Wiki" ID="ID_292050295" CREATED="1618240313197" MODIFIED="1618240383576" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/wiki/Markdown%20Helper%20Wiki.mm#ID_1781546473"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      hacer cambios en ese mindmap
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_1540791328" CREATED="1658705010307" MODIFIED="1658705505193">
<node TEXT="armar ReadMe" STYLE_REF="pendingTask" ID="ID_813037984" CREATED="1616167740207" MODIFIED="1641396282949"/>
</node>
</node>
<node TEXT="LICENSE.md" ID="ID_1161077923" CREATED="1618185423343" MODIFIED="1678219439975" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/LICENSE.md">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:43" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:43-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.093" OBJECT="org.freeplane.features.format.FormattedNumber|1093|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      MIT License
    </p>
    <p>
      
    </p>
    <p>
      Copyright (c) 2021 Eduardo Frohlich.
    </p>
    <p>
      
    </p>
    <p>
      Permission is hereby granted, free of charge, to any person obtaining a copy
    </p>
    <p>
      of this software and associated documentation files (the &quot;Software&quot;), to deal
    </p>
    <p>
      in the Software without restriction, including without limitation the rights
    </p>
    <p>
      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    </p>
    <p>
      copies of the Software, and to permit persons to whom the Software is
    </p>
    <p>
      furnished to do so, subject to the following conditions:
    </p>
    <p>
      
    </p>
    <p>
      The above copyright notice and this permission notice shall be included in all
    </p>
    <p>
      copies or substantial portions of the Software.
    </p>
    <p>
      
    </p>
    <p>
      THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    </p>
    <p>
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    </p>
    <p>
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    </p>
    <p>
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    </p>
    <p>
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    </p>
    <p>
      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    </p>
    <p>
      SOFTWARE.
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="ignoredByGitHub" STYLE_REF="file_folder" FOLDED="true" ID="ID_613731925" CREATED="1640356924994" MODIFIED="1678219439985" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 17:01" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T17:01-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="StyleMapError.mm" ID="ID_1822191839" CREATED="1641301559771" MODIFIED="1678219434383" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/StyleMapError.mm">
<attribute NAME="lastModifiedTime" VALUE="27-12-21 10:26" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-27T10:26-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="6.947" OBJECT="org.freeplane.features.format.FormattedNumber|6947|#,##0"/>
</node>
<node TEXT="StyleMapError2.mm" ID="ID_1181607289" CREATED="1641301559771" MODIFIED="1678219434405" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/StyleMapError2.mm">
<attribute NAME="lastModifiedTime" VALUE="27-12-21 10:34" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-27T10:34-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.967" OBJECT="org.freeplane.features.format.FormattedNumber|4967|#,##0"/>
</node>
<node TEXT="StyleMapError3.mm" ID="ID_1080223389" CREATED="1641301559787" MODIFIED="1678219434429" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/StyleMapError3.mm">
<attribute NAME="lastModifiedTime" VALUE="27-12-21 10:34" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-27T10:34-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.664" OBJECT="org.freeplane.features.format.FormattedNumber|4664|#,##0"/>
</node>
<node TEXT="StyleMapError4.mm" ID="ID_1181755217" CREATED="1641301559787" MODIFIED="1678219434453" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/StyleMapError4.mm">
<attribute NAME="lastModifiedTime" VALUE="27-12-21 11:23" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-27T11:23-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="4.335" OBJECT="org.freeplane.features.format.FormattedNumber|4335|#,##0"/>
</node>
<node TEXT="mindmap prueba css.mm" ID="ID_687548097" CREATED="1641301559803" MODIFIED="1678219434475" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/mindmap%20prueba%20css.mm">
<attribute NAME="lastModifiedTime" VALUE="27-12-21 14:09" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-27T14:09-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="18.714" OBJECT="org.freeplane.features.format.FormattedNumber|18714|#,##0"/>
</node>
<node TEXT="Calvin and Hobbes-MDH.mm" ID="ID_577411426" CREATED="1651535824906" MODIFIED="1678219434504" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/Calvin%20and%20Hobbes-MDH.mm">
<attribute NAME="lastModifiedTime" VALUE="31-03-22 22:56" OBJECT="org.freeplane.features.format.FormattedDate|2022-03-31T22:56-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="69.836" OBJECT="org.freeplane.features.format.FormattedNumber|69836|#,##0"/>
</node>
<node TEXT="Calvin and Hobbes.mm" ID="ID_1809890065" CREATED="1651535825011" MODIFIED="1678219434524" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/Calvin%20and%20Hobbes.mm">
<attribute NAME="lastModifiedTime" VALUE="31-03-22 22:56" OBJECT="org.freeplane.features.format.FormattedDate|2022-03-31T22:56-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="42.882" OBJECT="org.freeplane.features.format.FormattedNumber|42882|#,##0"/>
</node>
<node TEXT="Markdown Helper example 01.mm" ID="ID_1524844178" CREATED="1651535825111" MODIFIED="1678219434546" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/Markdown%20Helper%20example%2001.mm">
<attribute NAME="lastModifiedTime" VALUE="01-04-22 11:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-04-01T11:21-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="121.136" OBJECT="org.freeplane.features.format.FormattedNumber|121136|#,##0"/>
</node>
<node TEXT="targetMap.mm" ID="ID_1112764076" CREATED="1651535825201" MODIFIED="1678219434567" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/targetMap.mm">
<attribute NAME="lastModifiedTime" VALUE="28-03-22 15:50" OBJECT="org.freeplane.features.format.FormattedDate|2022-03-28T15:50-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="50.441" OBJECT="org.freeplane.features.format.FormattedNumber|50441|#,##0"/>
</node>
<node TEXT="targetMap_2.mm" ID="ID_950376693" CREATED="1651535825297" MODIFIED="1678219434588" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/targetMap_2.mm">
<attribute NAME="lastModifiedTime" VALUE="31-03-22 22:51" OBJECT="org.freeplane.features.format.FormattedDate|2022-03-31T22:51-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="51.621" OBJECT="org.freeplane.features.format.FormattedNumber|51621|#,##0"/>
</node>
<node TEXT="targetMap_3.mm" ID="ID_781137291" CREATED="1651535825391" MODIFIED="1678219434610" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/ignoredByGitHub/targetMap_3.mm">
<attribute NAME="lastModifiedTime" VALUE="01-04-22 11:21" OBJECT="org.freeplane.features.format.FormattedDate|2022-04-01T11:21-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:41" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:41-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:37-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="51.621" OBJECT="org.freeplane.features.format.FormattedNumber|51621|#,##0"/>
</node>
</node>
<node TEXT=".gitignore" ID="ID_1861523328" CREATED="1640357004339" MODIFIED="1678219439994" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/.gitignore">
<attribute NAME="lastModifiedTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="07-03-23 16:47" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:47-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-03-23 16:32" OBJECT="org.freeplane.features.format.FormattedDate|2023-03-07T16:32-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="576" OBJECT="org.freeplane.features.format.FormattedNumber|576|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .gradle
    </p>
    <p>
      **/build/
    </p>
    <p>
      !src/**/build/
    </p>
    <p>
      
    </p>
    <p>
      # Ignore Gradle GUI config
    </p>
    <p>
      gradle-app.setting
    </p>
    <p>
      
    </p>
    <p>
      # Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
    </p>
    <p>
      !gradle-wrapper.jar
    </p>
    <p>
      
    </p>
    <p>
      # Cache of project
    </p>
    <p>
      .gradletasknamecache
    </p>
    <p>
      
    </p>
    <p>
      # # Work around https://youtrack.jetbrains.com/issue/IDEA-116898
    </p>
    <p>
      # gradle/wrapper/gradle-wrapper.properties
    </p>
    <p>
      
    </p>
    <p>
      # Addon maps
    </p>
    <p>
      *.addon.mm
    </p>
    <p>
      *.mm.bak
    </p>
    <p>
      # version.properties
    </p>
    <p>
      
    </p>
    <p>
      # ignore .jar files
    </p>
    <p>
      *.jar
    </p>
    <p>
      
    </p>
    <p>
      # ignore some folders
    </p>
    <p>
      ignoredByGitHub/
    </p>
    <p>
      delete/
    </p>
    <p>
      
    </p>
    <p>
      *.bak
    </p>
    <p>
      MarkdownHelper/src/main/groovy/groovy.ts
    </p>
    <p>
      MarkdownHelper/src/main/groovy/groovy.zip
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="MDH F1" STYLE_REF="milestone" ID="ID_1437585930" CREATED="1658705010307" MODIFIED="1658705505193">
<node TEXT="ordenar scripts groovy de apoyo en rama &quot;files&quot;" STYLE_REF="pendingTask" ID="ID_445402536" CREATED="1646056716369" MODIFIED="1646056754503"/>
</node>
</node>
<node TEXT="tareas revisadas" STYLE_REF="Organizador" FOLDED="true" ID="ID_1093602435" CREATED="1658013884568" MODIFIED="1658013894713">
<node TEXT="Sin release" STYLE_REF="milestone" ID="ID_1999881885" CREATED="1658013818645" MODIFIED="1658013853012">
<node TEXT="Armar entorno de desarrollo" STYLE_REF="Organizador" ID="ID_1305347978" CREATED="1616167740206" MODIFIED="1651623598875"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      S:0 P:2 F:0
    </p>
  </body>
</html></richcontent>
<attribute NAME="projectCode" VALUE="Armar.entorno.desarro"/>
<node TEXT="ver post en forum" STYLE_REF="pendingTask" ID="ID_1594465109" CREATED="1616167740206" MODIFIED="1623451000194">
<node TEXT="New gradle plug-in for Freeplane script and add-on development" ID="ID_1717235278" CREATED="1616167740206" MODIFIED="1616167740206" LINK="https://sourceforge.net/p/freeplane/discussion/758437/thread/e9303eed96/"/>
<node TEXT="revisar post de MacMarrum" ID="ID_233084169" CREATED="1658013221069" MODIFIED="1658013337323"/>
</node>
<node TEXT="ver wiki Freeplane" STYLE_REF="pendingTask" ID="ID_1574673846" CREATED="1616167740206" MODIFIED="1623451000525"/>
</node>
<node TEXT="actualizar a listado de AddOns en FP wiki" STYLE_REF="maybeTask" FOLDED="true" ID="ID_618654485" CREATED="1616167740207" MODIFIED="1658112493097">
<node TEXT="agregar a listado de AddOns en FP wiki" ID="ID_1499168187" CREATED="1616167740207" MODIFIED="1616167740207"/>
<node TEXT="usar addOn documentation de devTools" ID="ID_364632240" CREATED="1616167740207" MODIFIED="1616167740207"/>
</node>
<node TEXT="Ver Obsidian" STYLE_REF="pendingTask" ID="ID_401554808" CREATED="1648495965297" MODIFIED="1648495980672">
<node TEXT="mejorar descripción de tarea &quot;ver Obsidian&quot;" STYLE_REF="pendingTask" ID="ID_409567627" CREATED="1658014951363" MODIFIED="1658707040652"/>
</node>
<node TEXT="I recommend testing the addon on other computer with other people&apos;s filesystems to see if some of the problems are due to the assumptions based on the actual file structure of your system." STYLE_REF="maybeTask" ID="ID_425832355" CREATED="1658015872320" MODIFIED="1658112493128"/>
<node TEXT="Definir y agregar estrategia PATREON" STYLE_REF="pendingTask" ID="ID_1418875851" CREATED="1622397058219" MODIFIED="1641396632149">
<node TEXT="agregar comado about en menú" STYLE_REF="pendingTask" ID="ID_1820079339" CREATED="1622417495436" MODIFIED="1623451001559"/>
<node TEXT="dialogo about" FOLDED="true" ID="ID_585957698" CREATED="1622417610660" MODIFIED="1622417615730">
<node TEXT="info gral" FOLDED="true" ID="ID_820753838" CREATED="1622417617523" MODIFIED="1622417797269">
<node TEXT="nombre AddOn" ID="ID_1848957843" CREATED="1622417631731" MODIFIED="1622417640753"/>
<node TEXT="" ID="ID_1665178694" CREATED="1622464597895" MODIFIED="1622464597902">
<hook NAME="FirstGroupNode"/>
</node>
<node TEXT="version" ID="ID_1385548165" CREATED="1622417641314" MODIFIED="1622417643276"/>
<node TEXT="(c) edo" FOLDED="true" ID="ID_661687069" CREATED="1622417652977" MODIFIED="1622417663276">
<node TEXT="año" ID="ID_258421038" CREATED="1622417664412" MODIFIED="1622417665989"/>
</node>
<node TEXT="link página Web" ID="ID_74532058" CREATED="1622417668026" MODIFIED="1622417683552"/>
<node TEXT="link a Wiki" ID="ID_718900254" CREATED="1622417814732" MODIFIED="1622417819438"/>
<node TEXT="" ID="ID_1384999106" CREATED="1622464597885" MODIFIED="1622464597893">
<hook NAME="SummaryNode"/>
<hook NAME="AlwaysUnfoldedNode"/>
<node TEXT="addons  /  AddOnProperties.java" ID="ID_1363940980" CREATED="1622437806800" MODIFIED="1622437891067" LINK="https://github.com/freeplane/freeplane/blob/1.9.x/freeplane/src/main/java/org/freeplane/main/addons/AddOnProperties.java"/>
<node TEXT="markdownHelper.script.xml" ID="ID_808736509" CREATED="1622420342268" MODIFIED="1678218764001" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/markdownHelper.script.xml">
<attribute NAME="lastModifiedTime" VALUE="15-09-21 09:56" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-15T09:56-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="24-12-21 11:42" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-24T11:42-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="15-09-21 09:56" OBJECT="org.freeplane.features.format.FormattedDate|2021-09-15T09:56-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="15.843" OBJECT="org.freeplane.features.format.FormattedNumber|15843|#,##0"/>
</node>
</node>
</node>
<node TEXT="consulta si existen versiones más recientes" FOLDED="true" ID="ID_10535859" CREATED="1622417722869" MODIFIED="1622417760364">
<node TEXT="botón?" ID="ID_1152753753" CREATED="1622417760405" MODIFIED="1622417764701"/>
<node TEXT="actualmente:&#xa;CHECK FOR UPDATES" ID="ID_1397767076" CREATED="1622422130636" MODIFIED="1622422170064" LINK="menuitem:_UpdateCheckAction"/>
<node TEXT="UpdateCheckAction.java" ID="ID_594957765" CREATED="1622437628297" MODIFIED="1622437835992" LINK="https://github.com/freeplane/freeplane/blob/1.9.x/freeplane/src/main/java/org/freeplane/main/mindmapmode/UpdateCheckAction.java"/>
<node ID="ID_415306733" TREE_ID="ID_1363940980"/>
<node TEXT="HttpVersionClient.java" ID="ID_1107643290" CREATED="1622437591731" MODIFIED="1622437856815" LINK="https://github.com/freeplane/freeplane/blob/1.9.x/freeplane/src/main/java/org/freeplane/main/mindmapmode/HttpVersionClient.java"/>
</node>
<node TEXT="registro de mapa" FOLDED="true" ID="ID_1256765197" CREATED="1622418490646" MODIFIED="1622418501528">
<node TEXT="contar número de nodos con estilos MDH en el mapa" ID="ID_90774810" CREATED="1622418503436" MODIFIED="1622420121020"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MDH
    </p>
    <p>
      
    </p>
    <p>
      def styles = [MDH.MDNodeStyle, MDH.MDNodeLinkStyle]
    </p>
    <p>
      
    </p>
    <p>
      def nodosMDH = c.find{it.style.name in styles}
    </p>
    <p>
      def nodosMDDocs = c.find{it.noteText &amp;&amp; it.noteText.contains('.MDH.document(')}
    </p>
    <p>
      
    </p>
    <p>
      return &quot;MDH nodes in map: ${nodosMDH.size()}\n MD Docs nodes: ${nodosMDDocs.size()} &quot;
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="información de uso" FOLDED="true" ID="ID_246662769" CREATED="1622417842669" MODIFIED="1622417850226">
<node TEXT="fecha instalación" ID="ID_1821482635" CREATED="1622417850259" MODIFIED="1622417863387"/>
<node TEXT="fecha instalación última versión" ID="ID_1060001099" CREATED="1622417865060" MODIFIED="1622417884161"/>
<node TEXT="dias desde instalación" ID="ID_1894257242" CREATED="1622418206134" MODIFIED="1622418215138"/>
<node TEXT="registro a través de diálogo" FOLDED="true" ID="ID_910455139" CREATED="1622418331310" MODIFIED="1622418353614">
<node TEXT="tiempo utilizado" FOLDED="true" ID="ID_1856091419" CREATED="1622417894711" MODIFIED="1622417935970">
<node TEXT="puede ser" FOLDED="true" ID="ID_389832672" CREATED="1622417936010" MODIFIED="1622417946784">
<node TEXT="sumatoria tiempo en que dialogo MDH ha estado abierto" FOLDED="true" ID="ID_731480825" CREATED="1622417946828" MODIFIED="1622417974692">
<node TEXT="inicia tiempo al abrir MDH" ID="ID_1350226328" CREATED="1622417976677" MODIFIED="1622417996801"/>
<node TEXT="cierra tiempo al cerrar dialogo y lo suma a tiempo acumulado anterior" ID="ID_201766710" CREATED="1622418002449" MODIFIED="1622418027791"/>
</node>
</node>
</node>
<node TEXT="veces que se ha abierto el dialogo" ID="ID_1379053897" CREATED="1622418032327" MODIFIED="1622418097258"/>
<node TEXT="veces que se han incertado nodos" ID="ID_1446686945" CREATED="1622418129288" MODIFIED="1622418142596"/>
<node TEXT="veces que se han presionado botones en el dialogo" ID="ID_1503972131" CREATED="1622418143767" MODIFIED="1622418157246"/>
<node TEXT="dias en que se ha usado" FOLDED="true" ID="ID_396433282" CREATED="1622418218204" MODIFIED="1622418230368">
<node TEXT="contador" ID="ID_1686483744" CREATED="1622418231722" MODIFIED="1622418235696"/>
<node TEXT="ultima fecha" ID="ID_1978830624" CREATED="1622418237272" MODIFIED="1622418241249"/>
<node TEXT="si hoy diferente a ultima fecha --&gt; agrega un día y actualiza última fecha" ID="ID_1183673287" CREATED="1622418243365" MODIFIED="1622418268968"/>
</node>
</node>
<node TEXT="registro a través de MDH" FOLDED="true" ID="ID_1302305309" CREATED="1622418364369" MODIFIED="1622418375488">
<node TEXT="contador cada vez que se recalcula un nodo" ID="ID_1434684096" CREATED="1622418381797" MODIFIED="1622418401940"/>
</node>
</node>
<node TEXT="texto y link PAtreon" FOLDED="true" ID="ID_1732191996" CREATED="1622418701692" MODIFIED="1622418727136">
<node TEXT="texto" ID="ID_1108108755" CREATED="1622418733391" MODIFIED="1622418737513"/>
<node TEXT="link to patreon" ID="ID_756759928" CREATED="1622418747952" MODIFIED="1622418788202"/>
<node TEXT="link to Why?" ID="ID_1027437879" CREATED="1622418799697" MODIFIED="1622418819238"/>
</node>
</node>
<node TEXT="guardar info de uso" FOLDED="true" ID="ID_1136711432" CREATED="1622464837461" MODIFIED="1622464847235">
<node TEXT="tipo?" FOLDED="true" ID="ID_483064966" CREATED="1622464850088" MODIFIED="1622464860262">
<node TEXT="XML" ID="ID_878242097" CREATED="1622464860285" MODIFIED="1622464864128"/>
<node TEXT="json" ID="ID_1193852890" CREATED="1622464866482" MODIFIED="1622464869023"/>
<node TEXT="properties" FOLDED="true" ID="ID_11738760" CREATED="1622464871081" MODIFIED="1622464874537">
<node TEXT="import java.util.Properties;" FOLDED="true" ID="ID_1928655045" CREATED="1622464948942" MODIFIED="1622468695310">
<icon BUILTIN="forward"/>
<node TEXT="Usando GROOVY" FOLDED="true" ID="ID_1725642255" CREATED="1622466802654" MODIFIED="1622466810958">
<node TEXT="https://stackoverflow.com/questions/20871441/get-values-from-properties-file-using-groovy" ID="ID_1860497522" CREATED="1622466844876" MODIFIED="1622466844876" LINK="https://stackoverflow.com/questions/20871441/get-values-from-properties-file-using-groovy"/>
<node TEXT="https://stackoverflow.com/questions/16852264/parse-a-properties-file-with-groovy" ID="ID_1569904321" CREATED="1622468142242" MODIFIED="1622468142242" LINK="https://stackoverflow.com/questions/16852264/parse-a-properties-file-with-groovy"/>
<node TEXT="https://stackoverflow.com/questions/34149157/reading-properties-file-in-groovy" ID="ID_1933391581" CREATED="1622468156123" MODIFIED="1622468156123" LINK="https://stackoverflow.com/questions/34149157/reading-properties-file-in-groovy"/>
<node TEXT="https://stackoverflow.com/questions/57413542/groovy-read-properties-file-then-write-file-with-original-comments" ID="ID_1099296666" CREATED="1622468173632" MODIFIED="1622468173632" LINK="https://stackoverflow.com/questions/57413542/groovy-read-properties-file-then-write-file-with-original-comments"/>
<node TEXT="https://bowerstudios.com/node/1066" ID="ID_1713543810" CREATED="1622468233914" MODIFIED="1622468233914" LINK="https://bowerstudios.com/node/1066"/>
<node TEXT="https://gist.github.com/aimtiaz11/f786346e0c0d11a5475cfb64e84e9459" ID="ID_1587715521" CREATED="1622468265875" MODIFIED="1622468265875" LINK="https://gist.github.com/aimtiaz11/f786346e0c0d11a5475cfb64e84e9459"/>
<node TEXT="https://gist.github.com/istairbn/a0d6576286f0130760b6abf7dee1a684" ID="ID_890248744" CREATED="1622468312337" MODIFIED="1622468312337" LINK="https://gist.github.com/istairbn/a0d6576286f0130760b6abf7dee1a684"/>
</node>
<node TEXT="usando JAVA" FOLDED="true" ID="ID_415712379" CREATED="1622466677591" MODIFIED="1622466690378">
<node TEXT="https://docs.oracle.com/javase/7/docs/api/java/util/Properties.html" ID="ID_897194962" CREATED="1622466524773" MODIFIED="1622466524773" LINK="https://docs.oracle.com/javase/7/docs/api/java/util/Properties.html"/>
<node TEXT="https://www.arquitecturajava.com/java-properties-files-y-como-usarlos/" ID="ID_1786015721" CREATED="1622466531149" MODIFIED="1622466531149" LINK="https://www.arquitecturajava.com/java-properties-files-y-como-usarlos/"/>
<node TEXT="https://www.tutorialspoint.com/java/util/java_util_properties.htm" ID="ID_1680610828" CREATED="1622466537370" MODIFIED="1622466537370" LINK="https://www.tutorialspoint.com/java/util/java_util_properties.htm"/>
<node TEXT="https://www.geeksforgeeks.org/java-util-properties-class-java/" ID="ID_1706033051" CREATED="1622466543966" MODIFIED="1622466543966" LINK="https://www.geeksforgeeks.org/java-util-properties-class-java/"/>
<node TEXT="https://javiergarciaescobedo.es/programacion-en-java/15-ficheros/358-archivo-de-propiedades-properties" ID="ID_1781434139" CREATED="1622466551130" MODIFIED="1622466551130" LINK="https://javiergarciaescobedo.es/programacion-en-java/15-ficheros/358-archivo-de-propiedades-properties"/>
<node TEXT="https://www.baeldung.com/java-properties" ID="ID_315523179" CREATED="1622466512253" MODIFIED="1622466512253" LINK="https://www.baeldung.com/java-properties"/>
<node TEXT="https://www.javatpoint.com/properties-class-in-java" ID="ID_460275625" CREATED="1622466505904" MODIFIED="1622466505904" LINK="https://www.javatpoint.com/properties-class-in-java"/>
</node>
</node>
<node TEXT=" mindmapmode / HttpVersionClient.java#L79" ID="ID_1688853129" CREATED="1622465364173" MODIFIED="1622465410998" LINK="https://github.com/freeplane/freeplane/blob/1.9.x/freeplane/src/main/java/org/freeplane/main/mindmapmode/HttpVersionClient.java#L79"/>
<node TEXT="usando Groovy configSlurper" FOLDED="true" ID="ID_1023550495" CREATED="1622468524297" MODIFIED="1622468540665">
<node TEXT="https://riptutorial.com/groovy/example/26606/configslurper-using-string--number--boolean-or-list" ID="ID_992145282" CREATED="1622468549528" MODIFIED="1622468549528" LINK="https://riptutorial.com/groovy/example/26606/configslurper-using-string--number--boolean-or-list"/>
<node TEXT="http://docs.groovy-lang.org/latest/html/gapi/groovy/util/ConfigSlurper.html" ID="ID_1172077460" CREATED="1622468689129" MODIFIED="1622468689129" LINK="http://docs.groovy-lang.org/latest/html/gapi/groovy/util/ConfigSlurper.html"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="hacer mini release" STYLE_REF="completedTask" ID="ID_1346232111" CREATED="1651982853067" MODIFIED="1652148501665"/>
<node TEXT="v0.1.0 alpha" STYLE_REF="completedTask" FOLDED="true" ID="ID_194373700" CREATED="1616167740206" MODIFIED="1658013720459">
<node TEXT="inicializar" STYLE_REF="Organizador" FOLDED="true" ID="ID_1029662736" CREATED="1616167740206" MODIFIED="1616167740206">
<node TEXT="crear fork en Github" STYLE_REF="completedTask" ID="ID_618984001" CREATED="1616167740206" MODIFIED="1623451218864"/>
</node>
<node TEXT="Funcionalidad" STYLE_REF="Organizador" FOLDED="true" ID="ID_1311791791" CREATED="1616167740206" MODIFIED="1616167740206">
<node TEXT="AddOn" STYLE_REF="Organizador" FOLDED="true" ID="ID_693001066" CREATED="1616167740206" MODIFIED="1616167740206">
<node TEXT="pasos AddOn" FOLDED="true" ID="ID_444651387" CREATED="1616167740206" MODIFIED="1616167740206">
<node TEXT="1 a 5" FOLDED="true" ID="ID_456764877" CREATED="1616167740206" MODIFIED="1616167740206">
<node TEXT="In Freeplane create a new empty map by Ctrl+n." STYLE_REF="completedTask" ID="ID_577848218" CREATED="1616167740206" MODIFIED="1623451219094" NUMBERED="true"/>
<node TEXT="Invoke Tools &gt; Developer Tools &gt; Build add-on. You will be asked for the name of your add-on. Answer My Cool Add-on" STYLE_REF="completedTask" ID="ID_1428880649" CREATED="1616167740206" MODIFIED="1623451219322" NUMBERED="true"/>
<node TEXT="Look through the messages in the info box that is shown if everything looks alright. The name attribute of the root node will be myCoolAddOn. This is the identifying technical name of the add-on that is usually used as a file name, for menu locations and translation keys and so on. The node text My Cool Add-on is the English name/translation of the add-on." STYLE_REF="completedTask" ID="ID_632705422" CREATED="1616167740206" MODIFIED="1623451248501" NUMBERED="true"/>
<node TEXT="Set the version attribute of the root node to v0.1 and fill the other attributes of the root node (only freeplaneVersionTo is optional)." STYLE_REF="completedTask" ID="ID_797601707" CREATED="1616167740206" MODIFIED="1623451248570" NUMBERED="true"/>
<node TEXT="Write an initial description of the add-on as a child node of the description node." STYLE_REF="completedTask" ID="ID_369974181" CREATED="1616167740206" MODIFIED="1623451248655" NUMBERED="true"/>
</node>
<node TEXT="5 a 10" FOLDED="true" ID="ID_437165278" CREATED="1616167740206" MODIFIED="1616167740206">
<node TEXT="Create a new directory somewhere with the technical name of the add-on, myCoolAddOn." STYLE_REF="completedTask" ID="ID_1841720649" CREATED="1616167740206" MODIFIED="1623451248747" NUMBERED="true"/>
<node TEXT="Save the new map to myCoolAddOn/myCoolAddOn.mm." STYLE_REF="completedTask" ID="ID_752527761" CREATED="1616167740206" MODIFIED="1623451248848" NUMBERED="true"/>
<node TEXT="Copy or move myCoolScript.groovy to myCoolAddOn/scripts/myCoolScript.groovy." STYLE_REF="completedTask" ID="ID_572965650" CREATED="1616167740206" MODIFIED="1623451248963" NUMBERED="true"/>
<node TEXT="In the map create a new subnode of the scripts node with name myCoolScript.groovy." STYLE_REF="completedTask" ID="ID_503327937" CREATED="1616167740206" MODIFIED="1623451249058" NUMBERED="true"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      no es necesario. lo hace el Build automáticamente
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="Copy mycoolicon.png to zips/icons/mycoolicon.png." STYLE_REF="completedTask" ID="ID_733613887" CREATED="1616167740206" MODIFIED="1623451249157" NUMBERED="true"/>
</node>
<node TEXT="11 a 15" FOLDED="true" ID="ID_24577738" CREATED="1616167740206" MODIFIED="1616167740206">
<node TEXT="In the map create a new subnode of the zips node with name icons." STYLE_REF="completedTask" ID="ID_1539435163" CREATED="1616167740206" MODIFIED="1623451249296" NUMBERED="true"/>
<node TEXT="Invoke Tools &gt; Developer Tools &gt; Build add-on again. This will add the required attributes of the script node and proposes proper deinstall rules (just accept them when you are asked for it)." STYLE_REF="completedTask" ID="ID_786433709" CREATED="1616167740206" MODIFIED="1623451249422" NUMBERED="true"/>
<node TEXT="Fill the attributes of the myCoolScript.groovy node. The notes on the scripts node will help you to find the right attribute values. See also the section about menuLocation below." STYLE_REF="completedTask" ID="ID_1193608707" CREATED="1616167740206" MODIFIED="1623451249513" NUMBERED="true"/>
<node TEXT="Save the map." STYLE_REF="completedTask" ID="ID_115541830" CREATED="1616167740206" MODIFIED="1623451249610" NUMBERED="true"/>
<node TEXT="Invoke Tools &gt; Developer Tools &gt; Package add-on for publication. This will create the file myCoolAddOn-v0.1.mm which can be installed via Tools &gt; Scripts &gt; Install Add-on (or via Tools &gt; Add-ons)." STYLE_REF="completedTask" ID="ID_1534638252" CREATED="1616167740206" MODIFIED="1623451249702" NUMBERED="true"/>
</node>
</node>
<node TEXT="guardar mapas como &quot;lean&quot; map" STYLE_REF="completedTask" ID="ID_900828460" CREATED="1616167740206" MODIFIED="1623451249800"/>
<node TEXT="cambiar imagen de logo" STYLE_REF="completedTask" ID="ID_1825292555" CREATED="1616167740206" MODIFIED="1623451249899"/>
</node>
<node TEXT="listo" FOLDED="true" ID="ID_542625530" CREATED="1618700272317" MODIFIED="1618700275664">
<node ID="ID_1575787453" TREE_ID="ID_908594759">
<node ID="ID_1314775396" TREE_ID="ID_178684388"/>
</node>
<node TEXT="precargar iconos" STYLE_REF="completedTask" FOLDED="true" ID="ID_1693737316" CREATED="1618410023101" MODIFIED="1623451249992">
<node TEXT="FreeplaneIconFactory.createSVGIcon(url" FOLDED="true" ID="ID_401093111" CREATED="1618410017538" MODIFIED="1618410017538">
<node TEXT="averiguar URL de los emoji" ID="ID_1644743176" CREATED="1618410041014" MODIFIED="1618410063891">
<icon BUILTIN="ksmiletris"/>
</node>
</node>
<node TEXT="prueba" ID="ID_1102313599" CREATED="1618419773465" MODIFIED="1624206377743"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      //import com.kitfox.svg.app.beans.SVGIcon;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      ArrayList tbActions = ['RemoveIcon_0_Action', 'RemoveIconAction', 'RemoveAllIconsAction', 'IconAction.emoji-1F343', 'IconAction.emoji-1F648', 'IconAction.emoji-26D4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-1F522', 'IconAction.emoji-1F537', 'IconAction.emoji-27A1', 'IconAction.emoji-2194', 'IconAction.emoji-21A9'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-2714', 'IconAction.emoji-1F532']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def icon = menuUtils.getMenuItemIcon(tbActions[0])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return icon.properties
    </p>
    <p>
      
    </p>
    <p>
      def uri = icon.imageIcon.properties.svgURI
    </p>
    <p>
      def svgUniv = icon.imageIcon.svgUniverse
    </p>
    <p>
      def objeto = svgUniv.getElement(uri)
    </p>
    <p>
      //svgUniv.class.methods*.toString()*.toLowerCase().findAll{it.contains('uri')}
    </p>
    <p>
      
    </p>
    <p>
      objeto.properties//.class.methods//.toString()*.toLowerCase().findAll{it.contains('icon')}
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="linea de titulos" FOLDED="true" ID="ID_1865487206" CREATED="1618591068202" MODIFIED="1618591082147">
<node TEXT="debe ser antes o después?" STYLE_REF="completedTask" ID="ID_339198195" CREATED="1618591087544" MODIFIED="1623451250090"/>
</node>
<node TEXT="agregar preferencias" FOLDED="true" ID="ID_1032441085" CREATED="1618528595359" MODIFIED="1618528601856">
<node TEXT="nodos MDH leen preferencia de nodos MDH Doc" STYLE_REF="completedTask" ID="ID_526048794" CREATED="1618528879999" MODIFIED="1623451250189"/>
<node TEXT="Al crearse nodo TOC toma default de preferencias freeplane" FOLDED="true" ID="ID_1134555043" CREATED="1618528918593" MODIFIED="1618624449230">
<node TEXT="&apos;TOClevels&apos;:2" STYLE_REF="completedTask" ID="ID_624435387" CREATED="1618529174943" MODIFIED="1623451250282"/>
<node TEXT="&apos;TOCindent&apos;:false" STYLE_REF="completedTask" ID="ID_121652905" CREATED="1618529174946" MODIFIED="1623451250379"/>
</node>
<node TEXT="Al llamar rebuild dialog, pregunta que set se desea usar" STYLE_REF="completedTask" ID="ID_1420799616" CREATED="1618528959508" MODIFIED="1623451250476"/>
<node TEXT="Al llamar open dialog por primera vez, busca default en preferencias Freeplane" STYLE_REF="completedTask" ID="ID_148589190" CREATED="1618528982855" MODIFIED="1623451250567"/>
<node TEXT="en MDParams" FOLDED="true" ID="ID_1300236238" CREATED="1618528786463" MODIFIED="1618688558054"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      modificar funciones en MDH.groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="MDH Doc" FOLDED="true" ID="ID_1477688434" CREATED="1618529169066" MODIFIED="1618529173817">
<node TEXT="&apos;headersToUnderline&apos;:2" STYLE_REF="completedTask" ID="ID_1058998579" CREATED="1618529174927" MODIFIED="1623451250661"/>
<node TEXT="&apos;hideFolded&apos;:false" STYLE_REF="completedTask" ID="ID_1877943167" CREATED="1618529174927" MODIFIED="1623451250758"/>
<node TEXT="&apos;headerNumbering&apos;:true" STYLE_REF="completedTask" ID="ID_104700898" CREATED="1618529174930" MODIFIED="1623451250850"/>
<node TEXT="&apos;topHeadersNumbered&apos;:false" STYLE_REF="completedTask" ID="ID_719305895" CREATED="1618529174933" MODIFIED="1623451250945"/>
<node TEXT="&apos;topHeaderStartingNumber&apos;:1" STYLE_REF="completedTask" ID="ID_1941170900" CREATED="1618529174936" MODIFIED="1623451251039"/>
<node TEXT="&apos;fileLinksRelative&apos;:false" STYLE_REF="completedTask" ID="ID_1774172048" CREATED="1618529174940" MODIFIED="1623451251133"/>
<node TEXT="lineOverHeader" STYLE_REF="completedTask" ID="ID_232882959" CREATED="1618683151964" MODIFIED="1623451251226"/>
<node TEXT="ignoreHeaderDetails" STYLE_REF="completedTask" ID="ID_1634310707" CREATED="1618683430649" MODIFIED="1623451251355"/>
<node TEXT="ignoreHeaderNotes" STYLE_REF="completedTask" ID="ID_1090292605" CREATED="1618683445455" MODIFIED="1623451251464"/>
<node TEXT="ignoreLeafDetails" STYLE_REF="completedTask" ID="ID_745864454" CREATED="1618683466390" MODIFIED="1623451251601"/>
<node TEXT="ignoreHeaderImageObjects" STYLE_REF="completedTask" ID="ID_365279494" CREATED="1618683488913" MODIFIED="1623451251709"/>
</node>
</node>
<node TEXT="modificar funciones en MDH.groovy -" FOLDED="true" ID="ID_368082865" CREATED="1618528786463" MODIFIED="1618688527508">
<node TEXT="MDH Doc" FOLDED="true" ID="ID_1084592294" CREATED="1618529169066" MODIFIED="1618688570322">
<node TEXT="&apos;headersToUnderline&apos;:2" STYLE_REF="completedTask" ID="ID_1518374206" CREATED="1618529174927" MODIFIED="1623451251801"/>
<node TEXT="&apos;hideFolded&apos;:false" STYLE_REF="completedTask" ID="ID_1384596373" CREATED="1618529174927" MODIFIED="1623451251896"/>
<node TEXT="&apos;headerNumbering&apos;:true" STYLE_REF="completedTask" ID="ID_1315976016" CREATED="1618529174930" MODIFIED="1623451252063"/>
<node TEXT="&apos;topHeadersNumbered&apos;:false" STYLE_REF="completedTask" ID="ID_310797298" CREATED="1618529174933" MODIFIED="1623451252307"/>
<node TEXT="&apos;topHeaderStartingNumber&apos;:1" STYLE_REF="completedTask" ID="ID_485340050" CREATED="1618529174936" MODIFIED="1623451252491"/>
<node TEXT="&apos;fileLinksRelative&apos;:false" STYLE_REF="completedTask" ID="ID_909368801" CREATED="1618529174940" MODIFIED="1623451252605"/>
<node TEXT="lineOverHeader" STYLE_REF="completedTask" ID="ID_1893215419" CREATED="1618683151964" MODIFIED="1623451252700"/>
<node TEXT="ignoreHeaderDetails" STYLE_REF="completedTask" ID="ID_1416037982" CREATED="1618683430649" MODIFIED="1623451252796"/>
<node TEXT="ignoreHeaderNotes" STYLE_REF="completedTask" ID="ID_1030709207" CREATED="1618683445455" MODIFIED="1623451252911"/>
<node TEXT="ignoreLeafDetails" STYLE_REF="completedTask" ID="ID_394449609" CREATED="1618683466390" MODIFIED="1623451253014"/>
<node TEXT="ignoreHeaderImageObjects" STYLE_REF="completedTask" ID="ID_780521582" CREATED="1618683488913" MODIFIED="1623451253108"/>
</node>
</node>
<node TEXT="en preferencias Freeplane" FOLDED="true" ID="ID_1354376471" CREATED="1618528767586" MODIFIED="1618683831011"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      modificar MarkdownHelper.mm
    </p>
  </body>
</html></richcontent>
<node TEXT="defaults para" FOLDED="true" ID="ID_725382563" CREATED="1618529019356" MODIFIED="1618529025574">
<node TEXT="set de iconos a usar" STYLE_REF="completedTask" ID="ID_451303520" CREATED="1618528605203" MODIFIED="1623451253211"/>
<node TEXT="MDH Doc" FOLDED="true" ID="ID_658845800" CREATED="1618529169066" MODIFIED="1618688576491">
<node TEXT="&apos;headersToUnderline&apos;:2" STYLE_REF="completedTask" ID="ID_704460873" CREATED="1618529174927" MODIFIED="1623451253328"/>
<node TEXT="&apos;hideFolded&apos;:false" STYLE_REF="completedTask" ID="ID_1069568949" CREATED="1618529174927" MODIFIED="1623451253431"/>
<node TEXT="&apos;headerNumbering&apos;:true" STYLE_REF="completedTask" ID="ID_557022424" CREATED="1618529174930" MODIFIED="1623451253536"/>
<node TEXT="&apos;topHeadersNumbered&apos;:false" STYLE_REF="completedTask" ID="ID_4472070" CREATED="1618529174933" MODIFIED="1623451253655"/>
<node TEXT="&apos;topHeaderStartingNumber&apos;:1" STYLE_REF="completedTask" ID="ID_97444361" CREATED="1618529174936" MODIFIED="1623451253758"/>
<node TEXT="&apos;fileLinksRelative&apos;:false" STYLE_REF="completedTask" ID="ID_1243952070" CREATED="1618529174940" MODIFIED="1623451253907"/>
<node TEXT="lineOverHeader" STYLE_REF="completedTask" ID="ID_780234642" CREATED="1618683151964" MODIFIED="1623451254016"/>
<node TEXT="ignoreHeaderDetails" STYLE_REF="completedTask" ID="ID_5340368" CREATED="1618683430649" MODIFIED="1623451254108"/>
<node TEXT="ignoreHeaderNotes" STYLE_REF="completedTask" ID="ID_1977297862" CREATED="1618683445455" MODIFIED="1623451254208"/>
<node TEXT="ignoreLeafDetails" STYLE_REF="completedTask" ID="ID_1610678744" CREATED="1618683466390" MODIFIED="1623451254307"/>
<node TEXT="ignoreHeaderImageObjects" STYLE_REF="completedTask" ID="ID_622596347" CREATED="1618683488913" MODIFIED="1623451254399"/>
</node>
<node TEXT="MDH ToC" FOLDED="true" ID="ID_1870035584" CREATED="1618529179651" MODIFIED="1618529184574">
<node TEXT="&apos;TOClevels&apos;:2" STYLE_REF="completedTask" ID="ID_1255573660" CREATED="1618529174943" MODIFIED="1623451254497"/>
<node TEXT="&apos;TOCindent&apos;:false" STYLE_REF="completedTask" ID="ID_1130753493" CREATED="1618529174946" MODIFIED="1623451254590"/>
</node>
</node>
</node>
<node TEXT="Al crearse nodo MDH toma default de preferencias freeplane" FOLDED="true" ID="ID_584362939" CREATED="1618528918593" MODIFIED="1618683807952"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      modificar MarkdownDialog.groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="prueba" ID="ID_1498212815" CREATED="1618619733921" MODIFIED="1618619785128"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import org.freeplane.plugin.script.FreeplaneScriptBaseClass.ConfigProperties
    </p>
    <p>
      
    </p>
    <p>
      ArrayList atributos = [['headerNumbering':'markdownHelper_headerNumbering','useMDHicons':'markdownHelper_useMDHicons']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,['TOClevels':2,'TOCindent':false]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,[:],[:],[:],[:],[:],[:],[:],[:],[:],[:],[:],[:]]
    </p>
    <p>
      def config = new ConfigProperties()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      def atributs = atributos[0]
    </p>
    <p>
      
    </p>
    <p>
      atributs.collectEntries{k,v -&gt; [k,configValue(v)]}
    </p>
    <p>
      
    </p>
    <p>
      def configValue(prop){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;return config.getBooleanProperty(prop)
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="MDH Doc" FOLDED="true" ID="ID_935312542" CREATED="1618529169066" MODIFIED="1618529173817">
<node TEXT="&apos;headersToUnderline&apos;:2" STYLE_REF="completedTask" ID="ID_670258538" CREATED="1618529174927" MODIFIED="1623451254677"/>
<node TEXT="&apos;hideFolded&apos;:false" STYLE_REF="completedTask" ID="ID_514105290" CREATED="1618529174927" MODIFIED="1623451254777"/>
<node TEXT="&apos;headerNumbering&apos;:true" STYLE_REF="completedTask" ID="ID_1554580424" CREATED="1618529174930" MODIFIED="1623451254873"/>
<node TEXT="&apos;topHeadersNumbered&apos;:false" STYLE_REF="completedTask" ID="ID_1920310318" CREATED="1618529174933" MODIFIED="1623451254964"/>
<node TEXT="&apos;topHeaderStartingNumber&apos;:1" STYLE_REF="completedTask" ID="ID_413409542" CREATED="1618529174936" MODIFIED="1623451255060"/>
<node TEXT="&apos;fileLinksRelative&apos;:false" STYLE_REF="completedTask" ID="ID_258810978" CREATED="1618529174940" MODIFIED="1623451255161"/>
<node TEXT="lineOverHeader" STYLE_REF="completedTask" ID="ID_1132427085" CREATED="1618683151964" MODIFIED="1623451255254"/>
<node TEXT="ignoreHeaderDetails" STYLE_REF="completedTask" ID="ID_352779408" CREATED="1618683430649" MODIFIED="1623451255354"/>
<node TEXT="ignoreHeaderNotes" STYLE_REF="completedTask" ID="ID_479423930" CREATED="1618683445455" MODIFIED="1623451255441"/>
<node TEXT="ignoreLeafDetails" STYLE_REF="completedTask" ID="ID_623198659" CREATED="1618683466390" MODIFIED="1623451255533"/>
<node TEXT="ignoreHeaderImageObjects" STYLE_REF="completedTask" ID="ID_783677788" CREATED="1618683488913" MODIFIED="1623451255626"/>
</node>
</node>
<node TEXT="Agregar a nodo existente los atributos que le faltan" STYLE_REF="completedTask" ID="ID_604847017" CREATED="1618689180539" MODIFIED="1623451255715"/>
</node>
<node TEXT="cambiar tipo de licencia en AddOn" STYLE_REF="completedTask" FOLDED="true" ID="ID_1582565703" CREATED="1618594469030" MODIFIED="1623451255806">
<node TEXT="MIT" ID="ID_1496478982" CREATED="1618594485781" MODIFIED="1618594497486"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      MIT License
    </p>
    <p>
      
    </p>
    <p>
      Copyright (c) [year] [fullname]
    </p>
    <p>
      
    </p>
    <p>
      Permission is hereby granted, free of charge, to any person obtaining a copy
    </p>
    <p>
      of this software and associated documentation files (the &quot;Software&quot;), to deal
    </p>
    <p>
      in the Software without restriction, including without limitation the rights
    </p>
    <p>
      to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    </p>
    <p>
      copies of the Software, and to permit persons to whom the Software is
    </p>
    <p>
      furnished to do so, subject to the following conditions:
    </p>
    <p>
      
    </p>
    <p>
      The above copyright notice and this permission notice shall be included in all
    </p>
    <p>
      copies or substantial portions of the Software.
    </p>
    <p>
      
    </p>
    <p>
      THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    </p>
    <p>
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    </p>
    <p>
      FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    </p>
    <p>
      AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    </p>
    <p>
      LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    </p>
    <p>
      OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    </p>
    <p>
      SOFTWARE.
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="&apos;to be linked&apos;" FOLDED="true" ID="ID_1900050945" CREATED="1618508304243" MODIFIED="1618508315944">
<node TEXT="si está seleccionado nodo con link a file o a iamgen o a web debe tomar ese link al crear el nodo" STYLE_REF="completedTask" ID="ID_249312083" CREATED="1618508315960" MODIFIED="1623451255903"/>
<node TEXT="si linkea a nodo con link a nodo debe continuar la cadena" STYLE_REF="completedTask" ID="ID_1664153735" CREATED="1618508371951" MODIFIED="1623451255993"/>
</node>
<node ID="ID_936794940" CONTENT_ID="ID_1494263781">
<node ID="ID_1638957047" CONTENT_ID="ID_957460396"/>
<node ID="ID_184114441" CONTENT_ID="ID_1698925764"/>
</node>
<node TEXT="mejorando codigo de botón de root folder" STYLE_REF="completedTask" ID="ID_109821426" CREATED="1621874662909" MODIFIED="1641396355754"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MDH
    </p>
    <p>
      def nodo = node
    </p>
    <p>
      
    </p>
    <p>
      def base
    </p>
    <p>
      
    </p>
    <p>
      def nFolder
    </p>
    <p>
      nFolder = nodo.link.file?nodo:null
    </p>
    <p>
      if(nFolder){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;base = nodo.link.file
    </p>
    <p>
      }else{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nFolder = nFolder?:nodo.pathToRoot.reverse().find{it.link?.file?.directory}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nFolder = nFolder?:nodo.find{(it.link.file?true:false) &amp;&amp; it.attributes.containsKey(MDH.MDNodeAttr)}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;nFolder = nFolder?:nodo.find{(it.link.file?true:false)}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def rutas = nFolder.link.file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;base = rutas[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;rutas.each{r -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;base =&nbsp;&nbsp;comun(base, r)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def dir = base.isDirectory()?base.canonicalPath:base.parent&nbsp;&nbsp;//path como string
    </p>
    <p>
      
    </p>
    <p>
      return dir
    </p>
    <p>
      
    </p>
    <p>
      // --------------- methods --------------
    </p>
    <p>
      /*
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// devuelve directorio en común. (as File)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;a: File
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;b: File
    </p>
    <p>
      */
    </p>
    <p>
      def comun(a,b){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!a || !b) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def raiz
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if (a.toPath().getRoot().equals(b.toPath().getRoot())){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raiz = a.toPath().getRoot().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def sep = File.separator
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def lA = a.toPath().collect()*.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def lB = b.toPath().collect()*.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def n = lA.size()&gt;lB.size()?lB.size():lA.size()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def i = 0
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;while (i &lt; n &amp;&amp; lA[i]==lB[i]){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return (new File( raiz + (i&gt;0?(lA[0..i-1].join(sep)):'')))
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
<node TEXT="v0.1.1" STYLE_REF="completedTask" FOLDED="true" ID="ID_711429722" CREATED="1616167740206" MODIFIED="1658013716874">
<node TEXT="- added MDH preview panel" STYLE_REF="completedTask" FOLDED="true" ID="ID_1140809767" CREATED="1647182417136" MODIFIED="1647182573069">
<node TEXT="agregar dialogo que muestra resultado de nodoMD" STYLE_REF="completedTask" FOLDED="true" ID="ID_170075311" CREATED="1638834021142" MODIFIED="1641335976976" VGAP_QUANTITY="2 px">
<node TEXT="prueba con dialogo que se actualiza cada vez que cambia la nota del nodo que estaba seleccionado al clickear el botton" ID="ID_849673578" CREATED="1638478011189" MODIFIED="1641335976961"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.features.map.INodeChangeListener
    </p>
    <p>
      import org.freeplane.features.map.NodeChangeEvent
    </p>
    <p>
      import org.freeplane.features.map.NodeModel;
    </p>
    <p>
      import org.freeplane.features.mode.Controller;
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import org.freeplane.plugin.script.proxy.ScriptUtils
    </p>
    <p>
      
    </p>
    <p>
      import edofro.tutorialomatic.ToM_ui&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as tomui
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      SwingBuilder swing = new SwingBuilder()
    </p>
    <p>
      def dialogName = 'frameNota'
    </p>
    <p>
      def myPaneName = 'myContentPanel'
    </p>
    <p>
      iniMsg = '----- select the node with the note you want to view and click the button ----'
    </p>
    <p>
      //def c = ScriptUtils.c()
    </p>
    <p>
      
    </p>
    <p>
      def contentPane = swing.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: myPaneName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridBagLayout(),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background: Color.gray,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;){}
    </p>
    <p>
      
    </p>
    <p>
      def notePane = tomui.createInstructionsPane(iniMsg)
    </p>
    <p>
      
    </p>
    <p>
      //return notePane.text
    </p>
    <p>
      
    </p>
    <p>
      contentPane.add(notePane, tomui.GBC)
    </p>
    <p>
      
    </p>
    <p>
      def sp = tomui.createScrollPaneForContentPane(contentPane)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def buttonPanel = {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;swing.panel(constraints : BorderLayout.NORTH) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleButton(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'Activate Listener',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: new Insets(10,15,10,15),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttn = e.source
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//def c = ScriptUtils.c()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//def bEditPane = tomui.getButtonPanel(bttn).components[0]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttn.text = activateListener(notePane, c.selected)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def noteFrame = swing.frame(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;title : 'Markdown Note',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//id:'myDialog',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;name: dialogName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;// modal:false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;locationRelativeTo:UITools.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(450,400),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;// owner:UITools.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;pack : true,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;show : true,
    </p>
    <p>
      ) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;buttonPanel()
    </p>
    <p>
      
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //noteFrame.add(createActivateButtonPane())
    </p>
    <p>
      noteFrame.add(sp)
    </p>
    <p>
      
    </p>
    <p>
      def activateListener(comp, nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mapController = Controller.currentModeController.mapController;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def listenerFound = false;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;(mapController.nodeChangeListeners.findAll { it.class.name == MyNodeChangeListener.class.name }).each {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mapController.removeNodeChangeListener(it);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;listenerFound = true;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if (listenerFound) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.text = iniMsg
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'Listener deactivated..'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def myChgListener = new MyNodeChangeListener(comp, nodo );
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;mapController.addNodeChangeListener(myChgListener);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;comp.text = tomui.getHtmlFromNote(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return nodo.text.take(30)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      class MyNodeChangeListener implements INodeChangeListener {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def comp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def node;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;MyNodeChangeListener(def component, nodo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp = component;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node = nodo;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;public void nodeChanged(NodeChangeEvent event) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object property = event.property
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def id = event.node.id
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (id == node.id) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// if (NodeModel.NODE_TEXT.equals(property)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// comp.text =&nbsp;&nbsp;&quot;${event.property} of node ${id} has changed from '${event.oldValue}' to '${event.newValue}'. ------------------------------${node.transformedText}&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.text = tomui.getHtmlFromNote(node)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;ui.informationMessage('nodo cambió')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="creando previewPanel independiente de tomui" ID="ID_311191963" CREATED="1639267918100" MODIFIED="1640281322102"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      
    </p>
    <p>
      def texto = &quot;&quot;&quot;&lt;html&gt;
    </p>
    <p>
      &nbsp;&nbsp;&lt;head&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&lt;/head&gt;
    </p>
    <p>
      &nbsp;&nbsp;&lt;body&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The translation keys that this script uses. Define one child node per&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;supported locale. The attributes contain the translations. Define at&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;least
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;/p&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;ul&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'addons.{name}' for the add-on's name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'addons.{name}.description' for the description, e.g. in the add-on&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;overview dialog (not necessary for English)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;li&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'addons.{name}.&amp;lt;scriptname&amp;gt;' for each script since it will be the&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;menu title.
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/li&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;/ul&gt;
    </p>
    <p>
      &nbsp;&nbsp;&lt;/body&gt;
    </p>
    <p>
      &lt;/html&gt;
    </p>
    <p>
      &quot;&quot;&quot;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;SwingBuilder swing = new SwingBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def dialogName = 'frameNota'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def myPaneName = 'myContentPanel'
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def newEditorPane = { t -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def com = swing.editorPane(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editable&nbsp;&nbsp;&nbsp;&nbsp;: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentType : &quot;text/html&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background&nbsp;&nbsp;: Color.pink,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : t,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//preferredSize: new Dimension(30, 50),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com.addHyperlinkListener(e -&gt; {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (HyperlinkEvent.EventType.ACTIVATED.equals(e.getEventType())) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Desktop desktop = Desktop.getDesktop();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;desktop.browse(e.getURL().toURI());
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (Exception ex) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ex.printStackTrace();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return com
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def editorPane //= newEditorPane(texto)
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def scrollPane = {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def com = swing.scrollPane(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background: Color.blue,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//newEditorPane(texto)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane = newEditorPane(texto)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;com.verticalScrollBar.unitIncrement = 16&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return com
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def noteFrame
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def buttonPanel = {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swing.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;constraints : BorderLayout.NORTH,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background: Color.yellow,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gridLayout()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleButton(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'Activate Listener',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//margin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: new Insets(10,15,10,15),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttn = e.source
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bttn.text = activateListener(editorPane, c.selected)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'botón',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'botón',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toggleButton(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : 'alwaysOnTop',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {e -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bttn = e.source
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//bttn.text = activateListener(editorPane, c.selected)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;noteFrame.alwaysOnTop = bttn.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;noteFrame = swing.frame(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title : 'Markdown Note',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: dialogName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locationRelativeTo: UITools.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(450,400),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background: Color.green,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack : true,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show : true,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// id:'myDialog',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// modal:false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// owner:UITools.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderLayout()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;buttonPanel()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scrollPane()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def activateListener(comp, nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comp.text = nodo.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return nodo.text.take(30)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane.background =&nbsp;&nbsp;Color.green
    </p>
    <p>
      
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;noteFrame.add(sp)
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="hacer que se vean imagenes en disco en previewPanel" STYLE_REF="completedTask" FOLDED="true" ID="ID_1119112375" CREATED="1641312518140" MODIFIED="1641333514463">
<node TEXT="prueba 01" ID="ID_271162208" CREATED="1641312547373" MODIFIED="1641326188941"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownPreview
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      
    </p>
    <p>
      import org.freeplane.plugin.script.proxy.NodeProxy
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      import javax.swing.text.Document;
    </p>
    <p>
      import javax.swing.text.html.HTMLDocument;
    </p>
    <p>
      import javax.swing.text.html.HTMLEditorKit;
    </p>
    <p>
      
    </p>
    <p>
      def MDHPreviewDialog = UITools.frame.ownedWindows.find{ it.name == MarkdownPreview.dialogName }
    </p>
    <p>
      if(!MDHPreviewDialog) return 'dialogo no encontrado'
    </p>
    <p>
      def editorPane =&nbsp;&nbsp;MDHPreviewDialog.contentPane.components[1].components[0].components[0]//.class//class.methods*.name.findAll{it.contains('find')}
    </p>
    <p>
      
    </p>
    <p>
      editorPane.text = &quot;&quot;&quot;&lt;html&gt;
    </p>
    <p>
      &nbsp;&nbsp;&lt;head&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&lt;/head&gt;
    </p>
    <p>
      &nbsp;&nbsp;&lt;body&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;file:/C:/Users/Edo/Documents/GitHub/hello-world/resources/Animals%20Icons%20Set/Animals_png_small/mammals/Bear.png&quot; alt=&quot;Bear.png&quot;&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&lt;/body&gt;
    </p>
    <p>
      &lt;/html&gt;&quot;&quot;&quot;
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="prueba Marked" ID="ID_244289467" CREATED="1641326144447" MODIFIED="1641326157572"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import io.github.gitbucket.markedj.Marked
    </p>
    <p>
      import io.github.gitbucket.markedj.Options
    </p>
    <p>
      
    </p>
    <p>
      Options options = new Options();
    </p>
    <p>
      options.getWhitelist().addProtocols(&quot;img&quot;, &quot;src&quot;, &quot;http&quot;, &quot;https&quot;, &quot;file&quot;)
    </p>
    <p>
      
    </p>
    <p>
      //options.getWhitelist().removeProtocols(&quot;img&quot;, &quot;src&quot;, &quot;http&quot;, &quot;https&quot;)
    </p>
    <p>
      //options.setWhitelist(null);
    </p>
    <p>
      //return options.whitelist.toString()
    </p>
    <p>
      //return options.properties
    </p>
    <p>
      
    </p>
    <p>
      def texto = node.noteText
    </p>
    <p>
      
    </p>
    <p>
      return Marked.marked(texto, options)
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="- Preview Panel format now is taken from the MarkdownHelperPreview Style node" STYLE_REF="completedTask" FOLDED="true" ID="ID_1525508495" CREATED="1647182417136" MODIFIED="1647182573085">
<node TEXT="definir style de previewPanel como style node" STYLE_REF="completedTask" FOLDED="true" ID="ID_203756938" CREATED="1640464956460" MODIFIED="1641333514478">
<node TEXT="prueba1" ID="ID_548206001" CREATED="1640464998565" MODIFIED="1640472912447"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import org.freeplane.features.nodestyle.NodeCss
    </p>
    <p>
      import org.freeplane.features.styles.LogicalStyleController.StyleOption
    </p>
    <p>
      import org.freeplane.features.nodestyle.NodeStyleController
    </p>
    <p>
      import org.freeplane.features.mode.Controller
    </p>
    <p>
      import org.freeplane.features.map.NodeModel
    </p>
    <p>
      import org.freeplane.features.styles.MapStyleModel
    </p>
    <p>
      
    </p>
    <p>
      //return StyleOption.FOR_UNSELECTED_NODE
    </p>
    <p>
      NodeCss noteCss
    </p>
    <p>
      
    </p>
    <p>
      //final MapStyleModel model = MapStyleModel.getExtension(map)
    </p>
    <p>
      final NodeModel noteStyleNode = node.style.styleNode.delegate// model.getStyleNodeSafe(MapStyleModel.NOTE_STYLE);
    </p>
    <p>
      
    </p>
    <p>
      final NodeStyleController style = Controller.getCurrentModeController().getExtension(NodeStyleController.class);
    </p>
    <p>
      noteCss = style.getStyleSheet(noteStyleNode, StyleOption.STYLES_ONLY);
    </p>
    <p>
      
    </p>
    <p>
      noteCss.properties
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="prueba 2" ID="ID_1692059469" CREATED="1640467207747" MODIFIED="1640472889929"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import org.freeplane.core.resources.TranslatedObject;
    </p>
    <p>
      import org.freeplane.features.styles.*
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def string = &quot;defaultstyle.note&quot;
    </p>
    <p>
      
    </p>
    <p>
      def translatedObject = new TranslatedObject(string)
    </p>
    <p>
      
    </p>
    <p>
      //return translatedObject.object.class//properties//class.methods*.name
    </p>
    <p>
      
    </p>
    <p>
      def NOTE_STYLE = new StyleTranslatedObject(string)
    </p>
    <p>
      
    </p>
    <p>
      //return NOTE_STYLE.class//.methods*.name
    </p>
    <p>
      
    </p>
    <p>
      IStyle d = new StyleTranslatedObject(string)
    </p>
    <p>
      
    </p>
    <p>
      d.class
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="prueba 3" ID="ID_999219485" CREATED="1640468105356" MODIFIED="1640474510229"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import javax.swing.text.html.StyleSheet
    </p>
    <p>
      import org.freeplane.core.ui.components.html.StyleSheetConfigurer;
    </p>
    <p>
      import edofro.MarkDownHelper.MarkdownPreview
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      //import java.awt.*
    </p>
    <p>
      
    </p>
    <p>
      def MDHPreviewDialog = UITools.frame.ownedWindows.find{ it.name == MarkdownPreview.dialogName }
    </p>
    <p>
      
    </p>
    <p>
      def editorPane =&nbsp;&nbsp;MDHPreviewDialog.contentPane.components[1].components[0].components[0]//.class//class.methods*.name.findAll{it.contains('find')}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //return editorPane
    </p>
    <p>
      
    </p>
    <p>
      def styleNode = node.style.styleNode.parent.children.find{it.text == 'Important'}
    </p>
    <p>
      
    </p>
    <p>
      updateColors(editorPane, styleNode)
    </p>
    <p>
      updateStyleSheet(editorPane, styleNode)
    </p>
    <p>
      
    </p>
    <p>
      def updateColors(editorPane, styleNode) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fgColor = styleNode.style.textColor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def bgColor = styleNode.style.backgroundColor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane.setForeground(fgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;editorPane.setBackground(bgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      //*
    </p>
    <p>
      def updateStyleSheet(editorPane, styleNode) { // String ownRule, StyleSheet customStyleSheet) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;StringBuilder cssBuilder = new StringBuilder( &quot;body {&quot;).append(styleNode.style.css).append(&quot;}\n&quot;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;String ownRule =&nbsp;&nbsp;cssBuilder.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;StyleSheet styleSheet = editorPane.getDocument().getStyleSheet();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;StyleSheetConfigurer.resetStyles(styleSheet, 1);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def ownStyleSheet = new StyleSheet()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.removeStyle(&quot;body&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.removeStyle(&quot;p&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.addRule(ownRule);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;styleSheet.addStyleSheet(ownStyleSheet);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//styleSheet.addStyleSheet(customStyleSheet);
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      return styleNode.style.css&nbsp;&nbsp;//.getCss()
    </p>
    <p>
      //node.getCss()
    </p>
    <p>
      
    </p>
    <p>
      /*
    </p>
    <p>
      xx
    </p>
    <p>
      */
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="prueba 4" FOLDED="true" ID="ID_832643922" CREATED="1640476163983" MODIFIED="1641312503683"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import javax.swing.text.html.StyleSheet
    </p>
    <p>
      import org.freeplane.core.ui.components.html.StyleSheetConfigurer;
    </p>
    <p>
      import edofro.MarkDownHelper.MarkdownPreview
    </p>
    <p>
      import org.freeplane.core.ui.components.UITools
    </p>
    <p>
      import org.freeplane.core.ui.components.html.CssRuleBuilder
    </p>
    <p>
      import org.freeplane.features.styles.LogicalStyleController.StyleOption
    </p>
    <p>
      //import org.freeplane.features.nodestyle.NodeStyleController
    </p>
    <p>
      //import org.freeplane.features.nodestyle.mindmapmode.MNodeStyleController as NSC
    </p>
    <p>
      import java.awt.Font
    </p>
    <p>
      import org.freeplane.features.map.MapModel;
    </p>
    <p>
      import org.freeplane.features.map.NodeModel;
    </p>
    <p>
      import org.freeplane.features.styles.MapStyleModel;
    </p>
    <p>
      import org.freeplane.features.mode.Controller;
    </p>
    <p>
      import org.freeplane.plugin.script.proxy.NodeProxy
    </p>
    <p>
      
    </p>
    <p>
      def MDHPreviewStyle = 'MarkdownHelperPreview'
    </p>
    <p>
      
    </p>
    <p>
      def styleNode = getUserStyleNode(MDHPreviewStyle)
    </p>
    <p>
      //return styleNode//.class
    </p>
    <p>
      
    </p>
    <p>
      def MDHPreviewDialog = UITools.frame.ownedWindows.find{ it.name == MarkdownPreview.dialogName }
    </p>
    <p>
      if(!MDHPreviewDialog) return 'dialogo no encontrado'
    </p>
    <p>
      def editorPane =&nbsp;&nbsp;MDHPreviewDialog.contentPane.components[1].components[0].components[0]//.class//class.methods*.name.findAll{it.contains('find')}
    </p>
    <p>
      //return editorPane
    </p>
    <p>
      
    </p>
    <p>
      updateFormat(editorPane, styleNode)
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //-----methods---
    </p>
    <p>
      
    </p>
    <p>
      def updateFormat(editorPane, NodeProxy nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!nodo || !editorPane) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;updateColors(editorPane, nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;updateStyleSheet(editorPane, nodo as NodeProxy)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;editorPane.updateUI()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def msg(t){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//node.createChild('x').note = t.toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//ui.informationMessage(t.toString())
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def updateColors(editorPane, nodo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!nodo || !editorPane) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def fgColor = nodo.style.textColor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//msg(fgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def bgColor = nodo.style.backgroundColor
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//msg(bgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;editorPane.setForeground(fgColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;editorPane.setBackground(bgColor)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def updateStyleSheet(editorPane, NodeProxy nodo) { // String ownRule, StyleSheet customStyleSheet) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!nodo || !editorPane) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return updateStyleSheet(editorPane, getStyleSheetFromNode(nodo))
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def getStyleSheetFromNode(nodo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!nodo) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;String ownRule&nbsp;&nbsp;= getCssRuleFromNodeCss(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;String nodeRule = getCssRuleFromNodeFormat(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def ownStyleSheet = new StyleSheet()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.removeStyle(&quot;body&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.removeStyle(&quot;p&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.addRule(nodeRule);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ownStyleSheet.addRule(ownRule);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return ownStyleSheet
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def getCssRuleFromNodeCss(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//TODO: if FP version &lt; xxxx --&gt; return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//TODO: si nodo == null --&gt; return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!nodo) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;StringBuilder cssBuilder = new StringBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//cssBuilder &lt;&lt; &quot;body {&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;cssBuilder &lt;&lt; nodo.style.css
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// cssBuilder &lt;&lt; &quot;}\n&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return cssBuilder.toString()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def getCssRuleFromNodeFormat(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!nodo) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def f = nodo.style.font
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;StringBuilder ruleBuilder = new StringBuilder(100);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ruleBuilder.append(&quot;body {&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ruleBuilder.append(new CssRuleBuilder()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withCSSFont( new Font(f.name,(f.bold?Font.BOLD:0) + (f.italic?Font.ITALIC:0) ,f.size))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withColor(nodo.style.textColor)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.withBackground(nodo.style.backgroundColor))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//.withAlignment(getHorizontalTextAlignment(nodo, StyleOption.FOR_UNSELECTED_NODE).swingConstant));
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;ruleBuilder.append(&quot;}\n&quot;);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return ruleBuilder.toString()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def updateStyleSheet(editorPane, StyleSheet ownStyleSheet) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if(!ownStyleSheet || !editorPane) return null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;StyleSheet styleSheet = editorPane.getDocument().getStyleSheet();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;StyleSheetConfigurer.resetStyles(styleSheet, 1);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;StyleSheet defaultSheet = StyleSheetConfigurer.createDefaultStyleSheet() //por si acaso
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;styleSheet.addStyleSheet(defaultSheet);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;styleSheet.addStyleSheet(ownStyleSheet);
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      // ---- getUserStyleNode ----
    </p>
    <p>
      
    </p>
    <p>
      def getUserStyleNode(String userStyle){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return getUserDefinedStylesParentNode().children.find{it.text == userStyle}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def getUserDefinedStylesParentNode(){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return getUserDefinedStylesParentNode(null)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def getUserDefinedStylesParentNode(scriptContext){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;MapModel map = Controller.getCurrentController().getMap();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;MapStyleModel styleModel = MapStyleModel.getExtension(map);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;MapModel styleMap = styleModel.getStyleMap();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;NodeModel userStyleParentNode = styleModel.getStyleNodeGroup(styleMap, MapStyleModel.STYLES_USER_DEFINED);
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def userDefinedParentNode = new NodeProxy(userStyleParentNode, scriptContext)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return userDefinedParentNode
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="pasar a archivo para que sea parte del Addon" STYLE_REF="completedTask" ID="ID_1278954531" CREATED="1640625050488" MODIFIED="1641312508301"/>
</node>
</node>
</node>
<node TEXT="using devtools v0.9.31" STYLE_REF="completedTask" ID="ID_792438545" CREATED="1647182417136" MODIFIED="1647182573101"/>
</node>
<node TEXT="v0.1.xxxx" STYLE_REF="Organizador" FOLDED="true" ID="ID_667869670" CREATED="1616167740206" MODIFIED="1658013709148" VSHIFT_QUANTITY="-0.76596 pt">
<node TEXT="importar estilos MDH" STYLE_REF="completedTask" ID="ID_884927374" CREATED="1648497541057" MODIFIED="1648518306717"/>
</node>
<node TEXT="Apuntes" FOLDED="true" ID="ID_197041189" CREATED="1616167740199" MODIFIED="1618241999699" VGAP_QUANTITY="2 px"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      markdown tools
    </p>
  </body>
</html></richcontent>
<node TEXT="Referencias sobre información formato Markdown" STYLE_REF="Organizador" FOLDED="true" ID="ID_1268238468" CREATED="1616167740185" MODIFIED="1651938666092" VGAP_QUANTITY="2 px"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      y LaTex
    </p>
  </body>
</html></richcontent>
<node TEXT="revisar casos y ver si son automatizables y si se justifica" STYLE_REF="completedTask" ID="ID_371579016" CREATED="1616167740185" MODIFIED="1623451213262"/>
<node TEXT="ejemplos de sintaxis y resultado" FOLDED="true" ID="ID_1920954181" CREATED="1616167740185" MODIFIED="1651938666086">
<node TEXT="https://www.markdownguide.org/cheat-sheet/" FOLDED="true" ID="ID_1024394677" CREATED="1616167740185" MODIFIED="1616167740185" LINK="https://www.markdownguide.org/cheat-sheet/">
<node TEXT="Basic Syntax" FOLDED="true" ID="ID_930896245" CREATED="1616167740185" MODIFIED="1616167740185">
<node TEXT="These are the elements outlined in John Gruber’s original design document. All Markdown applications support these elements." ID="ID_1747022874" CREATED="1616167740185" MODIFIED="1616167740185"/>
<node TEXT="Heading" STYLE_REF="completedTask" FOLDED="true" ID="ID_1734400309" CREATED="1616167740185" MODIFIED="1623451213492">
<node TEXT="# H1&#xa;## H2&#xa;### H3" ID="ID_159268536" CREATED="1616167740185" MODIFIED="1616167740185"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      # H1
    </p>
    <p>
      ## H2
    </p>
    <p>
      ### H3
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Bold" STYLE_REF="discardedTask" FOLDED="true" ID="ID_273672205" CREATED="1616167740185" MODIFIED="1623451302249">
<node TEXT="**bold text**" ID="ID_1114407049" CREATED="1616167740185" MODIFIED="1616167740185"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      **bold text**
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Italic" STYLE_REF="discardedTask" FOLDED="true" ID="ID_905343603" CREATED="1616167740185" MODIFIED="1623451302335">
<node TEXT="*italicized text*" ID="ID_214665108" CREATED="1616167740185" MODIFIED="1616167740185"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      *italicized text*
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Blockquote" STYLE_REF="completedTask" FOLDED="true" ID="ID_1870270985" CREATED="1616167740185" MODIFIED="1623451213727">
<node TEXT="&gt; blockquote" ID="ID_420521560" CREATED="1616167740185" MODIFIED="1616167740185"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      &gt; blockquote
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Ordered List" STYLE_REF="completedTask" FOLDED="true" ID="ID_959792590" CREATED="1616167740185" MODIFIED="1623451214028">
<node TEXT="1. First item&#xa;2. Second item&#xa;3. Third item" ID="ID_396436039" CREATED="1616167740185" MODIFIED="1616167740185"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      1. First item
    </p>
    <p>
      2. Second item
    </p>
    <p>
      3. Third item
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Unordered List" STYLE_REF="completedTask" FOLDED="true" ID="ID_368253481" CREATED="1616167740186" MODIFIED="1623451214271">
<node TEXT="- First item&#xa;- Second item&#xa;- Third item" ID="ID_594109416" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      - First item
    </p>
    <p>
      - Second item
    </p>
    <p>
      - Third item
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Code" STYLE_REF="completedTask" FOLDED="true" ID="ID_1108997525" CREATED="1616167740186" MODIFIED="1623451214510">
<node TEXT="`code`" ID="ID_369972830" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      `code`
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Horizontal Rule" STYLE_REF="completedTask" FOLDED="true" ID="ID_897112790" CREATED="1616167740186" MODIFIED="1623451214737">
<node TEXT="---" ID="ID_1708651472" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ---
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Link" STYLE_REF="completedTask" FOLDED="true" ID="ID_192797351" CREATED="1616167740186" MODIFIED="1623451214973">
<node TEXT="[title](https://www.example.com)" ID="ID_351050285" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      [title](https://www.example.com)
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Image" STYLE_REF="completedTask" FOLDED="true" ID="ID_1002066015" CREATED="1616167740186" MODIFIED="1623451215228">
<node TEXT="![alt text](image.jpg)" ID="ID_734064456" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ![alt text](image.jpg)
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="Extended Syntax" FOLDED="true" ID="ID_1310669469" CREATED="1616167740186" MODIFIED="1616167740186">
<node TEXT="These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements." ID="ID_250291320" CREATED="1616167740186" MODIFIED="1616167740186"/>
<node TEXT="Table" STYLE_REF="completedTask" FOLDED="true" ID="ID_1135171719" CREATED="1616167740186" MODIFIED="1623451215555">
<node TEXT="| Syntax | Description |&#xa;| ----------- | ----------- |&#xa;| Header | Title |&#xa;| Paragraph | Text |" ID="ID_949392077" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      | Syntax | Description |
    </p>
    <p>
      | ----------- | ----------- |
    </p>
    <p>
      | Header | Title |
    </p>
    <p>
      | Paragraph | Text |
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Fenced Code Block" STYLE_REF="completedTask" FOLDED="true" ID="ID_570085532" CREATED="1616167740186" MODIFIED="1623451215808">
<node TEXT="```&#xa;{&#xa;  &quot;firstName&quot;: &quot;John&quot;,&#xa;  &quot;lastName&quot;: &quot;Smith&quot;,&#xa;  &quot;age&quot;: 25&#xa;}&#xa;```" ID="ID_1269557954" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ```
    </p>
    <p>
      {
    </p>
    <p>
      &nbsp;&nbsp;&quot;firstName&quot;: &quot;John&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&quot;lastName&quot;: &quot;Smith&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&quot;age&quot;: 25
    </p>
    <p>
      }
    </p>
    <p>
      ```
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Footnote" FOLDED="true" ID="ID_1214077235" CREATED="1616167740186" MODIFIED="1616167740186">
<node TEXT="Here&apos;s a sentence with a footnote. [^1]&#xa;&#xa;[^1]: This is the footnote." ID="ID_421329600" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Here's a sentence with a footnote. [^1]
    </p>
    <p>
      
    </p>
    <p>
      [^1]: This is the footnote.
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Heading ID" FOLDED="true" ID="ID_1902406916" CREATED="1616167740186" MODIFIED="1616167740186">
<node TEXT="### My Great Heading {#custom-id}" ID="ID_1878995679" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ### My Great Heading {#custom-id}
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Definition List" FOLDED="true" ID="ID_930187166" CREATED="1616167740186" MODIFIED="1616167740186">
<node TEXT="term&#xa;: definition" ID="ID_1246941552" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      term
    </p>
    <p>
      : definition
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Strikethrough" FOLDED="true" ID="ID_338342135" CREATED="1616167740186" MODIFIED="1616167740186">
<node TEXT="~~The world is flat.~~" ID="ID_1119576478" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ~~The world is flat.~~
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Task List" STYLE_REF="completedTask" FOLDED="true" ID="ID_1995241965" CREATED="1616167740186" MODIFIED="1623451216055">
<node TEXT="- [x] Write the press release&#xa;- [ ] Update the website&#xa;- [ ] Contact the media" ID="ID_1683437031" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      - [x] Write the press release
    </p>
    <p>
      - [ ] Update the website
    </p>
    <p>
      - [ ] Contact the media
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="markdown-cheat-sheet.md" STYLE_REF="missing" ID="ID_1421411082" CREATED="1616687440651" MODIFIED="1678219062791" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/markdown-cheat-sheet.md">
<attribute NAME="lastModifiedTime" VALUE="11-04-21 19:36" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-11T19:36-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="11-04-21 19:37" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-11T19:37-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="11-04-21 19:36" OBJECT="org.freeplane.features.format.FormattedDate|2021-04-11T19:36-0400|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="1.714" OBJECT="org.freeplane.features.format.FormattedNumber|1714|#,##0"/>
</node>
</node>
<node TEXT="https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet" FOLDED="true" ID="ID_41486274" CREATED="1616167740186" MODIFIED="1616167740186" LINK="https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet">
<node TEXT="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" ID="ID_922479275" CREATED="1616167740186" MODIFIED="1616167740186" LINK="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"/>
<node TEXT="emphasis" STYLE_REF="discardedTask" FOLDED="true" ID="ID_1912833833" CREATED="1616167740186" MODIFIED="1623451302424">
<node TEXT="Emphasis, aka italics, with *asterisks* or _underscores_.&#xa;&#xa;Strong emphasis, aka bold, with **asterisks** or __underscores__.&#xa;&#xa;Combined emphasis with **asterisks and _underscores_**.&#xa;&#xa;Strikethrough uses two tildes. ~~Scratch this.~~" ID="ID_853156278" CREATED="1616167740186" MODIFIED="1616167740186"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Emphasis, aka italics, with *asterisks* or _underscores_.
    </p>
    <p>
      
    </p>
    <p>
      Strong emphasis, aka bold, with **asterisks** or __underscores__.
    </p>
    <p>
      
    </p>
    <p>
      Combined emphasis with **asterisks and _underscores_**.
    </p>
    <p>
      
    </p>
    <p>
      Strikethrough uses two tildes. ~~Scratch this.~~
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Lists" STYLE_REF="completedTask" FOLDED="true" ID="ID_1096743530" CREATED="1616167740186" MODIFIED="1623451216284">
<node TEXT="1. First ordered list item&#xa;2. Another item&#xa;  * Unordered sub-list.&#xa;1. Actual numbers don&apos;t matter, just that it&apos;s a number&#xa;  1. Ordered sub-list&#xa;4. And another item.&#xa;&#xa;   Some text that should be aligned with the above item.&#xa;&#xa;* Unordered list can use asterisks&#xa;- Or minuses&#xa;+ Or pluses" ID="ID_928413396" CREATED="1616167740187" MODIFIED="1616167740187"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      1. First ordered list item
    </p>
    <p>
      2. Another item
    </p>
    <p>
      &nbsp;&nbsp;* Unordered sub-list.
    </p>
    <p>
      1. Actual numbers don't matter, just that it's a number
    </p>
    <p>
      &nbsp;&nbsp;1. Ordered sub-list
    </p>
    <p>
      4. And another item.
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;Some text that should be aligned with the above item.
    </p>
    <p>
      
    </p>
    <p>
      * Unordered list can use asterisks
    </p>
    <p>
      - Or minuses
    </p>
    <p>
      + Or pluses
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Links" STYLE_REF="completedTask" FOLDED="true" ID="ID_1349001756" CREATED="1616167740187" MODIFIED="1623451216499">
<node TEXT="[I&apos;m an inline-style link](https://www.google.com)&#xa;&#xa;[I&apos;m a reference-style link][Arbitrary case-insensitive reference text]&#xa;&#xa;[You can use numbers for reference-style link definitions][1]&#xa;&#xa;Or leave it empty and use the [link text itself]&#xa;&#xa;URLs and URLs in angle brackets will automatically get turned into links.&#xa;http://www.example.com or &lt;http://www.example.com&gt; and sometimes&#xa;example.com (but not on Github, for example).&#xa;&#xa;Some text to show that the reference links can follow later.&#xa;&#xa;[arbitrary case-insensitive reference text]: https://www.mozilla.org&#xa;[1]: http://slashdot.org&#xa;[link text itself]: http://www.reddit.com" ID="ID_425176886" CREATED="1616167740187" MODIFIED="1616167740187"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      [I'm an inline-style link](https://www.google.com)
    </p>
    <p>
      
    </p>
    <p>
      [I'm a reference-style link][Arbitrary case-insensitive reference text]
    </p>
    <p>
      
    </p>
    <p>
      [You can use numbers for reference-style link definitions][1]
    </p>
    <p>
      
    </p>
    <p>
      Or leave it empty and use the [link text itself]
    </p>
    <p>
      
    </p>
    <p>
      URLs and URLs in angle brackets will automatically get turned into links.
    </p>
    <p>
      http://www.example.com or &lt;http://www.example.com&gt; and sometimes
    </p>
    <p>
      example.com (but not on Github, for example).
    </p>
    <p>
      
    </p>
    <p>
      Some text to show that the reference links can follow later.
    </p>
    <p>
      
    </p>
    <p>
      [arbitrary case-insensitive reference text]: https://www.mozilla.org
    </p>
    <p>
      [1]: http://slashdot.org
    </p>
    <p>
      [link text itself]: http://www.reddit.com
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Images" STYLE_REF="completedTask" FOLDED="true" ID="ID_1144784797" CREATED="1616167740187" MODIFIED="1623451216729">
<node TEXT="Here&apos;s our logo (hover to see the title text):&#xa;&#xa;Inline-style:&#xa;![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 1&quot;)&#xa;&#xa;Reference-style:&#xa;![alt text][logo]&#xa;&#xa;[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 2&quot;" ID="ID_284860979" CREATED="1616167740187" MODIFIED="1616167740187"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Here's our logo (hover to see the title text):
    </p>
    <p>
      
    </p>
    <p>
      Inline-style:
    </p>
    <p>
      ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 1&quot;)
    </p>
    <p>
      
    </p>
    <p>
      Reference-style:
    </p>
    <p>
      ![alt text][logo]
    </p>
    <p>
      
    </p>
    <p>
      [logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &quot;Logo Title Text 2&quot;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="code" STYLE_REF="completedTask" FOLDED="true" ID="ID_213227744" CREATED="1616167740187" MODIFIED="1623451216964">
<node TEXT="```javascript&#xa;var s = &quot;JavaScript syntax highlighting&quot;;&#xa;alert(s);&#xa;```&#xa;&#xa;```python&#xa;s = &quot;Python syntax highlighting&quot;&#xa;print s&#xa;```&#xa;&#xa;```&#xa;No language indicated, so no syntax highlighting.&#xa;But let&apos;s throw in a &lt;b&gt;tag&lt;/b&gt;.&#xa;```" ID="ID_1993929380" CREATED="1616167740187" MODIFIED="1616167740187"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ```javascript
    </p>
    <p>
      var s = &quot;JavaScript syntax highlighting&quot;;
    </p>
    <p>
      alert(s);
    </p>
    <p>
      ```
    </p>
    <p>
      
    </p>
    <p>
      ```python
    </p>
    <p>
      s = &quot;Python syntax highlighting&quot;
    </p>
    <p>
      print s
    </p>
    <p>
      ```
    </p>
    <p>
      
    </p>
    <p>
      ```
    </p>
    <p>
      No language indicated, so no syntax highlighting.
    </p>
    <p>
      But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
    </p>
    <p>
      ```
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="tables" STYLE_REF="completedTask" FOLDED="true" ID="ID_1309639819" CREATED="1616167740187" MODIFIED="1623451217179">
<node TEXT="Colons can be used to align columns.&#xa;&#xa;| Tables        | Are           | Cool  |&#xa;| ------------- |:-------------:| -----:|&#xa;| col 3 is      | right-aligned | $1600 |&#xa;| col 2 is      | centered      |   $12 |&#xa;| zebra stripes | are neat      |    $1 |&#xa;&#xa;The outer pipes (|) are optional, and you don&apos;t need to make the raw Markdown line up prettily. You can also use inline Markdown.&#xa;&#xa;Markdown | Less | Pretty&#xa;--- | --- | ---&#xa;*Still* | `renders` | **nicely**&#xa;1 | 2 | 3" ID="ID_1557626967" CREATED="1616167740187" MODIFIED="1616167740187"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Colons can be used to align columns.
    </p>
    <p>
      
    </p>
    <p>
      | Tables&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Are&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| Cool&nbsp;&nbsp;|
    </p>
    <p>
      | ------------- |:-------------:| -----:|
    </p>
    <p>
      | col 3 is&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| right-aligned | $1600 |
    </p>
    <p>
      | col 2 is&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| centered&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;$12 |
    </p>
    <p>
      | zebra stripes | are neat&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;$1 |
    </p>
    <p>
      
    </p>
    <p>
      The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.
    </p>
    <p>
      
    </p>
    <p>
      Markdown | Less | Pretty
    </p>
    <p>
      --- | --- | ---
    </p>
    <p>
      *Still* | `renders` | **nicely**
    </p>
    <p>
      1 | 2 | 3
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Blockquotes" STYLE_REF="completedTask" FOLDED="true" ID="ID_1323670808" CREATED="1616167740187" MODIFIED="1623451217415">
<node TEXT="&gt; Blockquotes are very handy in email to emulate reply text.&#xa;&gt; This line is part of the same quote.&#xa;&#xa;Quote break.&#xa;&#xa;&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let&apos;s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote." ID="ID_991781622" CREATED="1616167740187" MODIFIED="1616167740187"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      &gt; Blockquotes are very handy in email to emulate reply text.
    </p>
    <p>
      &gt; This line is part of the same quote.
    </p>
    <p>
      
    </p>
    <p>
      Quote break.
    </p>
    <p>
      
    </p>
    <p>
      &gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Inline HTML" FOLDED="true" ID="ID_1256485783" CREATED="1616167740187" MODIFIED="1616167740187">
<node TEXT="&lt;dl&gt;&#xa;  &lt;dt&gt;Definition list&lt;/dt&gt;&#xa;  &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;&#xa;&#xa;  &lt;dt&gt;Markdown in HTML&lt;/dt&gt;&#xa;  &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;&#xa;&lt;/dl&gt;" ID="ID_644162219" CREATED="1616167740187" MODIFIED="1616167740187"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      &lt;dl&gt;
    </p>
    <p>
      &nbsp;&nbsp;&lt;dt&gt;Definition list&lt;/dt&gt;
    </p>
    <p>
      &nbsp;&nbsp;&lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;
    </p>
    <p>
      
    </p>
    <p>
      &nbsp;&nbsp;&lt;dt&gt;Markdown in HTML&lt;/dt&gt;
    </p>
    <p>
      &nbsp;&nbsp;&lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;
    </p>
    <p>
      &lt;/dl&gt;
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="LaTex" FOLDED="true" ID="ID_1643735172" CREATED="1616167740187" MODIFIED="1616167740187">
<node TEXT="$x = a_0 + \frac{1}{a_1 + \frac{1}{a_2 + \frac{1}{a_3 + a_4}}}$" ID="ID_961087678" CREATED="1616167740187" MODIFIED="1616167740187"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/markdown">
<html>
  <head>
    
  </head>
  <body>
    <p>
      $x = a_0 + \frac{1}{a_1 + \frac{1}{a_2 + \frac{1}{a_3 + a_4}}}$
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Ejemplos LaTex" FOLDED="true" ID="ID_1689374312" CREATED="1616167740187" MODIFIED="1616167740187">
<node TEXT="https://en.wikibooks.org/wiki/LaTeX/Mathematics" ID="ID_1704508965" CREATED="1616167740187" MODIFIED="1616167740187" LINK="https://en.wikibooks.org/wiki/LaTeX/Mathematics"/>
<node TEXT="$-b \pm \sqrt{b^2 - 4ac} \over 2a$" ID="ID_1644932385" CREATED="1616167740187" MODIFIED="1616167740187" FORMAT="latexPatternFormat">
<font SIZE="24"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      $-b \pm \sqrt{b^2 - 4ac} \over 2a$
    </p>
  </body>
</html></richcontent>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/latex"/>
</node>
<node TEXT="$x = a_0 + \frac{1}{a_1 + \frac{1}{a_2 + \frac{1}{a_3 + a_4}}}$" ID="ID_142740096" CREATED="1616167740187" MODIFIED="1616167740187" FORMAT="latexPatternFormat">
<font SIZE="24"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/latex"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      $x = a_0 + \frac{1}{a_1 + \frac{1}{a_2 + \frac{1}{a_3 + a_4}}}$
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="$\forall x \in X, \quad \exists y \leq \epsilon$" ID="ID_1065943133" CREATED="1616167740187" MODIFIED="1616167740187" FORMAT="latexPatternFormat">
<font SIZE="24"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="plain/latex"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      $\forall x \in X, \quad \exists y \leq \epsilon$
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf" ID="ID_1457176182" CREATED="1616167740187" MODIFIED="1616167740187" LINK="https://guides.github.com/pdfs/markdown-cheatsheet-online.pdf"/>
</node>
<node TEXT="writing on GitHub" FOLDED="true" ID="ID_486526553" CREATED="1616167740188" MODIFIED="1616167740188">
<node TEXT="https://docs.github.com/en/github/writing-on-github" ID="ID_1240239075" CREATED="1616167740188" MODIFIED="1616167740188" LINK="https://docs.github.com/en/github/writing-on-github"/>
</node>
</node>
<node TEXT="Iconos para dialogo" ID="ID_1007105822" CREATED="1616167740200" MODIFIED="1618242444685"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      botones para agregar iconos
    </p>
  </body>
</html></richcontent>
<node TEXT="propuesta" FOLDED="true" ID="ID_805642558" CREATED="1616167740200" MODIFIED="1616167740200">
<node TEXT="tratar como final (nodo hoja / leaf)" ID="ID_1266228728" CREATED="1616167740200" MODIFIED="1616167740200" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-1F343"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="ignorar nodo" ID="ID_1885235166" CREATED="1616167740200" MODIFIED="1616167740200" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-26D4"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="ignorar contenido" ID="ID_1082090485" CREATED="1616167740200" MODIFIED="1616167740200" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-1F648"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="lista numerada" ID="ID_352041666" CREATED="1616167740200" MODIFIED="1616167740200" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-1F522"/>
<richcontent CONTENT-TYPE="plain/" TYPE="DETAILS">
    <text>=node.icons.icons</text>
</richcontent>
</node>
<node TEXT="lista bullet" ID="ID_1252466750" CREATED="1616167740200" MODIFIED="1616167740200" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-1F537"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="comentario" ID="ID_1992880520" CREATED="1616167740200" MODIFIED="1616167740200" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-1F4AC"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="add NewLine to image or link" ID="ID_756415855" CREATED="1616167740200" MODIFIED="1616167740200" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-21A9"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="centrar columna" ID="ID_437609224" CREATED="1616167740201" MODIFIED="1616167740201" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-2194"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="alineación columna derecha" ID="ID_298631382" CREATED="1616167740201" MODIFIED="1616167740201" BACKGROUND_COLOR="#f9f9d1">
<icon BUILTIN="emoji-27A1"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =node.icons.icons
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Ver si es necesario que revise que no se repitan iconos o haya incompatibilidades entre ellos" STYLE_REF="discardedTask" FOLDED="true" ID="ID_494025629" CREATED="1616167740201" MODIFIED="1623451302523">
<node TEXT="en principio no es necesario" ID="ID_1506185319" CREATED="1616167740201" MODIFIED="1616167740201"/>
</node>
<node TEXT="menu" FOLDED="true" ID="ID_456929017" CREATED="1616167740201" MODIFIED="1616167740201">
<node TEXT="Remove first icon" ID="ID_1274417643" CREATED="1616167740201" MODIFIED="1616686138455" LINK="menuitem:_RemoveIcon_0_Action"/>
<node TEXT="Remove Last Icon" ID="ID_1775708576" CREATED="1616167740201" MODIFIED="1616686138475" LINK="menuitem:_RemoveIconAction"/>
<node TEXT="Remove all icons" ID="ID_485783397" CREATED="1616167740201" MODIFIED="1616686138430" LINK="menuitem:_RemoveAllIconsAction"/>
<node TEXT="leaf fluttering in wind" ID="ID_329573881" CREATED="1616167740201" MODIFIED="1616167740201" LINK="menuitem:_IconAction.emoji-1F343"/>
<node TEXT="see-no-evil monkey" ID="ID_1422189713" CREATED="1616167740201" MODIFIED="1616167740201" LINK="menuitem:_IconAction.emoji-1F648"/>
<node TEXT="no entry" ID="ID_469552938" CREATED="1616167740201" MODIFIED="1616167740201" LINK="menuitem:_IconAction.emoji-26D4"/>
<node TEXT="input numbers" ID="ID_1160507232" CREATED="1616167740201" MODIFIED="1616167740201" LINK="menuitem:_IconAction.emoji-1F522"/>
<node TEXT="large blue diamond" ID="ID_1653996126" CREATED="1616167740201" MODIFIED="1616167740201" LINK="menuitem:_IconAction.emoji-1F537"/>
<node TEXT="right arrow" ID="ID_1518287858" CREATED="1616167740201" MODIFIED="1616167740201" LINK="menuitem:_IconAction.emoji-27A1"/>
<node TEXT="left-right arrow" ID="ID_1921915392" CREATED="1616167740201" MODIFIED="1616167740201" LINK="menuitem:_IconAction.emoji-2194"/>
<node TEXT="right arrow curving left" ID="ID_773571188" CREATED="1616167740201" MODIFIED="1616167740201" LINK="menuitem:_IconAction.emoji-21A9"/>
<node TEXT="menu" ID="ID_1819706420" CREATED="1616167740201" MODIFIED="1616167740201">
<attribute NAME="tbActions" VALUE="[RemoveIcon_0_Action, RemoveIconAction, RemoveAllIconsAction, IconAction.emoji-1F343, IconAction.emoji-1F648, IconAction.emoji-26D4, IconAction.emoji-1F522, IconAction.emoji-1F537, IconAction.emoji-27A1, IconAction.emoji-2194, IconAction.emoji-21A9, IconAction.emoji-1F4AC]"/>
<attribute NAME="tbIcons" VALUE="[RemoveIcon_0_Action, RemoveIconAction, RemoveAllIconsAction, IconAction.emoji-1F343, IconAction.emoji-1F648, IconAction.emoji-26D4, IconAction.emoji-1F522, IconAction.emoji-1F537, IconAction.emoji-27A1, IconAction.emoji-2194, IconAction.emoji-21A9, IconAction.emoji-1F4AC]"/>
<attribute NAME="tbLabels" VALUE="[Remove first icon, Remove Last Icon, Remove all icons, leaf fluttering in wind, see-no-evil monkey, no entry, input numbers, large blue diamond, right arrow, left-right arrow, right arrow curving left, speech balloon]"/>
<attribute NAME="tbMaxTextLength" VALUE="25" OBJECT="org.freeplane.features.format.FormattedNumber|25"/>
<attribute NAME="tbShowIcons" VALUE="true"/>
<attribute NAME="tbShowLabels" VALUE="false"/>
<attribute NAME="tbTitle" VALUE="menu"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      customMenu (-labels +icons)
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="x" FOLDED="true" ID="ID_172121139" CREATED="1616685495386" MODIFIED="1616685497254">
<node TEXT="iconos" ID="ID_1632857046" CREATED="1616685366768" MODIFIED="1616685569136" ICON_SIZE="48 px" BACKGROUND_COLOR="#ffffff" STYLE="rectangle" SHAPE_HORIZONTAL_MARGIN="5 px" SHAPE_VERTICAL_MARGIN="3 px" MAX_WIDTH="20.1 cm">
<icon BUILTIN="emoji-1F343"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-1F648"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-26D4"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-1F522"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-1F537"/>
</node>
<node TEXT="iconos" ID="ID_1344972997" CREATED="1616685366768" MODIFIED="1616685592716" ICON_SIZE="48 px" BACKGROUND_COLOR="#ffffff" STYLE="rectangle" SHAPE_HORIZONTAL_MARGIN="5 px" SHAPE_VERTICAL_MARGIN="3 px" MAX_WIDTH="20.1 cm">
<icon BUILTIN="emoji-27A1"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-2194"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-21A9"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-2714"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-1F532"/>
</node>
<node TEXT="iconos" ID="ID_1325159123" CREATED="1616685366768" MODIFIED="1616696631690" ICON_SIZE="48 px" BACKGROUND_COLOR="#ffffff" STYLE="rectangle" SHAPE_HORIZONTAL_MARGIN="5 px" SHAPE_VERTICAL_MARGIN="3 px" MAX_WIDTH="20.1 cm">
<icon BUILTIN="emoji-1F519"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-1F4BE"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-1F4CD"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-1F4DD"/>
<icon BUILTIN="emoji-25AA"/>
<icon BUILTIN="emoji-2753"/>
</node>
<node TEXT="iconos" ID="ID_1829507960" CREATED="1616685366768" MODIFIED="1617636763537" ICON_SIZE="48 px" BACKGROUND_COLOR="#ffffff" STYLE="rectangle" SHAPE_HORIZONTAL_MARGIN="5 px" SHAPE_VERTICAL_MARGIN="3 px" MAX_WIDTH="20.1 cm">
<icon BUILTIN="emoji-1F517"/>
<icon BUILTIN="emoji-25AA"/>
</node>
</node>
</node>
<node TEXT="panel con botones agregar nodos MD" STYLE_REF="completedTask" FOLDED="true" ID="ID_1534754915" CREATED="1616167740201" MODIFIED="1623451217684">
<node TEXT="accion crear nodoMD" ID="ID_1455278218" CREATED="1616167740201" MODIFIED="1624206277918"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Map icon = [leaf: 'emoji-1F343'] //TODO: usar dato de librería
    </p>
    <p>
      
    </p>
    <p>
      //return node.noteText
    </p>
    <p>
      estilo&nbsp;&nbsp;&nbsp;= 'MarkdownHelperNode'
    </p>
    <p>
      
    </p>
    <p>
      /*
    </p>
    <p>
      def label&nbsp;&nbsp;&nbsp;&nbsp;= 'textBlock'
    </p>
    <p>
      def formula&nbsp;&nbsp;= '= MarkDownHelper.textBlock(node)'
    </p>
    <p>
      def atributos = [:]
    </p>
    <p>
      
    </p>
    <p>
      def label&nbsp;&nbsp;&nbsp;&nbsp;= 'ToC'
    </p>
    <p>
      def formula&nbsp;&nbsp;= '= MarkDownHelper.TOC(node)'
    </p>
    <p>
      def atributos = ['TOClevels':2]
    </p>
    <p>
      */
    </p>
    <p>
      def label&nbsp;&nbsp;&nbsp;&nbsp;= 'Markdown document.md'
    </p>
    <p>
      def formula&nbsp;&nbsp;= '= MarkDownHelper.document(node)'
    </p>
    <p>
      def atributos = ['headersToUnderline':2,'hideFolded':false,'headerNumbering':true,'topHeadersNumbered':false,'topHeaderStartingNumber':1,'fileLinksRelative':false]
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      crearNodoMD(node,label, formula, atributos)
    </p>
    <p>
      
    </p>
    <p>
      def crearNodoMD(nodo,label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;nodo.createChild(label)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.style.name = estilo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.attributes = atributos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.noteText = formula
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//TODO: cambiar noteContentType a 'Markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="Accion crear nodoMD v2" FOLDED="true" ID="ID_444567045" CREATED="1616167740201" MODIFIED="1624206276148"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      estilo&nbsp;&nbsp;&nbsp;= 'MarkdownHelperNode' //TODO: usar dato de librería
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def formulas&nbsp;&nbsp;= ['= MarkDownHelper.document(node)','= MarkDownHelper.TOC(node)','= MarkDownHelper.webLink(node)','= MarkDownHelper.webImageLink(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.fileLink(node)','= MarkDownHelper.imageLink(node)','= MarkDownHelper.list(node)','= MarkDownHelper.plainTaskList(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.nestedTaskList(node)','= MarkDownHelper.table(node)','= MarkDownHelper.codeBlock(node)','= MarkDownHelper.textBlock(node)','----']
    </p>
    <p>
      def labels&nbsp;&nbsp;&nbsp;&nbsp;= ['Markdown document.md','ToC','web link','web Image'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'link to local file','local image','list','plain task list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'nested task list','table','code block','text block','horizontal line']
    </p>
    <p>
      def atributos = [['headersToUnderline':2,'hideFolded':false,'headerNumbering':true,'topHeadersNumbered':false,'topHeaderStartingNumber':1,'fileLinksRelative':false],['TOClevels':2],[:]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,[:],[:],[:],[:],[:],[:],[:],[:],[:],[:]]
    </p>
    <p>
      
    </p>
    <p>
      //return &quot; F: ${formulas.size()} - L: ${labels.size()} - L: ${atributos.size()}&quot;
    </p>
    <p>
      
    </p>
    <p>
      formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(node,labels[i], f, atributos[i])
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def crearNodoMD(nodo,label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;nodo.createChild(label)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.style.name = estilo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.attributes = atributos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.noteText = formula
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//TODO: cambiar noteContentType a 'Markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="Markdown document.md" STYLE_REF="MarkdownHelperNode" ID="ID_254950263" CREATED="1616167740201" MODIFIED="1616415979027">
<attribute NAME="headersToUnderline" VALUE="2" OBJECT="org.freeplane.features.format.FormattedNumber|2"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="true"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<attribute NAME="topHeaderStartingNumber" VALUE="1" OBJECT="org.freeplane.features.format.FormattedNumber|1"/>
<attribute NAME="fileLinksRelative" VALUE="false"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.document(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="ToC" STYLE_REF="MarkdownHelperNode" ID="ID_263091469" CREATED="1616167740202" MODIFIED="1616415979058">
<attribute NAME="TOClevels" VALUE="2" OBJECT="org.freeplane.features.format.FormattedNumber|2"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.TOC(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="web link" STYLE_REF="MarkdownHelperNode" ID="ID_1581183239" CREATED="1616167740202" MODIFIED="1616415979074"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.webLink(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="web Image" STYLE_REF="MarkdownHelperNode" ID="ID_28001917" CREATED="1616167740202" MODIFIED="1616415979090"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.webImageLink(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="link to local file" STYLE_REF="MarkdownHelperNode" ID="ID_192698232" CREATED="1616167740202" MODIFIED="1616415979105"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.fileLink(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="local image" STYLE_REF="MarkdownHelperNode" ID="ID_1753453599" CREATED="1616167740202" MODIFIED="1616415979121"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.imageLink(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" ID="ID_1275193758" CREATED="1616167740202" MODIFIED="1616415979137"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.list(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="plain task list" STYLE_REF="MarkdownHelperNode" ID="ID_998049132" CREATED="1616167740202" MODIFIED="1616415979152"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.plainTaskList(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="nested task list" STYLE_REF="MarkdownHelperNode" ID="ID_541762663" CREATED="1616167740202" MODIFIED="1616415979168"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.nestedTaskList(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="table" STYLE_REF="MarkdownHelperNode" ID="ID_1764912232" CREATED="1616167740202" MODIFIED="1616415979183"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.table(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="code block" STYLE_REF="MarkdownHelperNode" ID="ID_295673523" CREATED="1616167740202" MODIFIED="1616415979199"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.codeBlock(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="text block" STYLE_REF="MarkdownHelperNode" ID="ID_1745080557" CREATED="1616167740202" MODIFIED="1616415979215"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.textBlock(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="horizontal line" STYLE_REF="MarkdownHelperNode" ID="ID_1847652724" CREATED="1616167740202" MODIFIED="1616167740202"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      ----
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="Botón crear nodoMD" FOLDED="true" ID="ID_1394681401" CREATED="1616167740202" MODIFIED="1624206280698"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      import javax.swing.BoxLayout as BXL
    </p>
    <p>
      import java.awt.BorderLayout as BL
    </p>
    <p>
      
    </p>
    <p>
      estilo&nbsp;&nbsp;&nbsp;= 'MarkdownHelperNode' //TODO: usar dato de librería
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      def formulas&nbsp;&nbsp;= ['= MarkDownHelper.document(node)','= MarkDownHelper.TOC(node)','= MarkDownHelper.webLink(node)','= MarkDownHelper.webImageLink(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.fileLink(node)','= MarkDownHelper.imageLink(node)','= MarkDownHelper.list(node)','= MarkDownHelper.plainTaskList(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.nestedTaskList(node)','= MarkDownHelper.table(node)','= MarkDownHelper.codeBlock(node)','= MarkDownHelper.textBlock(node)','----']
    </p>
    <p>
      def labels&nbsp;&nbsp;&nbsp;&nbsp;= ['Markdown document.md','ToC','web link','web Image'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'link to local file','local image','list','plain task list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'nested task list','table','code block','text block','horizontal line']
    </p>
    <p>
      def atributos = [['headersToUnderline':2,'hideFolded':false,'headerNumbering':true,'topHeadersNumbered':false,'topHeaderStartingNumber':1,'fileLinksRelative':false],['TOClevels':2],[:]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,[:],[:],[:],[:],[:],[:],[:],[:],[:],[:]]
    </p>
    <p>
      
    </p>
    <p>
      //return &quot; F: ${formulas.size()} - L: ${labels.size()} - L: ${atributos.size()}&quot;
    </p>
    <p>
      
    </p>
    <p>
      dialogName = 'MarkDownHelperDialog'
    </p>
    <p>
      
    </p>
    <p>
      swingBuilder = new SwingBuilder()
    </p>
    <p>
      
    </p>
    <p>
      def creaBoton(label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : label,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//icon: includeIcon?menuUtils.getMenuItemIcon(iconos[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;Adds a '${label}' node to the map&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//minimumSize: minDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalAlignment:SwingConstants.LEFT,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,5,0,5),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(label, formula, atributos)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def creaContenido(formulas, labels, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBoton(labels[i], f, atributos[i])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(node,labels[i], f, atributos[i])
    </p>
    <p>
      //}
    </p>
    <p>
      
    </p>
    <p>
      def crearNodoMD(label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def nodo = c.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;nodo.createChild(label)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.style.name = estilo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.attributes = atributos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.noteText = formula
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//TODO: cambiar noteContentType a 'Markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def dialogo = ui.frame.ownedWindows.find{it.name == dialogName &amp;&amp; it.type.toString()=='NORMAL'}
    </p>
    <p>
      
    </p>
    <p>
      if(!dialogo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo=' se crea dialogo'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo = swingBuilder.dialog(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title : 'Markdown helper',
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:'myDialog',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: dialogName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modal:false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locationRelativeTo:ui.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimumSize: new Dimension(30,70),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;owner:ui.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack : true,
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show: true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;) {}
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = ' se reutiliza dialogo'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo.getContentPane().removeAll()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //dialogo.getContentPane()
    </p>
    <p>
      dialogo.add(creaContenido(formulas, labels, atributos))
    </p>
    <p>
      dialogo.pack()
    </p>
    <p>
      dialogo.show()
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<node TEXT="web Image" STYLE_REF="MarkdownHelperNode" ID="ID_117447733" CREATED="1616167740203" MODIFIED="1616415979230"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.webImageLink(node)</text>
</richcontent>
</node>
<node TEXT="table" STYLE_REF="MarkdownHelperNode" ID="ID_1739234330" CREATED="1616167740203" MODIFIED="1616415979246"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      = edofro.MarkDownHelper.MDH.table(node)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="list" STYLE_REF="MarkdownHelperNode" FOLDED="true" ID="ID_899903888" CREATED="1616167740203" MODIFIED="1616415979262"><richcontent TYPE="NOTE" CONTENT-TYPE="plain/">
    <text>= edofro.MarkDownHelper.MDH.list(node)</text>
</richcontent>
<node TEXT="caso 1" ID="ID_366708220" CREATED="1616167740203" MODIFIED="1616167740203"/>
<node TEXT="caso 2" FOLDED="true" ID="ID_1028668072" CREATED="1616167740203" MODIFIED="1616167740203">
<node TEXT="prueba 1" ID="ID_1957419514" CREATED="1616167740203" MODIFIED="1616167740203"/>
<node TEXT="prueba 2" ID="ID_1959052316" CREATED="1616167740203" MODIFIED="1616167740203"/>
</node>
<node TEXT="caso 3" ID="ID_1704448858" CREATED="1616167740203" MODIFIED="1616167740203"/>
</node>
</node>
<node TEXT="dialogo MD" ID="ID_337221964" CREATED="1616167740203" MODIFIED="1624206286296"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      import javax.swing.BoxLayout as BXL
    </p>
    <p>
      import java.awt.BorderLayout as BL
    </p>
    <p>
      
    </p>
    <p>
      estilo&nbsp;&nbsp;&nbsp;= 'MarkdownHelperNode' //TODO: usar dato de librería
    </p>
    <p>
      Map icon = [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leaf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F343' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignoreNode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-26D4'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignoreContent&nbsp;&nbsp;&nbsp;: 'emoji-1F648' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newLine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-21A9'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F522' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bullet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F537' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;centered&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2194'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alignRight&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-27A1'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comment&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4AC' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2714'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isTask&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F532' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeFirst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveIcon_0_Action',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeLast&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveIconAction',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeAll&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveAllIconsAction',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2753',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4BE',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoMD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F519',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toPlain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4DD',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;]&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      // definiciones botones iconos&nbsp;
    </p>
    <p>
      //TODO: usar datos de libreria para iconos ( y acciones)
    </p>
    <p>
      def tbActions = ['RemoveIcon_0_Action', 'RemoveIconAction', 'RemoveAllIconsAction', 'IconAction.emoji-1F343', 'IconAction.emoji-1F648', 'IconAction.emoji-26D4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-1F522', 'IconAction.emoji-1F537', 'IconAction.emoji-27A1', 'IconAction.emoji-2194', 'IconAction.emoji-21A9', 'IconAction.emoji-1F4AC'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-2714', 'IconAction.emoji-1F532']
    </p>
    <p>
      def tbIcons&nbsp;&nbsp;&nbsp;= ['RemoveIcon_0_Action', 'RemoveIconAction', 'RemoveAllIconsAction', 'IconAction.emoji-1F343', 'IconAction.emoji-1F648', 'IconAction.emoji-26D4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-1F522', 'IconAction.emoji-1F537', 'IconAction.emoji-27A1', 'IconAction.emoji-2194', 'IconAction.emoji-21A9', 'IconAction.emoji-1F4AC'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-2714', 'IconAction.emoji-1F532']
    </p>
    <p>
      def tbLabels&nbsp;&nbsp;= ['Remove first icon', 'Remove Last Icon', 'Remove all icons'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, &quot;behave as leaf node (don't look at its descendant)&quot;, 'ignore content', 'ignore node and its descendant'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'numbered list', 'bulleted list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'align right', 'align centered'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'add new line'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'comment (creo que no debe ir)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'completed', 'is Task']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      // definiciones botones nodos MD
    </p>
    <p>
      def formulas&nbsp;&nbsp;= ['= MarkDownHelper.document(node)','= MarkDownHelper.TOC(node)','= MarkDownHelper.webLink(node)','= MarkDownHelper.webImageLink(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.fileLink(node)','= MarkDownHelper.imageLink(node)','= MarkDownHelper.list(node)','= MarkDownHelper.plainTaskList(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.nestedTaskList(node)','= MarkDownHelper.table(node)','= MarkDownHelper.codeBlock(node)','= MarkDownHelper.textBlock(node)','----']
    </p>
    <p>
      def labels&nbsp;&nbsp;&nbsp;&nbsp;= ['Markdown document.md','ToC','web link','web Image'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'link to local file','local image','list','plain task list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'nested task list','table','code block','text block','horizontal line']
    </p>
    <p>
      def atributos = [['headersToUnderline':2,'hideFolded':false,'headerNumbering':true,'topHeadersNumbered':false,'topHeaderStartingNumber':1,'fileLinksRelative':false],['TOClevels':2],[:]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,[:],[:],[:],[:],[:],[:],[:],[:],[:],[:]]
    </p>
    <p>
      
    </p>
    <p>
      //return &quot; F: ${formulas.size()} - L: ${labels.size()} - L: ${atributos.size()}&quot;
    </p>
    <p>
      
    </p>
    <p>
      dialogName = 'MarkDownHelperDialog'
    </p>
    <p>
      swingBuilder = new SwingBuilder()
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- botones MD ---------------------------------------------------------------------------------
    </p>
    <p>
      def creaBotonMD(label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : label,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//icon: includeIcon?menuUtils.getMenuItemIcon(iconos[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;Adds a '${label}' node to the map&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//minimumSize: minDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalAlignment:SwingConstants.LEFT,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,5,0,5),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(label, formula, atributos)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def creaContenidoMD(formulas, labels, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBotonMD(labels[i], f, atributos[i])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(node,labels[i], f, atributos[i])
    </p>
    <p>
      //}
    </p>
    <p>
      
    </p>
    <p>
      def crearNodoMD(label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def nodo = c.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;nodo.createChild(label)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.style.name = estilo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.attributes = atributos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.noteText = formula
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//TODO: cambiar noteContentType a 'Markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- botones Iconos ---------------------------------------------------------------------------------
    </p>
    <p>
      def creaBotonIcon(acc, ic, lab){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon(ic),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: lab,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;menuUtils.executeMenuItems([acc])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def creaContenidoIcon(actions, icons, labels){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,5)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolBar(
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new FlowLayout(FlowLayout.LEFT, 0, 0)
    </p>
    <p>
      //
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,layout: new GridLayout(0,1)
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions.eachWithIndex{ a, j -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBotonIcon(a, icons[j], labels[j])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //region:
    </p>
    <p>
      def getNodoMarkdown(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def nMD = n.pathToRoot.find{it.attributes.containsKey('headerNumbering')}
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;ui.informationMessage(nMD.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return nMD
    </p>
    <p>
      }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      def lastNodeID
    </p>
    <p>
      &nbsp;
    </p>
    <p>
      
    </p>
    <p>
      def panelInferior = swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,4)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//HELP
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.help),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'Help information about selected Markdown Node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//TODO: Help action
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//copy to node
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.toPlain),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'copy Markdown to new node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def srcN = c.selected&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def i = srcN.parent.getChildPosition(srcN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;srcN.parent.createChild(i+1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.text = srcN.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.note = srcN.note
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.icons.add(icon.leaf)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//ir a nodo Markdown
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.gotoMD),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'jump to Markdown document node and back',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def srcN = c.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nMD = getNodoMarkdown(srcN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//ui.informationMessage(nMD.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nMD) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = ' No Markdown document node found!!'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastNodeID){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN = N(lastNodeID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(srcN.equals(nMD)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastNodeID){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN = N(lastNodeID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(nMD)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastNodeID = srcN.id
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//ir a nodo Markdown
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.save),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'save note to file',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- Dialogo ---------------------------------------------------------------------------------
    </p>
    <p>
      def dialogo = ui.frame.ownedWindows.find{it.name == dialogName &amp;&amp; it.type.toString()=='NORMAL'}
    </p>
    <p>
      
    </p>
    <p>
      if(!dialogo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo=' se crea dialogo'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo = swingBuilder.dialog(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title : 'Markdown helper',
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:'myDialog',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: dialogName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modal:false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locationRelativeTo:ui.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimumSize: new Dimension(30,70),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;owner:ui.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack : true,
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show: true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;) {}
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = ' se reutiliza dialogo'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo.getContentPane().removeAll()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      dialogo.getContentPane().setLayout(new BorderLayout())
    </p>
    <p>
      dialogo.add(creaContenidoIcon(tbActions, tbIcons, tbLabels), BorderLayout.PAGE_START)
    </p>
    <p>
      dialogo.add(creaContenidoMD(formulas, labels, atributos), BorderLayout.CENTER)
    </p>
    <p>
      dialogo.add(panelInferior, BorderLayout.PAGE_END)
    </p>
    <p>
      dialogo.pack()
    </p>
    <p>
      dialogo.show()
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="botones adicionales" FOLDED="true" ID="ID_36879801" CREATED="1616167740204" MODIFIED="1616167740204">
<node TEXT="botón exportar a nodo" STYLE_REF="completedTask" FOLDED="true" ID="ID_1291386384" CREATED="1616167740205" MODIFIED="1623451217922">
<node TEXT="copiar a nuevo nodo" ID="ID_1788855888" CREATED="1616167740205" MODIFIED="1616167740205"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Map icon = [leaf: 'emoji-1F343'] //TODO: usar dato de librería
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      def srcN = node
    </p>
    <p>
      
    </p>
    <p>
      def i = srcN.parent.getChildPosition(srcN)
    </p>
    <p>
      
    </p>
    <p>
      def tgtN =&nbsp;&nbsp;srcN.parent.createChild(i+1)
    </p>
    <p>
      
    </p>
    <p>
      tgtN.text = srcN.text
    </p>
    <p>
      tgtN.note = srcN.note
    </p>
    <p>
      
    </p>
    <p>
      tgtN.icons.add(icon.leaf)
    </p>
    <p>
      
    </p>
    <p>
      //TODO: cambiar noteContentType a 'Markdown'
    </p>
    <p>
      
    </p>
    <p>
      c.select(tgtN)
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="guardar archivo" STYLE_REF="completedTask" FOLDED="true" ID="ID_338786057" CREATED="1616167740205" MODIFIED="1623451218159">
<node TEXT="lógica" FOLDED="true" ID="ID_443907019" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="nodo tiene nota" FOLDED="true" ID="ID_589202693" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="no" FOLDED="true" ID="ID_691528747" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="return" ID="ID_94994013" CREATED="1616167740205" MODIFIED="1616167740205"/>
</node>
<node TEXT="si" FOLDED="true" ID="ID_611377844" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="nodo tiene link a file" FOLDED="true" ID="ID_1001111132" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="no" FOLDED="true" ID="ID_716739871" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="nodo pertenece a MDI" FOLDED="true" ID="ID_1628482157" CREATED="1616167740205" MODIFIED="1616167740205" VGAP_QUANTITY="54 pt">
<node TEXT="si" FOLDED="true" ID="ID_1942030447" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="conseguir file con MDI.obtainPathFromMap" FOLDED="true" ID="ID_589045443" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="si" ID="ID_1920669915" CREATED="1616167740205" MODIFIED="1678218951451">
<arrowlink DESTINATION="ID_1319635914"/>
</node>
<node TEXT="no" ID="ID_1872898123" CREATED="1616167740205" MODIFIED="1678218951451">
<arrowlink SHAPE="CUBIC_CURVE" DESTINATION="ID_1826168275" STARTINCLINATION="69 pt;71.25 pt;" ENDINCLINATION="0 pt;0 pt;" STARTARROW="DEFAULT" ENDARROW="NONE"/>
</node>
</node>
</node>
<node TEXT="no" FOLDED="true" ID="ID_933699594" CREATED="1616167740205" MODIFIED="1616167740205" VSHIFT_QUANTITY="-0.75 pt">
<node TEXT="conseguir file con FileChooser" FOLDED="true" ID="ID_1826168275" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="no" FOLDED="true" ID="ID_637946073" CREATED="1616167740205" MODIFIED="1616167740205">
<node TEXT="return" ID="ID_1265654129" CREATED="1616167740205" MODIFIED="1616167740205"/>
</node>
<node TEXT="si" ID="ID_1493120909" CREATED="1616167740205" MODIFIED="1678218951451">
<arrowlink DESTINATION="ID_1319635914"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="si" ID="ID_660571143" CREATED="1616167740205" MODIFIED="1678218951451">
<arrowlink DESTINATION="ID_1319635914"/>
</node>
</node>
</node>
</node>
<node TEXT="guardar nota en file" ID="ID_1319635914" CREATED="1616167740205" MODIFIED="1616167740205"/>
</node>
<node TEXT="ejemplo FileChooser" ID="ID_1338640108" CREATED="1616167740205" MODIFIED="1616167740205"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      import javax.swing.filechooser.FileNameExtensionFilter
    </p>
    <p>
      
    </p>
    <p>
      def swing = new SwingBuilder()
    </p>
    <p>
      def chooser = swing.fileChooser(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogTitle: &quot;Save Markdown document to file&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;fileSelectionMode: JFileChooser.FILES_ONLY,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;fileFilter: new FileNameExtensionFilter(&quot;Markdown&quot;, 'md', 'mkd', 'mkdn', 'mdwn', 'mdown', 'markdown', 'mdtxt', 'mdtext', 'text', 'Rmd', 'txt'),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;selectedFile: new File(&quot;fileToSave.md&quot;)
    </p>
    <p>
      )
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      switch ( chooser.showSaveDialog() )
    </p>
    <p>
      {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;case JFileChooser.APPROVE_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return chooser.selectedFile//.class
    </p>
    <p>
      /*
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File file = chooser.getSelectedFile();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def path =&nbsp;&nbsp;chooser.getCurrentDirectory().getAbsolutePath();
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;println &quot;path=&quot;+path+&quot;\nfile name=&quot;+file.toString();
    </p>
    <p>
      */
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;case JFileChooser.CANCEL_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;case JFileChooser.ERROR_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="más avanzado" ID="ID_1548748358" CREATED="1616167740205" MODIFIED="1616167740205"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.filechooser.FileNameExtensionFilter
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      
    </p>
    <p>
      def nodo = c.selected
    </p>
    <p>
      def file
    </p>
    <p>
      
    </p>
    <p>
      // getting file
    </p>
    <p>
      def texto = nodo.note?.plain
    </p>
    <p>
      if (texto &amp;&amp; texto != ''){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if (nodo.link?.uri?.scheme == 'file'){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = nodo.link.file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fPath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fPath = MDI.obtainPathFromMap(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e){}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fPath &amp;&amp; fPath != ''){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fileName = correctFileName(nodo.text)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = new File(fPath + fileName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!file) {file = getFileFromDialog(correctFileName(nodo.text))}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = getFileFromDialog(correctFileName(nodo.text))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = 'no Note in selected node'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return 'No tiene nota'
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //saving file
    </p>
    <p>
      if (file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if ( ui.showConfirmDialog(null, &quot;export text to: \n\n&nbsp;&nbsp;${file} ?&quot;, &quot;Overwrite/save file with node's note?&quot;, 2, 2)==0) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.setText(texto.toString(), 'UTF-8')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.link.file = file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.text = file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = &quot; Note's export aborted&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = 'no file defined. Not saved!!'
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //Region: ---------------------------- MDI ----------------------------------------
    </p>
    <p>
      def correctFileName(s){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def t = s.replace('\n','_').replace('\t','_').replace('/','_').replace('\\','_').replace('__','_')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return t.toString()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //Region: ---------------------------- FileChooser ----------------------------------------
    </p>
    <p>
      def getFileFromDialog(fileName){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def chooser = new SwingBuilder().fileChooser(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogTitle: &quot;Save Markdown document to file&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileSelectionMode: JFileChooser.FILES_ONLY,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileFilter: new FileNameExtensionFilter('Markdown', 'md', 'mkd', 'mkdn', 'mdwn', 'mdown', 'markdown', 'mdtxt', 'mdtext', 'text', 'Rmd', 'txt'),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mdExtensions = chooser.fileFilter.extensions
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def i&nbsp;&nbsp;&nbsp;&nbsp;= fileName.lastIndexOf('.')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def ext&nbsp;&nbsp;= i&gt;0?fileName.substring(i+1):null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;fileName = fileName + (mdExtensions.contains(ext)?'':'.md')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;chooser.selectedFile =&nbsp;&nbsp;new File(fileName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;File file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;switch ( chooser.showSaveDialog() )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.APPROVE_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = chooser.selectedFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.CANCEL_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.ERROR_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return file
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="dialogo MD con save.groovy" ID="ID_1873711830" CREATED="1616167740199" MODIFIED="1617324121347"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import groovy.swing.SwingBuilder
    </p>
    <p>
      import javax.swing.*
    </p>
    <p>
      import java.awt.*
    </p>
    <p>
      import java.awt.BorderLayout as BL
    </p>
    <p>
      import javax.swing.filechooser.FileNameExtensionFilter
    </p>
    <p>
      
    </p>
    <p>
      estilo&nbsp;&nbsp;&nbsp;= 'MarkdownHelperNode' //TODO: usar dato de librería
    </p>
    <p>
      Map icon = [
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;leaf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F343' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignoreNode&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-26D4'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ignoreContent&nbsp;&nbsp;&nbsp;: 'emoji-1F648' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;newLine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-21A9'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F522' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bullet&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F537' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;centered&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2194'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alignRight&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-27A1'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comment&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4AC' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completed&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2714'&nbsp;&nbsp;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isTask&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F532' ,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeFirst&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveIcon_0_Action',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeLast&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveIconAction',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;removeAll&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'RemoveAllIconsAction',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-2753',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;save&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4BE',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoMD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F519',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toPlain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: 'emoji-1F4DD',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;]&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      // definiciones botones iconos&nbsp;
    </p>
    <p>
      //TODO: usar datos de libreria para iconos ( y acciones)
    </p>
    <p>
      def tbActions = ['RemoveIcon_0_Action', 'RemoveIconAction', 'RemoveAllIconsAction', 'IconAction.emoji-1F343', 'IconAction.emoji-1F648', 'IconAction.emoji-26D4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-1F522', 'IconAction.emoji-1F537', 'IconAction.emoji-27A1', 'IconAction.emoji-2194', 'IconAction.emoji-21A9', 'IconAction.emoji-1F4AC'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-2714', 'IconAction.emoji-1F532']
    </p>
    <p>
      def tbIcons&nbsp;&nbsp;&nbsp;= ['RemoveIcon_0_Action', 'RemoveIconAction', 'RemoveAllIconsAction', 'IconAction.emoji-1F343', 'IconAction.emoji-1F648', 'IconAction.emoji-26D4'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-1F522', 'IconAction.emoji-1F537', 'IconAction.emoji-27A1', 'IconAction.emoji-2194', 'IconAction.emoji-21A9', 'IconAction.emoji-1F4AC'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'IconAction.emoji-2714', 'IconAction.emoji-1F532']
    </p>
    <p>
      def tbLabels&nbsp;&nbsp;= ['Remove first icon', 'Remove Last Icon', 'Remove all icons'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, &quot;behave as leaf node (don't look at its descendant)&quot;, 'ignore content', 'ignore node and its descendant'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'numbered list', 'bulleted list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'align right', 'align centered'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'add new line'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'comment (creo que no debe ir)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;, 'completed', 'is Task']
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      
    </p>
    <p>
      // definiciones botones nodos MD
    </p>
    <p>
      def formulas&nbsp;&nbsp;= ['= MarkDownHelper.document(node)','= MarkDownHelper.TOC(node)','= MarkDownHelper.webLink(node)','= MarkDownHelper.webImageLink(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.fileLink(node)','= MarkDownHelper.imageLink(node)','= MarkDownHelper.list(node)','= MarkDownHelper.plainTaskList(node)'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'= MarkDownHelper.nestedTaskList(node)','= MarkDownHelper.table(node)','= MarkDownHelper.codeBlock(node)','= MarkDownHelper.textBlock(node)','----']
    </p>
    <p>
      def labels&nbsp;&nbsp;&nbsp;&nbsp;= ['Markdown document.md','ToC','web link','web Image'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'link to local file','local image','list','plain task list'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,'nested task list','table','code block','text block','horizontal line']
    </p>
    <p>
      def atributos = [['headersToUnderline':2,'hideFolded':false,'headerNumbering':true,'topHeadersNumbered':false,'topHeaderStartingNumber':1,'fileLinksRelative':false],['TOClevels':2],[:]
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,[:],[:],[:],[:],[:],[:],[:],[:],[:],[:]]
    </p>
    <p>
      
    </p>
    <p>
      //return &quot; F: ${formulas.size()} - L: ${labels.size()} - L: ${atributos.size()}&quot;
    </p>
    <p>
      
    </p>
    <p>
      dialogName = 'MarkDownHelperDialog'
    </p>
    <p>
      swingBuilder = new SwingBuilder()
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- botones MD ---------------------------------------------------------------------------------
    </p>
    <p>
      def creaBotonMD(label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text : label,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//icon: includeIcon?menuUtils.getMenuItemIcon(iconos[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: &quot;Adds a '${label}' node to the map&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//minimumSize: minDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;horizontalAlignment:SwingConstants.LEFT,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,5,0,5),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(label, formula, atributos)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def creaContenidoMD(formulas, labels, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBotonMD(labels[i], f, atributos[i])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //formulas.eachWithIndex{f,i -&gt;
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;crearNodoMD(node,labels[i], f, atributos[i])
    </p>
    <p>
      //}
    </p>
    <p>
      
    </p>
    <p>
      def crearNodoMD(label, formula, atributos){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def nodo = c.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;nodo.createChild(label)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.style.name = estilo
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.attributes = atributos
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;tgtN.noteText = formula
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//TODO: cambiar noteContentType a 'Markdown'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- botones Iconos ---------------------------------------------------------------------------------
    </p>
    <p>
      def creaBotonIcon(acc, ic, lab){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def boton = swingBuilder.button(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon(ic),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: lab,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// preferredSize: prefDimension,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;menuUtils.executeMenuItems([acc])
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//boton.toolTipText = boton.getBorder().toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return boton
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def creaContenidoIcon(actions, icons, labels){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,5)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolBar(
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new FlowLayout(FlowLayout.LEFT, 0, 0)
    </p>
    <p>
      //
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,layout: new GridLayout(0,1)
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actions.eachWithIndex{ a, j -&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*widget(*/&nbsp;&nbsp;&nbsp;&nbsp;creaBotonIcon(a, icons[j], labels[j])&nbsp;&nbsp;&nbsp;//)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//separator()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //region:
    </p>
    <p>
      def getNodoMarkdown(n){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def nMD = n.pathToRoot.find{it.attributes.containsKey('headerNumbering')}
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;ui.informationMessage(nMD.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return nMD
    </p>
    <p>
      }
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      def lastNodeID
    </p>
    <p>
      &nbsp;
    </p>
    <p>
      
    </p>
    <p>
      def panelInferior = swingBuilder.panel(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;layout: new GridLayout(0,4)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//HELP
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.help),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'Help information about selected Markdown Node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//TODO: Help action
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//copy to node
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.toPlain),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'copy Markdown to new node',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def srcN = c.selected&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def i = srcN.parent.getChildPosition(srcN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN =&nbsp;&nbsp;srcN.parent.createChild(i+1)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.text = srcN.text
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.note = srcN.note
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tgtN.icons.add(icon.leaf)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//ir a nodo Markdown
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.gotoMD),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'jump to Markdown document node and back',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def srcN = c.selected
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def nMD = getNodoMarkdown(srcN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//ui.informationMessage(nMD.toString())
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!nMD) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = ' No Markdown document node found!!'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastNodeID){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN = srcN.map.node(lastNodeID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(srcN.equals(nMD)){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (lastNodeID){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def tgtN = srcN.map.node(lastNodeID)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(tgtN)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.select(nMD)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastNodeID = srcN.id
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button(&nbsp;&nbsp;//ir a nodo Markdown
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//text : includeText?textoLabel(labels[i]):null,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icon: menuUtils.getMenuItemIcon('IconAction.' + icon.save),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;toolTipText: 'save note to file',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preferredSize: new Dimension(30, 30),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;margin:new Insets(0,2,0,2),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;borderPainted: false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actionPerformed : {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;saveFile(c.selected)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      //region: --------------- Dialogo ---------------------------------------------------------------------------------
    </p>
    <p>
      def dialogo = ui.frame.ownedWindows.find{it.name == dialogName &amp;&amp; it.type.toString()=='NORMAL'}
    </p>
    <p>
      
    </p>
    <p>
      if(!dialogo) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo=' se crea dialogo'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo = swingBuilder.dialog(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title : 'Markdown helper',
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:'myDialog',
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: dialogName,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modal:false,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locationRelativeTo:ui.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;minimumSize: new Dimension(30,70),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;owner:ui.frame,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultCloseOperation: JFrame.DISPOSE_ON_CLOSE,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pack : true,
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show: true
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;) {}
    </p>
    <p>
      } else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = ' se reutiliza dialogo'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;dialogo.getContentPane().removeAll()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      dialogo.getContentPane().setLayout(new BorderLayout())
    </p>
    <p>
      dialogo.add(creaContenidoIcon(tbActions, tbIcons, tbLabels), BorderLayout.PAGE_START)
    </p>
    <p>
      dialogo.add(creaContenidoMD(formulas, labels, atributos), BorderLayout.CENTER)
    </p>
    <p>
      dialogo.add(panelInferior, BorderLayout.PAGE_END)
    </p>
    <p>
      dialogo.pack()
    </p>
    <p>
      dialogo.show()
    </p>
    <p>
      
    </p>
    <p>
      //Region: ---------------------------- MDI ----------------------------------------
    </p>
    <p>
      def correctFileName(s){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def t = s.replace('\n','_').replace('\t','_').replace('/','_').replace('\\','_').replace('__','_')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return t.toString()
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      //Region: ---------------------------- FileChooser ----------------------------------------
    </p>
    <p>
      def getFileFromDialog(fileName){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def chooser = new SwingBuilder().fileChooser(
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dialogTitle: &quot;Save Markdown document to file&quot;,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileSelectionMode: JFileChooser.FILES_ONLY,
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fileFilter: new FileNameExtensionFilter('Markdown', 'md', 'mkd', 'mkdn', 'mdwn', 'mdown', 'markdown', 'mdtxt', 'mdtext', 'text', 'Rmd', 'txt'),
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def mdExtensions = chooser.fileFilter.extensions
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def i&nbsp;&nbsp;&nbsp;&nbsp;= fileName.lastIndexOf('.')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def ext&nbsp;&nbsp;= i&gt;0?fileName.substring(i+1):null
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;fileName = fileName + (mdExtensions.contains(ext)?'':'.md')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;chooser.selectedFile =&nbsp;&nbsp;new File(fileName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;File file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;switch ( chooser.showSaveDialog() )
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.APPROVE_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = chooser.selectedFile
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.CANCEL_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case JFileChooser.ERROR_OPTION:
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;return file
    </p>
    <p>
      }
    </p>
    <p>
      
    </p>
    <p>
      def saveFile(nodo){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;// getting file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;def texto = nodo.note?.plain
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if (texto &amp;&amp; texto != ''){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (nodo.link?.uri?.scheme == 'file'){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = nodo.link.file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fPath
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fPath = MDI.obtainPathFromMap(nodo)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(e){}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(fPath &amp;&amp; fPath != ''){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;def fileName = correctFileName(nodo.text)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = new File(fPath + fileName)
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (!file) {file = getFileFromDialog(correctFileName(nodo.text))}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file = getFileFromDialog(correctFileName(nodo.text))
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = 'no Note in selected node'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 'No tiene nota'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;//saving file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;if (file){
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ( ui.showConfirmDialog(null, &quot;export text to: \n\n&nbsp;&nbsp;${file} ?&quot;, &quot;Overwrite/save file with node's note?&quot;, 2, 2)==0) {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file.setText(texto.toString(), 'UTF-8')
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.link.file = file
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nodo.text = file.name
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = &quot; Note's export aborted&quot;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;} else {
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c.statusInfo = 'no file defined. Not saved!!'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;}
    </p>
    <p>
      }
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
<attribute NAME="lastModifiedTime" VALUE="15-03-21 19:39" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-15T19:39-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="16-03-21 16:37" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-16T16:37-0300|datetime"/>
<attribute NAME="creationTime" VALUE="15-03-21 19:28" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-15T19:28-0300|datetime"/>
<attribute NAME="fileSize" VALUE="12.406" OBJECT="org.freeplane.features.format.FormattedNumber|12406|#,##0"/>
</node>
</node>
</node>
<node TEXT="pruebas" STYLE_REF="locked" ID="ID_194683919" CREATED="1616167740188" MODIFIED="1616167740188">
<node TEXT="Diálogo" STYLE_REF="completedTask" FOLDED="true" ID="ID_1734371354" CREATED="1616167740199" MODIFIED="1623451218393">
<node TEXT="llamar dialogo" ID="ID_177406656" CREATED="1616167740200" MODIFIED="1616167740200"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      MarkdownDialog.showDialog()
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
</node>
<node TEXT="links absolutos vs relativos" STYLE_REF="completedTask" FOLDED="true" ID="ID_1744111956" CREATED="1616167740188" MODIFIED="1623451218636"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      caso files
    </p>
    <p>
      en carpeta del Markdown
    </p>
  </body>
</html></richcontent>
<node TEXT="haciendo pruebas file vs uri&#xa;properties y methods" ID="ID_131799576" CREATED="1616167740188" MODIFIED="1618240574489"><richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      // hacer correr seleccionando uno de los nodos con links al markdown (siblings de este nodo)
    </p>
    <p>
      // descomentar partes según lo que se quiera ver
    </p>
    <p>
      
    </p>
    <p>
      def f = node.link.file
    </p>
    <p>
      def u = node.link.uri
    </p>
    <p>
      
    </p>
    <p>
      def nodo2= node.children[0].children[0]
    </p>
    <p>
      def f2 = nodo2.link.file
    </p>
    <p>
      def u2 = nodo2.link.uri
    </p>
    <p>
      
    </p>
    <p>
      texto2=new StringBuilder()
    </p>
    <p>
      
    </p>
    <p>
      def uMD = f.canonicalFile.toURI()
    </p>
    <p>
      def uIm = f2.canonicalFile.toURI()
    </p>
    <p>
      
    </p>
    <p>
      def raiz = uMD.toString().reverse().takeAfter('/').reverse()
    </p>
    <p>
      def link = uIm.toString()-raiz
    </p>
    <p>
      
    </p>
    <p>
      texto2
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.canonicalFile.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; uMD&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n' // &lt;-------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.canonicalFile.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; uIm&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n' // &lt;-------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'raiz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; raiz&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n' // &lt;-------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'link&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; link&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n' // &lt;-------------------
    </p>
    <p>
      
    </p>
    <p>
      return texto2
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      /*
    </p>
    <p>
      texto2
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; f.properties*.toString()*.plus('\n').toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; u.properties*.toString()*.plus('\n').toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; f2.properties*.toString()*.plus('\n').toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; u2.properties*.toString()*.plus('\n').toString()
    </p>
    <p>
      &nbsp;&nbsp;
    </p>
    <p>
      texto2
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; f.class.methods*.toString()*.plus('\n').toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; u.class.methods*.toString()*.plus('\n').toString()
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n\n'
    </p>
    <p>
      
    </p>
    <p>
      node.note = texto2.toString()
    </p>
    <p>
      */
    </p>
    <p>
      /*
    </p>
    <p>
      texto=new StringBuilder()
    </p>
    <p>
      texto
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f.name &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f.class &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.canonicalFile&nbsp;&nbsp;' &lt;&lt; f.canonicalFile &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.canonicalPath&nbsp;&nbsp;' &lt;&lt; f.canonicalPath &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.toString()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f.toString()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.canonicalFile.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f.canonicalFile.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n' // &lt;-------------------
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f.canonicalFile.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f.canonicalFile.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n' &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f2.name &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f2.class &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.canonicalFile&nbsp;&nbsp;' &lt;&lt; f2.canonicalFile &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.canonicalPath&nbsp;&nbsp;' &lt;&lt; f2.canonicalPath &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.toString()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f2.toString()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f2.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f2.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'&nbsp;&nbsp;&nbsp;&nbsp;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.canonicalFile.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f2.canonicalFile.toURI()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'f2.canonicalFile.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; f2.canonicalFile.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      
    </p>
    <p>
      texto
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u.resolve(u2)&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; u.resolve(u2) &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u2.resolve(u)&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; u2.resolve(u) &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u.normalize()&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; u.normalize() &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u2.normalize()&nbsp;&nbsp;&nbsp;' &lt;&lt; u2.normalize() &lt;&lt; '\n'
    </p>
    <p>
      //&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt;u.toURL() &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;//&nbsp;&nbsp;&nbsp;&lt;&lt; 'u2.toURL()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt;u2.toURL() &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u.relativize(u2)&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; u.relativize(u2) &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u2.relativize(u)&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt; u2.relativize(u) &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u.toASCIIString()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt;u.toASCIIString() &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; 'u2.toASCIIString()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' &lt;&lt;u2.toASCIIString() &lt;&lt; '\n'
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt; '\n'
    </p>
    <p>
      
    </p>
    <p>
      return texto
    </p>
    <p>
      */
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      .groovy
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="README.md" FOLDED="true" ID="ID_1167035899" CREATED="1616167740188" MODIFIED="1640358361674" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md" STYLE="bubble">
<edge COLOR="#ff0000"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      [directory=false
    </p>
    <p>
      , canonicalFile=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      , file=true
    </p>
    <p>
      , canonicalPath=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      , hidden=false
    </p>
    <p>
      , path=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      , name=README.md
    </p>
    <p>
      , absolute=true
    </p>
    <p>
      , class=class java.io.File
    </p>
    <p>
      , parentFile=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator
    </p>
    <p>
      , absolutePath=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      , parent=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator
    </p>
    <p>
      , absoluteFile=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      ]
    </p>
    <p>
      
    </p>
    <p>
      [rawAuthority=null
    </p>
    <p>
      , opaque=false
    </p>
    <p>
      , scheme=file
    </p>
    <p>
      , rawQuery=null
    </p>
    <p>
      , port=-1
    </p>
    <p>
      , rawUserInfo=null
    </p>
    <p>
      , path=/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md
    </p>
    <p>
      , class=class java.net.URI
    </p>
    <p>
      , absolute=true
    </p>
    <p>
      , schemeSpecificPart=/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md
    </p>
    <p>
      , rawPath=/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md
    </p>
    <p>
      , query=null
    </p>
    <p>
      , fragment=null
    </p>
    <p>
      , host=null
    </p>
    <p>
      , authority=null
    </p>
    <p>
      , rawFragment=null
    </p>
    <p>
      , userInfo=null
    </p>
    <p>
      , rawSchemeSpecificPart=/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md
    </p>
    <p>
      ]
    </p>
    <p>
      
    </p>
    <p>
      [directory=false
    </p>
    <p>
      , canonicalFile=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      , file=true
    </p>
    <p>
      , canonicalPath=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      , hidden=false
    </p>
    <p>
      , path=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      , name=heros-journey.png
    </p>
    <p>
      , absolute=true
    </p>
    <p>
      , class=class java.io.File
    </p>
    <p>
      , parentFile=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources
    </p>
    <p>
      , absolutePath=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      , parent=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources
    </p>
    <p>
      , absoluteFile=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      ]
    </p>
    <p>
      
    </p>
    <p>
      [rawAuthority=null
    </p>
    <p>
      , opaque=false
    </p>
    <p>
      , scheme=file
    </p>
    <p>
      , rawQuery=null
    </p>
    <p>
      , port=-1
    </p>
    <p>
      , rawUserInfo=null
    </p>
    <p>
      , path=/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png
    </p>
    <p>
      , class=class java.net.URI
    </p>
    <p>
      , absolute=true
    </p>
    <p>
      , schemeSpecificPart=/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png
    </p>
    <p>
      , rawPath=/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png
    </p>
    <p>
      , query=null
    </p>
    <p>
      , fragment=null
    </p>
    <p>
      , host=null
    </p>
    <p>
      , authority=null
    </p>
    <p>
      , rawFragment=null
    </p>
    <p>
      , userInfo=null
    </p>
    <p>
      , rawSchemeSpecificPart=/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png
    </p>
    <p>
      ]
    </p>
  </body>
</html></richcontent>
<attribute_layout NAME_WIDTH="132.75 pt"/>
<attribute NAME="headersToUnderline" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="true"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<attribute NAME="lastModifiedTime" VALUE="12-07-21 18:55" OBJECT="org.freeplane.features.format.FormattedDate|2021-07-12T18:55-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="09-08-21 10:19" OBJECT="org.freeplane.features.format.FormattedDate|2021-08-09T10:19-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="11-03-21 18:22" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-11T18:22-0300|datetime"/>
<attribute NAME="fileSize" VALUE="5.417" OBJECT="org.freeplane.features.format.FormattedNumber|5417|#,##0"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      link absoluto
    </p>
  </body>
</html></richcontent>
<node TEXT="imagen relativa a archivo MarkDown" FOLDED="true" ID="ID_241983423" CREATED="1616167740189" MODIFIED="1616167740189">
<icon BUILTIN="emoji-1F343"/>
<richcontent CONTENT-TYPE="plain/" TYPE="DETAILS">
    <text>=
def n = node.children[0]
def nodoMarkdown = node.pathToRoot.find{it.attributes.containsKey(&apos;headerNumbering&apos;)}

def f = nodoMarkdown.link.file
def f2 = n.link.file

def uMD = f.canonicalFile.toURI()
def uIm = f2.canonicalFile.toURI()

def raiz = uMD.toString().reverse().takeAfter(&apos;/&apos;).reverse()
def link = uIm.toString()-raiz

return &quot;![$n.text]($link)&quot;</text>
</richcontent>
<node TEXT="heros-journey.png" STYLE_REF="missing" ID="ID_1162926177" CREATED="1616167740189" MODIFIED="1640359094412" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      link absoluto
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="README.md" FOLDED="true" ID="ID_1529955525" CREATED="1616167740189" MODIFIED="1618240622545" LINK="../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md">
<attribute NAME="headersToUnderline" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="true"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      [directory=false
    </p>
    <p>
      , canonicalFile=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      , file=true
    </p>
    <p>
      , canonicalPath=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      , hidden=false
    </p>
    <p>
      , path=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      , name=README.md
    </p>
    <p>
      , absolute=true
    </p>
    <p>
      , class=class java.io.File
    </p>
    <p>
      , parentFile=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator
    </p>
    <p>
      , absolutePath=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      , parent=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator
    </p>
    <p>
      , absoluteFile=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\README.md
    </p>
    <p>
      ]
    </p>
    <p>
      
    </p>
    <p>
      [rawAuthority=null
    </p>
    <p>
      , opaque=false
    </p>
    <p>
      , scheme=null
    </p>
    <p>
      , rawQuery=null
    </p>
    <p>
      , port=-1
    </p>
    <p>
      , rawUserInfo=null
    </p>
    <p>
      , path=../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md
    </p>
    <p>
      , class=class java.net.URI
    </p>
    <p>
      , absolute=false
    </p>
    <p>
      , schemeSpecificPart=../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md
    </p>
    <p>
      , rawPath=../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md
    </p>
    <p>
      , query=null
    </p>
    <p>
      , fragment=null
    </p>
    <p>
      , host=null
    </p>
    <p>
      , authority=null
    </p>
    <p>
      , rawFragment=null
    </p>
    <p>
      , userInfo=null
    </p>
    <p>
      , rawSchemeSpecificPart=../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md
    </p>
    <p>
      ]
    </p>
    <p>
      
    </p>
    <p>
      [directory=false
    </p>
    <p>
      , canonicalFile=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      , file=true
    </p>
    <p>
      , canonicalPath=C:\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      , hidden=false
    </p>
    <p>
      , path=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      , name=heros-journey.png
    </p>
    <p>
      , absolute=true
    </p>
    <p>
      , class=class java.io.File
    </p>
    <p>
      , parentFile=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources
    </p>
    <p>
      , absolutePath=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      , parent=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources
    </p>
    <p>
      , absoluteFile=C:\Respaldo EF\ef\Documentos con macros\08 Freemind Groovy\scripts\..\..\..\..\..\Users\Edo\Documents\GitHub\Freeplane_My-Menu-Inator\resources\heros-journey.png
    </p>
    <p>
      ]
    </p>
    <p>
      
    </p>
    <p>
      [rawAuthority=null
    </p>
    <p>
      , opaque=false
    </p>
    <p>
      , scheme=null
    </p>
    <p>
      , rawQuery=null
    </p>
    <p>
      , port=-1
    </p>
    <p>
      , rawUserInfo=null
    </p>
    <p>
      , path=../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png
    </p>
    <p>
      , class=class java.net.URI
    </p>
    <p>
      , absolute=false
    </p>
    <p>
      , schemeSpecificPart=../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png
    </p>
    <p>
      , rawPath=../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png
    </p>
    <p>
      , query=null
    </p>
    <p>
      , fragment=null
    </p>
    <p>
      , host=null
    </p>
    <p>
      , authority=null
    </p>
    <p>
      , rawFragment=null
    </p>
    <p>
      , userInfo=null
    </p>
    <p>
      , rawSchemeSpecificPart=../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png
    </p>
    <p>
      ]
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      link relativo
    </p>
  </body>
</html></richcontent>
<node TEXT="imagen relativa a archivo MarkDown" FOLDED="true" ID="ID_1939560696" CREATED="1616167740189" MODIFIED="1616167740189">
<icon BUILTIN="emoji-1F343"/>
<richcontent CONTENT-TYPE="plain/" TYPE="DETAILS">
    <text>=
def n = node.children[0]
def nodoMarkdown = node.pathToRoot.find{it.attributes.containsKey(&apos;headerNumbering&apos;)}

def f = nodoMarkdown.link.file
def f2 = n.link.file

def uMD = f.canonicalFile.toURI()
def uIm = f2.canonicalFile.toURI()

def raiz = uMD.toString().reverse().takeAfter(&apos;/&apos;).reverse()
def link = uIm.toString()-raiz

return &quot;![$n.text]($link)&quot;</text>
</richcontent>
<node TEXT="heros-journey.png" ID="ID_679380385" CREATED="1616167740190" MODIFIED="1616167740190" LINK="../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      link relativo
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="README.md" FOLDED="true" ID="ID_275707012" CREATED="1616167740190" MODIFIED="1640358361705" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md" STYLE="bubble">
<edge COLOR="#ff0000"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      [public boolean java.io.File.equals(java.lang.Object)
    </p>
    <p>
      , public java.lang.String java.io.File.toString()
    </p>
    <p>
      , public int java.io.File.hashCode()
    </p>
    <p>
      , public int java.io.File.compareTo(java.lang.Object)
    </p>
    <p>
      , public int java.io.File.compareTo(java.io.File)
    </p>
    <p>
      , public java.lang.String java.io.File.getName()
    </p>
    <p>
      , public long java.io.File.length()
    </p>
    <p>
      , public java.lang.String java.io.File.getCanonicalPath() throws java.io.IOException
    </p>
    <p>
      , public java.lang.String java.io.File.getParent()
    </p>
    <p>
      , public boolean java.io.File.isAbsolute()
    </p>
    <p>
      , public boolean java.io.File.delete()
    </p>
    <p>
      , public boolean java.io.File.setReadOnly()
    </p>
    <p>
      , public java.lang.String[] java.io.File.list()
    </p>
    <p>
      , public java.lang.String[] java.io.File.list(java.io.FilenameFilter)
    </p>
    <p>
      , public boolean java.io.File.canExecute()
    </p>
    <p>
      , public boolean java.io.File.canRead()
    </p>
    <p>
      , public boolean java.io.File.canWrite()
    </p>
    <p>
      , public boolean java.io.File.createNewFile() throws java.io.IOException
    </p>
    <p>
      , public static java.io.File java.io.File.createTempFile(java.lang.String,java.lang.String,java.io.File) throws java.io.IOException
    </p>
    <p>
      , public static java.io.File java.io.File.createTempFile(java.lang.String,java.lang.String) throws java.io.IOException
    </p>
    <p>
      , public void java.io.File.deleteOnExit()
    </p>
    <p>
      , public boolean java.io.File.exists()
    </p>
    <p>
      , public java.io.File java.io.File.getAbsoluteFile()
    </p>
    <p>
      , public java.lang.String java.io.File.getAbsolutePath()
    </p>
    <p>
      , public java.io.File java.io.File.getCanonicalFile() throws java.io.IOException
    </p>
    <p>
      , public long java.io.File.getFreeSpace()
    </p>
    <p>
      , public java.io.File java.io.File.getParentFile()
    </p>
    <p>
      , public java.lang.String java.io.File.getPath()
    </p>
    <p>
      , public long java.io.File.getTotalSpace()
    </p>
    <p>
      , public long java.io.File.getUsableSpace()
    </p>
    <p>
      , public boolean java.io.File.isDirectory()
    </p>
    <p>
      , public boolean java.io.File.isFile()
    </p>
    <p>
      , public boolean java.io.File.isHidden()
    </p>
    <p>
      , public long java.io.File.lastModified()
    </p>
    <p>
      , public java.io.File[] java.io.File.listFiles()
    </p>
    <p>
      , public java.io.File[] java.io.File.listFiles(java.io.FilenameFilter)
    </p>
    <p>
      , public java.io.File[] java.io.File.listFiles(java.io.FileFilter)
    </p>
    <p>
      , public static java.io.File[] java.io.File.listRoots()
    </p>
    <p>
      , public boolean java.io.File.mkdir()
    </p>
    <p>
      , public boolean java.io.File.mkdirs()
    </p>
    <p>
      , public boolean java.io.File.renameTo(java.io.File)
    </p>
    <p>
      , public boolean java.io.File.setExecutable(boolean,boolean)
    </p>
    <p>
      , public boolean java.io.File.setExecutable(boolean)
    </p>
    <p>
      , public boolean java.io.File.setLastModified(long)
    </p>
    <p>
      , public boolean java.io.File.setReadable(boolean,boolean)
    </p>
    <p>
      , public boolean java.io.File.setReadable(boolean)
    </p>
    <p>
      , public boolean java.io.File.setWritable(boolean,boolean)
    </p>
    <p>
      , public boolean java.io.File.setWritable(boolean)
    </p>
    <p>
      , public java.nio.file.Path java.io.File.toPath()
    </p>
    <p>
      , public java.net.URI java.io.File.toURI()
    </p>
    <p>
      , public java.net.URL java.io.File.toURL() throws java.net.MalformedURLException
    </p>
    <p>
      , public final void java.lang.Object.wait() throws java.lang.InterruptedException
    </p>
    <p>
      , public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      , public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      , public final native java.lang.Class java.lang.Object.getClass()
    </p>
    <p>
      , public final native void java.lang.Object.notify()
    </p>
    <p>
      , public final native void java.lang.Object.notifyAll()
    </p>
    <p>
      ]
    </p>
    <p>
      
    </p>
    <p>
      [public boolean java.net.URI.equals(java.lang.Object)
    </p>
    <p>
      , public java.lang.String java.net.URI.toString()
    </p>
    <p>
      , public int java.net.URI.hashCode()
    </p>
    <p>
      , public int java.net.URI.compareTo(java.net.URI)
    </p>
    <p>
      , public int java.net.URI.compareTo(java.lang.Object)
    </p>
    <p>
      , public boolean java.net.URI.isAbsolute()
    </p>
    <p>
      , public java.net.URI java.net.URI.resolve(java.net.URI)
    </p>
    <p>
      , public java.net.URI java.net.URI.resolve(java.lang.String)
    </p>
    <p>
      , public static java.net.URI java.net.URI.create(java.lang.String)
    </p>
    <p>
      , public java.net.URI java.net.URI.normalize()
    </p>
    <p>
      , public java.lang.String java.net.URI.getAuthority()
    </p>
    <p>
      , public java.lang.String java.net.URI.getFragment()
    </p>
    <p>
      , public java.lang.String java.net.URI.getPath()
    </p>
    <p>
      , public java.lang.String java.net.URI.getQuery()
    </p>
    <p>
      , public java.lang.String java.net.URI.getScheme()
    </p>
    <p>
      , public boolean java.net.URI.isOpaque()
    </p>
    <p>
      , public java.net.URL java.net.URI.toURL() throws java.net.MalformedURLException
    </p>
    <p>
      , public java.lang.String java.net.URI.getHost()
    </p>
    <p>
      , public int java.net.URI.getPort()
    </p>
    <p>
      , public java.lang.String java.net.URI.getUserInfo()
    </p>
    <p>
      , public java.net.URI java.net.URI.relativize(java.net.URI)
    </p>
    <p>
      , public java.lang.String java.net.URI.getRawAuthority()
    </p>
    <p>
      , public java.lang.String java.net.URI.getRawFragment()
    </p>
    <p>
      , public java.lang.String java.net.URI.getRawPath()
    </p>
    <p>
      , public java.lang.String java.net.URI.getRawQuery()
    </p>
    <p>
      , public java.lang.String java.net.URI.getRawSchemeSpecificPart()
    </p>
    <p>
      , public java.lang.String java.net.URI.getRawUserInfo()
    </p>
    <p>
      , public java.lang.String java.net.URI.getSchemeSpecificPart()
    </p>
    <p>
      , public java.net.URI java.net.URI.parseServerAuthority() throws java.net.URISyntaxException
    </p>
    <p>
      , public java.lang.String java.net.URI.toASCIIString()
    </p>
    <p>
      , public final void java.lang.Object.wait() throws java.lang.InterruptedException
    </p>
    <p>
      , public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
    </p>
    <p>
      , public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
    </p>
    <p>
      , public final native java.lang.Class java.lang.Object.getClass()
    </p>
    <p>
      , public final native void java.lang.Object.notify()
    </p>
    <p>
      , public final native void java.lang.Object.notifyAll()
    </p>
    <p>
      ]
    </p>
  </body>
</html></richcontent>
<attribute_layout NAME_WIDTH="132.75 pt"/>
<attribute NAME="headersToUnderline" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="true"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<attribute NAME="lastModifiedTime" VALUE="12-07-21 18:55" OBJECT="org.freeplane.features.format.FormattedDate|2021-07-12T18:55-0400|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="09-08-21 10:19" OBJECT="org.freeplane.features.format.FormattedDate|2021-08-09T10:19-0400|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="11-03-21 18:22" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-11T18:22-0300|datetime"/>
<attribute NAME="fileSize" VALUE="5.417" OBJECT="org.freeplane.features.format.FormattedNumber|5417|#,##0"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      link absoluto
    </p>
  </body>
</html></richcontent>
<node TEXT="imagen relativa a archivo MarkDown" FOLDED="true" ID="ID_341912115" CREATED="1616167740190" MODIFIED="1616167740190">
<icon BUILTIN="emoji-1F343"/>
<richcontent CONTENT-TYPE="plain/" TYPE="DETAILS">
    <text>=
def n = node.children[0]
def nodoMarkdown = node.pathToRoot.find{it.attributes.containsKey(&apos;headerNumbering&apos;)}

def f = nodoMarkdown.link.file
def f2 = n.link.file

def uMD = f.canonicalFile.toURI()
def uIm = f2.canonicalFile.toURI()

def raiz = uMD.toString().reverse().takeAfter(&apos;/&apos;).reverse()
def link = uIm.toString()-raiz

return &quot;![$n.text]($link)&quot;</text>
</richcontent>
<node TEXT="heros-journey.png" ID="ID_809437026" CREATED="1616167740190" MODIFIED="1616167740190" LINK="../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      link relativo
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="README.md" FOLDED="true" ID="ID_505618760" CREATED="1616167740190" MODIFIED="1618240632021" LINK="../../../../../Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/README.md">
<attribute NAME="headersToUnderline" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#0.####"/>
<attribute NAME="hideFolded" VALUE="false"/>
<attribute NAME="headerNumbering" VALUE="true"/>
<attribute NAME="topHeadersNumbered" VALUE="false"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      , public java.lang.String java.io.File.toString()
    </p>
    <p>
      , public int java.io.File.compareTo(java.lang.Object)
    </p>
    <p>
      , public int java.io.File.compareTo(java.io.File)
    </p>
    <p>
      , public java.net.URI java.io.File.toURI()
    </p>
    <p>
      , public java.net.URL java.io.File.toURL() throws java.net.MalformedURLException
    </p>
    <p>
      ]
    </p>
    <p>
      
    </p>
    <p>
      , public java.net.URI java.net.URI.resolve(java.net.URI)
    </p>
    <p>
      , public java.net.URI java.net.URI.resolve(java.lang.String)
    </p>
    <p>
      , public java.net.URI java.net.URI.normalize()
    </p>
    <p>
      , public java.net.URL java.net.URI.toURL() throws java.net.MalformedURLException
    </p>
    <p>
      , public java.net.URI java.net.URI.relativize(java.net.URI)
    </p>
    <p>
      , public java.lang.String java.net.URI.toASCIIString()
    </p>
    <p>
      ]
    </p>
  </body>
</html></richcontent>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      link relativo
    </p>
  </body>
</html></richcontent>
<node TEXT="imagen relativa a archivo MarkDown" FOLDED="true" ID="ID_164431429" CREATED="1616167740190" MODIFIED="1616167740190">
<icon BUILTIN="emoji-1F343"/>
<richcontent CONTENT-TYPE="plain/" TYPE="DETAILS">
    <text>=
def n = node.children[0]
def nodoMarkdown = node.pathToRoot.find{it.attributes.containsKey(&apos;headerNumbering&apos;)}

def f = nodoMarkdown.link.file
def f2 = n.link.file

def uMD = f.canonicalFile.toURI()
def uIm = f2.canonicalFile.toURI()

def raiz = uMD.toString().reverse().takeAfter(&apos;/&apos;).reverse()
def link = uIm.toString()-raiz

return &quot;![$n.text]($link)&quot;</text>
</richcontent>
<node TEXT="heros-journey.png" STYLE_REF="missing" ID="ID_1815401106" CREATED="1616167740190" MODIFIED="1640359094490" LINK="file:/C:/Users/Edo/Documents/GitHub/Freeplane_My-Menu-Inator/resources/heros-journey.png"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      link absoluto
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="Ordenar tareas y asignar maybeTasks" STYLE_REF="completedTask" FOLDED="true" ID="ID_882595080" CREATED="1651983952229" MODIFIED="1658706733847">
<node TEXT="MDH v0.1.4" STYLE_REF="milestone" ID="ID_922825272" CREATED="1658704975010" MODIFIED="1658705505177"/>
<node TEXT="MDH F2" STYLE_REF="milestone" ID="ID_1441216549" CREATED="1658705021227" MODIFIED="1658705505193"/>
<node TEXT="MDH F3" STYLE_REF="milestone" ID="ID_1336460231" CREATED="1658705027560" MODIFIED="1658705505193"/>
<node TEXT="MDH F4" STYLE_REF="milestone" ID="ID_937408946" CREATED="1658705033445" MODIFIED="1658705505208"/>
<node TEXT="MDH F5" STYLE_REF="milestone" ID="ID_302737102" CREATED="1658705038637" MODIFIED="1658705505208"/>
<node TEXT="Sin release" STYLE_REF="milestone" ID="ID_1582350668" CREATED="1658706102216" MODIFIED="1658706952388"/>
</node>
<node TEXT="versión instalada en AddOns" STYLE_REF="locked" FOLDED="true" ID="ID_618823152" CREATED="1616167740206" MODIFIED="1618243148729" HGAP_QUANTITY="14.75 pt" VSHIFT_QUANTITY="15.75 pt">
<node TEXT="MarkdownHelper" STYLE_REF="Organizador" FOLDED="true" ID="ID_725305047" CREATED="1616167740020" MODIFIED="1641820221948" VGAP_QUANTITY="2 px"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      instalación de AddOn
    </p>
  </body>
</html></richcontent>
<node TEXT="markdownHelper" FOLDED="true" ID="ID_1938903434" CREATED="1616425775179" MODIFIED="1641820221948" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/">
<attribute NAME="lastModifiedTime" VALUE="19-03-21 12:25" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-19T12:25-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="10-01-22 10:09" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-10T10:09-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="19-03-21 12:25" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-19T12:25-0300|datetime"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="lib" FOLDED="true" ID="ID_1596067341" CREATED="1616425775301" MODIFIED="1641820208926" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/lib/">
<attribute NAME="lastModifiedTime" VALUE="24-12-21 13:47" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-24T13:47-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="10-01-22 10:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-10T10:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="19-03-21 12:25" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-19T12:25-0300|datetime"/>
<attribute NAME="fileSize" VALUE="0" OBJECT="org.freeplane.features.format.FormattedNumber|0|#,##0"/>
<node TEXT="MarkdownHelper.jar" ID="ID_630812839" CREATED="1616425775419" MODIFIED="1641820208942" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/lib/MarkdownHelper.jar">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="10-01-22 10:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-10T10:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="31-08-21 21:55" OBJECT="org.freeplane.features.format.FormattedDate|2021-08-31T21:55-0400|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="241.535" OBJECT="org.freeplane.features.format.FormattedNumber|241535|#,##0"/>
</node>
<node TEXT="jsoup-1.10.2.jar" ID="ID_568373767" CREATED="1641820060452" MODIFIED="1641820208957" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/lib/jsoup-1.10.2.jar">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="10-01-22 10:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-10T10:10-0300|datetime"/>
<attribute NAME="creationTime" VALUE="24-12-21 13:47" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-24T13:47-0300|datetime"/>
<attribute NAME="fileSize" VALUE="350.645" OBJECT="org.freeplane.features.format.FormattedNumber|350645|#,##0"/>
</node>
<node TEXT="markedj-1.0.16.jar" ID="ID_543290568" CREATED="1641820060468" MODIFIED="1641820208957" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/lib/markedj-1.0.16.jar">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="10-01-22 10:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-10T10:10-0300|datetime"/>
<attribute NAME="creationTime" VALUE="24-12-21 13:47" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-24T13:47-0300|datetime"/>
<attribute NAME="fileSize" VALUE="38.515" OBJECT="org.freeplane.features.format.FormattedNumber|38515|#,##0"/>
</node>
</node>
<node TEXT="scripts" FOLDED="true" ID="ID_99054373" CREATED="1616425775562" MODIFIED="1641820208957" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/scripts/">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="10-01-22 10:09" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-10T10:09-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="19-03-21 12:25" OBJECT="org.freeplane.features.format.FormattedDate|2021-03-19T12:25-0300|datetime"/>
<attribute NAME="fileSize" VALUE="4.096" OBJECT="org.freeplane.features.format.FormattedNumber|4096|#,##0"/>
<node TEXT="showLinkedImageAsDetails.groovy" ID="ID_129265551" CREATED="1616425775684" MODIFIED="1641820208973" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/scripts/showLinkedImageAsDetails.groovy">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="09-01-22 14:16" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-09T14:16-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="149" OBJECT="org.freeplane.features.format.FormattedNumber|149|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      node.detailsText = '=&quot;![](${node.link.uri})&quot;'
    </p>
    <p>
      node.detailsContentType ='markdown'
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="showLinkedImageAsNote.groovy" ID="ID_234441810" CREATED="1616425775809" MODIFIED="1641820208988" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/scripts/showLinkedImageAsNote.groovy">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="09-01-22 14:16" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-09T14:16-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="113" OBJECT="org.freeplane.features.format.FormattedNumber|113|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      node.noteText = '=&quot;![](${node.link.uri})&quot;'
    </p>
    <p>
      node.noteContentType ='markdown'
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="showMarkdownHelperDialog.groovy" ID="ID_1294557301" CREATED="1616425775946" MODIFIED="1641820209004" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/scripts/showMarkdownHelperDialog.groovy">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="09-01-22 14:16" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-09T14:16-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="74" OBJECT="org.freeplane.features.format.FormattedNumber|74|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownDialog
    </p>
    <p>
      
    </p>
    <p>
      MarkdownDialog.showDialog()
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="rebuildMarkdownHelperDialog.groovy" ID="ID_1175763690" CREATED="1616593871093" MODIFIED="1641820209020" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/scripts/rebuildMarkdownHelperDialog.groovy">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="09-01-22 14:16" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-09T14:16-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="78" OBJECT="org.freeplane.features.format.FormattedNumber|78|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownDialog
    </p>
    <p>
      
    </p>
    <p>
      MarkdownDialog.showDialog(true)
    </p>
  </body>
</html></richcontent>
</node>
<node TEXT="showPreviewPanel.groovy" ID="ID_51994162" CREATED="1641820060483" MODIFIED="1641820214823" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper/scripts/showPreviewPanel.groovy">
<attribute NAME="lastModifiedTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|datetime"/>
<attribute NAME="lastAccessTime" VALUE="09-01-22 14:16" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-09T14:16-0300|datetime"/>
<attribute NAME="creationTime" VALUE="04-01-22 19:10" OBJECT="org.freeplane.features.format.FormattedDate|2022-01-04T19:10-0300|datetime"/>
<attribute NAME="fileSize" VALUE="82" OBJECT="org.freeplane.features.format.FormattedNumber|82|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      import edofro.MarkDownHelper.MarkdownPreview
    </p>
    <p>
      
    </p>
    <p>
      MarkdownPreview.showMDHPreview()
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="markdownHelper.script.xml" ID="ID_392025149" CREATED="1616425776059" MODIFIED="1640359094146" LINK="file:/C:/Users/Edo/AppData/Roaming/Freeplane/1.9.x/addons/markdownHelper.script.xml">
<attribute NAME="lastModifiedTime" VALUE="07-12-21 21:31" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-07T21:31-0300|dd-MM-yy HH:mm"/>
<attribute NAME="lastAccessTime" VALUE="23-12-21 11:36" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-23T11:36-0300|dd-MM-yy HH:mm"/>
<attribute NAME="creationTime" VALUE="07-12-21 21:31" OBJECT="org.freeplane.features.format.FormattedDate|2021-12-07T21:31-0300|dd-MM-yy HH:mm"/>
<attribute NAME="fileSize" VALUE="15.777" OBJECT="org.freeplane.features.format.FormattedNumber|15777|#,##0"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
    </p>
    <p>
      &lt;addon name=&quot;markdownHelper&quot; version=&quot;v0.1.0&quot; latestVersion=&quot;&quot; freeplaneVersionFrom=&quot;1.9.0&quot; homepage=&quot;https://github.com/EdoFro/Freeplane_MarkdownHelper&quot; author=&quot;EdoFro&quot; active=&quot;true&quot;&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;description&gt;&lt;![CDATA[Debo escribir una descripción.]]&gt;&lt;/description&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;license&gt;&lt;![CDATA[
    </p>
    <p>
      This add-on is free software: you can redistribute it and/or modify
    </p>
    <p>
      it under the terms of the GNU General Public License as published by
    </p>
    <p>
      the Free Software Foundation, either version 2 of the License, or
    </p>
    <p>
      (at your option) any later version.
    </p>
    <p>
      
    </p>
    <p>
      This program is distributed in the hope that it will be useful,
    </p>
    <p>
      but WITHOUT ANY WARRANTY; without even the implied warranty of
    </p>
    <p>
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    </p>
    <p>
      GNU General Public License for more details.
    </p>
    <p>
      ]]&gt;&lt;/license&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;preferences.xml/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;translations&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;locale name=&quot;en&quot;&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;entry key=&quot;addons.markdownHelper&quot;&gt;&lt;![CDATA[Markdown Helper]]&gt;&lt;/entry&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;entry key=&quot;addons.markdownHelper.showMarkdownHelperDialog&quot;&gt;&lt;![CDATA[show Dialog]]&gt;&lt;/entry&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;entry key=&quot;addons.markdownHelper.showLinkedImageAsDetails&quot;&gt;&lt;![CDATA[linked image as Markdown details]]&gt;&lt;/entry&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;entry key=&quot;addons.markdownHelper.showLinkedImageAsNote&quot;&gt;&lt;![CDATA[linked image as Markdown note]]&gt;&lt;/entry&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;entry key=&quot;addons.markdownHelper.rebuildMarkdownHelperDialog&quot;&gt;&lt;![CDATA[rebuild Dialog]]&gt;&lt;/entry&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/locale&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;/translations&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;default.properties/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;images&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;image name=&quot;MarkdownHelper-icon.svg&quot;/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;image name=&quot;MarkdownHelper-screenshot-1.png&quot;/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;image name=&quot;MarkdownHelper.png&quot;/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;/images&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;deinstall&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/addons/markdownHelper.script.xml]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/addons/markdownHelper/scripts/showMarkdownHelperDialog.groovy]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/addons/markdownHelper/scripts/showLinkedImageAsDetails.groovy]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/addons/markdownHelper/scripts/showLinkedImageAsNote.groovy]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/resources/images/MarkdownHelper-icon.svg]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/resources/images/MarkdownHelper-screenshot-1.png]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/resources/images/MarkdownHelper.png]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/addons/markdownHelper/lib/MarkdownHelper.jar]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;delete&gt;&lt;![CDATA[${installationbase}/addons/markdownHelper/scripts/rebuildMarkdownHelperDialog.groovy]]&gt;&lt;/delete&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;/deinstall&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;scripts&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script name=&quot;showLinkedImageAsDetails.groovy&quot; menuTitleKey=&quot;addons.markdownHelper.showLinkedImageAsDetails&quot; menuLocation=&quot;main_menu_scripting/addons.markdownHelper&quot; executionMode=&quot;ON_SINGLE_NODE&quot; execute_scripts_without_asking=&quot;true&quot; execute_scripts_without_file_restriction=&quot;true&quot; execute_scripts_without_write_restriction=&quot;false&quot; execute_scripts_without_exec_restriction=&quot;false&quot; execute_scripts_without_network_restriction=&quot;false&quot; signed_script_are_trusted=&quot;false&quot;/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script name=&quot;showLinkedImageAsNote.groovy&quot; menuTitleKey=&quot;addons.markdownHelper.showLinkedImageAsNote&quot; menuLocation=&quot;main_menu_scripting/addons.markdownHelper&quot; executionMode=&quot;ON_SINGLE_NODE&quot; execute_scripts_without_asking=&quot;true&quot; execute_scripts_without_file_restriction=&quot;true&quot; execute_scripts_without_write_restriction=&quot;false&quot; execute_scripts_without_exec_restriction=&quot;false&quot; execute_scripts_without_network_restriction=&quot;false&quot; signed_script_are_trusted=&quot;false&quot;/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script name=&quot;showMarkdownHelperDialog.groovy&quot; menuTitleKey=&quot;addons.markdownHelper.showMarkdownHelperDialog&quot; menuLocation=&quot;main_menu_scripting/addons.markdownHelper&quot; executionMode=&quot;ON_SINGLE_NODE&quot; execute_scripts_without_asking=&quot;true&quot; execute_scripts_without_file_restriction=&quot;true&quot; execute_scripts_without_write_restriction=&quot;true&quot; execute_scripts_without_exec_restriction=&quot;false&quot; execute_scripts_without_network_restriction=&quot;false&quot; signed_script_are_trusted=&quot;false&quot;/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script name=&quot;rebuildMarkdownHelperDialog.groovy&quot; menuTitleKey=&quot;addons.markdownHelper.rebuildMarkdownHelperDialog&quot; menuLocation=&quot;main_menu_scripting/addons.markdownHelper&quot; executionMode=&quot;ON_SINGLE_NODE&quot; execute_scripts_without_asking=&quot;true&quot; execute_scripts_without_file_restriction=&quot;true&quot; execute_scripts_without_write_restriction=&quot;true&quot; execute_scripts_without_exec_restriction=&quot;false&quot; execute_scripts_without_network_restriction=&quot;false&quot; signed_script_are_trusted=&quot;false&quot;/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;/scripts&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;libs&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;lib name=&quot;MarkdownHelper.jar&quot;/&gt;
    </p>
    <p>
      &nbsp;&nbsp;&nbsp;&nbsp;&lt;/libs&gt;
    </p>
    <p>
      &lt;/addon&gt;
    </p>
  </body>
</html></richcontent>
</node>
</node>
</node>
<node TEXT="pendientes" STYLE_REF="tasksBucket" ID="ID_1433259983" CREATED="1651982618673" MODIFIED="1651982711729"><richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =
    </p>
    <p>
      (node['tasksStyles']?:'pendingTask,nextTask').split(',').collect{st -&gt; &quot;${node.find{it.style.name == st}.size()}&nbsp;&nbsp;${st}(s)&quot;}.join('\n')
    </p>
  </body>
</html></richcontent>
<attribute NAME="tasksStyles" VALUE="nextTask,pendingTask,maybeTask"/>
<attribute NAME="WIP filter" VALUE="false"/>
<node TEXT="Sin release" FOLDED="true" ID="ID_1288686007" CREATED="1659825937389" MODIFIED="1659825937405">
<node TEXT="esto.los.copi.acá.cuan.hice.prev.file.most.groo" STYLE_REF="project" ID="ID_1099116929" CREATED="1659825937420" MODIFIED="1659825937436">
<node TEXT="respaldar en otra parte" STYLE_REF="pendingTask" ID="ID_1156316902" CREATED="1646056849514" MODIFIED="1658707046470"/>
</node>
<node TEXT="Armar.entorno.desarro" STYLE_REF="project" ID="ID_1091332295" CREATED="1659825938554" MODIFIED="1659825938585">
<node ID="ID_1787796771" CONTENT_ID="ID_1594465109"/>
<node ID="ID_1059028559" CONTENT_ID="ID_1574673846"/>
</node>
<node ID="ID_230398943" CONTENT_ID="ID_618654485"/>
<node ID="ID_123282004" CONTENT_ID="ID_401554808">
<node ID="ID_1650692690" CONTENT_ID="ID_409567627"/>
</node>
<node ID="ID_1905809331" CONTENT_ID="ID_425832355"/>
<node ID="ID_1991494786" CONTENT_ID="ID_1418875851">
<node ID="ID_1025283692" CONTENT_ID="ID_1820079339"/>
</node>
</node>
<node TEXT="MDH v0.1.4" ID="ID_1102373516" CREATED="1659825937452" MODIFIED="1659825937467">
<node TEXT="lib" STYLE_REF="project" ID="ID_1051656816" CREATED="1659825937467" MODIFIED="1659825937483">
<node TEXT="Markdown.Dialog.groovy" STYLE_REF="project" ID="ID_1738117236" CREATED="1659825937498" MODIFIED="1659825937514">
<node ID="ID_354947104" CONTENT_ID="ID_1695862600"/>
<node ID="ID_1256569955" CONTENT_ID="ID_1907080907"/>
</node>
</node>
</node>
<node TEXT="MDH F1" FOLDED="true" ID="ID_126946436" CREATED="1659825937530" MODIFIED="1659825937545">
<node TEXT="lib" STYLE_REF="project" ID="ID_678219227" CREATED="1659825937545" MODIFIED="1659825937561">
<node TEXT="Markdown.Dialog.groovy" STYLE_REF="project" ID="ID_1299160511" CREATED="1659825937577" MODIFIED="1659825937592">
<node ID="ID_161936041" CONTENT_ID="ID_1422934297"/>
<node ID="ID_300914101" CONTENT_ID="ID_1257313451"/>
<node ID="ID_982349162" CONTENT_ID="ID_636045924">
<node ID="ID_299296651" CONTENT_ID="ID_865171942"/>
<node ID="ID_1544575991" CONTENT_ID="ID_1199963468"/>
<node ID="ID_242684886" CONTENT_ID="ID_988420107"/>
<node ID="ID_1945131007" CONTENT_ID="ID_1956212651"/>
</node>
<node ID="ID_896961504" CONTENT_ID="ID_1313735566"/>
<node ID="ID_1826434470" CONTENT_ID="ID_1177160017"/>
<node ID="ID_634471548" CONTENT_ID="ID_675042730"/>
<node ID="ID_736781465" CONTENT_ID="ID_696114603"/>
</node>
<node TEXT="MDH.groovy" STYLE_REF="project" ID="ID_1643594251" CREATED="1659825937873" MODIFIED="1659825937889">
<node ID="ID_327473393" CONTENT_ID="ID_1466239605"/>
</node>
<node TEXT="WikiTools.groovy" STYLE_REF="project" ID="ID_1382164880" CREATED="1659825938086" MODIFIED="1659825938101">
<node ID="ID_800199678" CONTENT_ID="ID_1281749185"/>
</node>
<node TEXT="MdhCleaner.groovy" STYLE_REF="project" ID="ID_404660062" CREATED="1659825938335" MODIFIED="1659825938351">
<node TEXT="Save.copy.of.MDH.map.as.without.MDH" STYLE_REF="project" ID="ID_26305815" CREATED="1659825938367" MODIFIED="1659825938382">
<node ID="ID_449632636" CONTENT_ID="ID_1208230392"/>
</node>
</node>
</node>
<node TEXT="scripts" STYLE_REF="project" ID="ID_537235429" CREATED="1659825938398" MODIFIED="1659825938414">
<node ID="ID_712684176" CONTENT_ID="ID_488887857"/>
</node>
<node ID="ID_1560926076" CONTENT_ID="ID_813037984"/>
<node ID="ID_1713922467" CONTENT_ID="ID_445402536"/>
</node>
<node TEXT="MDH F2" FOLDED="true" ID="ID_1671478505" CREATED="1659825937717" MODIFIED="1678219591387" VGAP_QUANTITY="2 px">
<node TEXT="lib" STYLE_REF="project" ID="ID_229354449" CREATED="1659825937733" MODIFIED="1678219591387" HGAP_QUANTITY="14.75 pt">
<node TEXT="Markdown.Dialog.groovy" STYLE_REF="project" ID="ID_838843372" CREATED="1659825937764" MODIFIED="1659825937811">
<node ID="ID_1451628162" CONTENT_ID="ID_575434940"/>
<node ID="ID_1113371034" CONTENT_ID="ID_172486264"/>
<node ID="ID_173783919" CONTENT_ID="ID_1121098929"/>
<node ID="ID_467513087" CONTENT_ID="ID_816293423"/>
<node ID="ID_881740974" CONTENT_ID="ID_604443210"/>
</node>
<node TEXT="MDH.groovy" STYLE_REF="project" ID="ID_1435365662" CREATED="1659825937905" MODIFIED="1659825937920">
<node ID="ID_802425781" CONTENT_ID="ID_1414679047"/>
</node>
<node TEXT="MarkdownPreview.groovy" STYLE_REF="project" ID="ID_1352842325" CREATED="1659825938211" MODIFIED="1659825938226">
<node ID="ID_963610087" CONTENT_ID="ID_223303296"/>
</node>
</node>
</node>
<node TEXT="MDH F3" FOLDED="true" ID="ID_1154368604" CREATED="1659825937936" MODIFIED="1659825937954">
<node TEXT="lib" STYLE_REF="project" ID="ID_101057670" CREATED="1659825937960" MODIFIED="1659825937976">
<node TEXT="MDH.groovy" STYLE_REF="project" ID="ID_709693461" CREATED="1659825937976" MODIFIED="1659825937992">
<node ID="ID_148105386" CONTENT_ID="ID_1845412801"/>
<node ID="ID_1877187248" CONTENT_ID="ID_1765976470"/>
</node>
<node TEXT="WikiTools.groovy" STYLE_REF="project" ID="ID_126941005" CREATED="1659825938117" MODIFIED="1659825938148">
<node ID="ID_735496407" CONTENT_ID="ID_1193365769"/>
</node>
</node>
<node TEXT="zips" STYLE_REF="project" ID="ID_20697925" CREATED="1659825938429" MODIFIED="1659825938460">
<node TEXT="templates" STYLE_REF="project" ID="ID_1731728740" CREATED="1659825938460" MODIFIED="1659825938476">
<node TEXT="Markdo.Helper.templa.mm" STYLE_REF="project" ID="ID_484121855" CREATED="1659825938492" MODIFIED="1659825938507">
<node ID="ID_692549703" CONTENT_ID="ID_157778010"/>
</node>
</node>
</node>
</node>
<node TEXT="MDH F4" FOLDED="true" ID="ID_1081391017" CREATED="1659825938007" MODIFIED="1659825938023">
<node TEXT="lib" STYLE_REF="project" ID="ID_1118641645" CREATED="1659825938023" MODIFIED="1659825938039">
<node TEXT="MDH.groovy" STYLE_REF="project" ID="ID_410343493" CREATED="1659825938054" MODIFIED="1659825938070">
<node ID="ID_890893955" CONTENT_ID="ID_1314571807"/>
<node ID="ID_1504184939" CONTENT_ID="ID_1591098920"/>
</node>
<node TEXT="WikiTools.groovy" STYLE_REF="project" ID="ID_705798839" CREATED="1659825938164" MODIFIED="1659825938179">
<node ID="ID_1649620858" CONTENT_ID="ID_1290664104"/>
<node ID="ID_1705403769" CONTENT_ID="ID_308514874"/>
<node ID="ID_1367995786" CONTENT_ID="ID_324393409"/>
</node>
</node>
</node>
<node TEXT="MDH F5" FOLDED="true" ID="ID_1313113451" CREATED="1659825938242" MODIFIED="1659825938242">
<node TEXT="lib" STYLE_REF="project" ID="ID_444159855" CREATED="1659825938257" MODIFIED="1659825938273">
<node TEXT="MarkdownPreview.groovy" STYLE_REF="project" ID="ID_686681818" CREATED="1659825938273" MODIFIED="1659825938304">
<node ID="ID_1878531937" CONTENT_ID="ID_866892156"/>
</node>
</node>
</node>
</node>
<node TEXT="Tasks Sums" ID="ID_1164245155" CREATED="1652456704808" MODIFIED="1652456705011">
<icon BUILTIN="emoji-0023-20E3"/>
<richcontent CONTENT-TYPE="xml/" TYPE="DETAILS">
<html>
  <head>
    
  </head>
  <body>
    <p>
      =
    </p>
    <p>
      def nodo = node.parent
    </p>
    <p>
      (node['tasksStyles']?:'nextTask,pendingTask').split(',').collect{st -&gt; &quot;${nodo.find{it.style.name == st &amp;&amp; !it.pathToRoot.any{it.style.name=='tasksBucket'}}.size()}&nbsp;&nbsp;${st}(s)&quot;}.join('\n')
    </p>
  </body>
</html></richcontent>
<attribute NAME="tasksStyles" VALUE="nextTask,pendingTask,maybeTask,discardedTask,completedTask"/>
<attribute NAME="WIP filter" VALUE="false"/>
</node>
<node TEXT="new imported files" STYLE_REF="newFolderImport" ID="ID_1220978077" CREATED="1678219060247" MODIFIED="1678219284693">
<attribute NAME="log_MDI" VALUE="org.freeplane.plugin.script.proxy.ConvertibleNumber|5" OBJECT="org.freeplane.features.format.FormattedObject|java.lang.String&amp;#x7c;org.freeplane.plugin.script.proxy.ConvertibleNumber&amp;#x7c;5|number:decimal:#0.####"/>
<richcontent TYPE="NOTE" CONTENT-TYPE="xml/">
<html>
  <head>
    
  </head>
  <body>
    <p>
      Inated:&#xa0;&#xa0;&#xa0;2023-03-07&#xa0;&#xa0;17:01:16
    </p>
    <p>
      
    </p>
    <p>
      ------- Files: --------&#xa0;
    </p>
    <p>
      &#xa0;8 node(s) pointing to unexisting/filtered files (marked as 'broken')
    </p>
    <p>
      &#xa0;0 link(s) corrected in nodes
    </p>
    <p>
      &#xa0;0 new file(s) imported as node(s)&#xa0;
    </p>
    <p>
      &#xa0;0 node(s) moved/renamed in drive
    </p>
    <p>
      &#xa0;0 node(s) couldn't be moved/renamed in drive (marked as 'notMovedRenamed')
    </p>
    <p>
      
    </p>
    <p>
      ------- Folders: --------&#xa0;
    </p>
    <p>
      29 folders didn't need to be moved&#xa0;
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      1.6 seconds
    </p>
    <p>
      
    </p>
    <p>
      
    </p>
    <p>
      =====================================
    </p>
    <p>
      
    </p>
    <p>
      MDI debug info:
    </p>
    <p>
      &#xa0;- Installed MDI addon version : v0.0.13
    </p>
    <p>
      &#xa0;- MDI library version&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: v0.0.13
    </p>
    <p>
      &#xa0;- This map's path&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\MarkdownHelper Project.mm
    </p>
    <p>
      &#xa0;- baseFolder's uri path&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: /E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/
    </p>
    <p>
      &#xa0;- baseFolder's path&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;: E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper
    </p>
    <p>
      &#xa0;- baseFolder's absolutePath&#xa0;&#xa0;&#xa0;: E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper
    </p>
    <p>
      &#xa0;- baseFolder's canonicalPath&#xa0;&#xa0;: E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper
    </p>
    <p>
      &#xa0;- baseFolderNode attributes:
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| nameFilter :&#xa0;
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| maxDepth : -1
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| markWhenMoved : 0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| checkIfReallyBroken : 0
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| MarkdownRootFolder : file:/C:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| lastModifiedTime : 24-12-21 11:43
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| lastAccessTime : 24-12-21 12:17
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| creationTime : 12-03-21 14:53
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| fileSize : 4.096
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| projectCode : Freepla.Markdow.Helper
    </p>
    <p>
      &#xa0;&#xa0;&#xa0;| linkType : 0
    </p>
    <p>
      
    </p>
    <p>
      =====================================
    </p>
    <p>
      
    </p>
    <p>
      No failed operation in drive
    </p>
    <p>
      =====================================
    </p>
    <p>
      
    </p>
    <p>
      No file(s) were moved/renamed in drive
    </p>
    <p>
      
    </p>
    <p>
      =====================================
    </p>
    <p>
      
    </p>
    <p>
      Actions in mindmap:
    </p>
    <p>
      
    </p>
    <p>
      - nodes without files&#xa0;&#xa0;--&gt; nodes marked as missing
    </p>
    <p>
      &#xa0;&#xa0;- ID_876510337&#xa0;&#xa0;&#xa0;E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\delete\borrar.txt
    </p>
    <p>
      &#xa0;&#xa0;- ID_1140850939&#xa0;&#xa0;&#xa0;E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\MarkdownHelper\build
    </p>
    <p>
      &#xa0;&#xa0;- ID_1421411082&#xa0;&#xa0;&#xa0;E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\markdown-cheat-sheet.md
    </p>
    <p>
      &#xa0;&#xa0;- ID_197939755&#xa0;&#xa0;&#xa0;E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\MarkdownHelper\classes
    </p>
    <p>
      &#xa0;&#xa0;- ID_906130126&#xa0;&#xa0;&#xa0;E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\MarkdownHelper\groovy
    </p>
    <p>
      &#xa0;&#xa0;- ID_750302356&#xa0;&#xa0;&#xa0;E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\MarkdownHelper\main
    </p>
    <p>
      &#xa0;&#xa0;- ID_539808919&#xa0;&#xa0;&#xa0;E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\MarkdownHelper\edofro
    </p>
    <p>
      &#xa0;&#xa0;- ID_62072781&#xa0;&#xa0;&#xa0;E:\Users\Edo\Documents\GitHub\Freeplane_MarkdownHelper\MarkdownHelper\tmp
    </p>
    <p>
      
    </p>
    <p>
      - path in map and file are equal (but node link not)&#xa0;&#xa0;--&gt; links corrected
    </p>
    <p>
      
    </p>
    <p>
      - files without nodes&#xa0;&#xa0;--&gt; imported as nodes
    </p>
  </body>
</html></richcontent>
<node TEXT="MarkdownHelper Project.mm" ID="ID_1640439120" CREATED="1678219062792" MODIFIED="1678219062796" LINK="file:/E:/Users/Edo/Documents/GitHub/Freeplane_MarkdownHelper/MarkdownHelper%20Project.mm"/>
</node>
</node>
</node>
</map>
