//MarkdownHelper



apply plugin: 'groovy'

targetCompatibility='1.8'

// 1. I have to define which freeplane version is going to be used to look at the libreries (freeplane and groovy)
def FPversion = 'instaled'
def freeplaneDirs = [
        instaled     : "C:/Program Files/Freeplane",
        protableApps : "C:/PortableApps/FreeplanePortable/App/Freeplane",
        v9_15         : "C:/Freeplane/freeplane-1.9.15-pre01",
        v10_1         : "C:/Freeplane/freeplane-1.10.2",
        v10_x         : "C:/Freeplane/freeplane-1.10.x"
    ]
def freeplaneDir = freeplaneDirs[FPversion]

def groovyVersion = '4.0.1'
    def isNewerGroovy = groovyVersion.startsWith('4.')
    def groovyGroupId = isNewerGroovy?'org.apache.groovy':'org.codehaus.groovy'


libsDirName = "${rootDir}/lib"
//clean.doFirst { delete "${rootDir}/lib" } // para eliminar todas las .jar
clean.doFirst { delete "${rootDir}/lib/MarkdownHelper.jar" } //para eliminar sólo una de las .jar y que no me borrara markedj ni jsoup

repositories {
    mavenCentral()
    flatDir name: 'localGitDepsRepository',
    dirs: [
        "${freeplaneDir}",
        "${freeplaneDir}/core/org.freeplane.core/lib",
        "${freeplaneDir}/plugins/org.freeplane.plugin.script/lib",
        // "${freeplaneDir}/plugins/org.freeplane.plugin.markdown/lib", // para incluir markedj.jar
        "${rootDir}/lib" //ahí puse markedj y jsoup
    ]
}


// I had this error:
    // Could not find method compile() for arguments [{name=freeplanelauncher}] on object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler
// answer:
    // https://stackoverflow.com/questions/69733508/couldnt-find-compile-for-arguments-directory-libs-on-object-of-type-org-g

dependencies {
    implementation name : 'freeplanelauncher'
    implementation name : 'freeplaneviewer'
    implementation group: 'org.freeplane.core',   name: 'freeplaneeditor', version:"+"
    implementation group: 'org.freeplane.script', name: 'plugin', version: '+'
    implementation name : 'markedj', version: '+' //<---- para markedj
    implementation name : 'jsoup'  , version: '+' //<---- para jsoup
    if(isNewerGroovy){
        implementation platform ("${groovyGroupId}:groovy-all:${groovyVersion}".toString()) {
            exclude group:groovyGroupId, module:'groovy-test'
            exclude group:groovyGroupId, module:'groovy-test-junit5'
            exclude group:groovyGroupId, module:'groovy-testng'
            exclude group:groovyGroupId, module:'groovy-ant'
            exclude group:groovyGroupId, module:'groovy-docgenerator'
            exclude group:groovyGroupId, module:'groovy-groovydoc'
            exclude group:groovyGroupId, module:'groovy-cli-commons'
            exclude group:groovyGroupId, module:'groovy-cli-picocli'
        }
    } else {
        implementation ("${groovyGroupId}:groovy-all:${groovyVersion}".toString()) {
            exclude group:groovyGroupId, module:'groovy-test'
            exclude group:groovyGroupId, module:'groovy-test-junit5'
            exclude group:groovyGroupId, module:'groovy-testng'
            exclude group:groovyGroupId, module:'groovy-ant'
            exclude group:groovyGroupId, module:'groovy-docgenerator'
            exclude group:groovyGroupId, module:'groovy-groovydoc'
            exclude group:groovyGroupId, module:'groovy-cli-commons'
            exclude group:groovyGroupId, module:'groovy-cli-picocli'
        }
    }
    implementation "${groovyGroupId}:groovy-dateutil:${groovyVersion}".toString()
}